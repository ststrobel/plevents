{"version":3,"sources":["./src/app/models/tenant.ts","./src/app/views/error/error.component.ts","./src/app/views/error/error.component.html","./src/app/views/password-forgotten/password-forgotten.component.ts","./src/app/views/password-forgotten/password-forgotten.component.html","./src/app/models/tenant-relation.ts","./src/app/models/user.ts","./src/app/components/user-management/user-management.component.ts","./src/app/components/user-management/user-management.component.html","./src/app/components/calendar/calendar.component.ts","./src/app/components/calendar/calendar.component.html","./src/app/components/event-select/event-select.component.ts","./src/app/components/event-select/event-select.component.html","./src/environments/environment.ts","./src/app/views/imprint/imprint.component.ts","./src/app/views/imprint/imprint.component.html","./src/app/helpers/auth.guard.ts","./src/app/components/toast/toast.component.ts","./src/app/components/toast/toast.component.html","./src/app/views/events/events.component.ts","./src/app/views/events/events.component.html","./src/app/models/category.ts","./src/app/services/subscription.service.ts","./src/app/views/tenant-registration/tenant-registration.component.ts","./src/app/views/tenant-registration/tenant-registration.component.html","./src/app/views/tenant/tenant.component.ts","./src/app/views/tenant/tenant.component.html","./src/app/helpers/basic-auth.interceptor.ts","./src/app/services/notification.service.ts","./src/app/services/app.service.ts","./src/app/views/login/login.component.ts","./src/app/views/login/login.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/helpers/tenant.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/subscription.ts","./src/app/models/event-relation.ts","./src/app/components/subscription/subscription.component.ts","./src/app/components/subscription/subscription.component.html","./src/app/views/legal/legal.component.ts","./src/app/views/legal/legal.component.html","../common/tenant-relation.ts","../common/frontend.routes.ts","./src/app/views/registration/registration.component.ts","./src/app/views/registration/registration.component.html","./src/app/app.module.ts","./src/app/models/event.ts","./src/app/services/category.service.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/services/tenant.service.ts","./src/app/services/authentication.service.ts","./src/app/helpers/error.interceptor.ts","./src/app/components/category-management/category-management.component.ts","./src/app/components/category-management/category-management.component.html","./src/app/services/event.service.ts","./src/app/views/complete-registration/complete-registration.component.ts","./src/app/views/complete-registration/complete-registration.component.html","./src/app/views/dashboard/dashboard.component.ts","./src/app/views/dashboard/dashboard.component.html","./src/app/components/loading/loading.component.ts","./src/app/components/loading/loading.component.html","./src/app/views/password-reset/password-reset.component.ts","./src/app/views/password-reset/password-reset.component.html","./src/app/services/user.service.ts","./src/app/views/my-accounts/my-accounts.component.ts","./src/app/views/my-accounts/my-accounts.component.html","./src/app/views/intro/intro.component.ts","./src/app/views/intro/intro.component.html","./src/app/models/invitation.ts","./src/app/app-routing.module.ts","./src/app/views/profile/profile.component.ts","./src/app/views/profile/profile.component.html","./src/app/models/week.ts","./src/app/models/participant.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { TenantI } from '../../../../common/tenant';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as moment from 'moment';\r\n\r\nexport class Tenant implements TenantI {\r\n  id?: string;\r\n  name: string;\r\n  active: boolean;\r\n  logo: string;\r\n  path: string;\r\n  consentTeaser1: string;\r\n  consentText1: string;\r\n  consentTeaser2: string;\r\n  consentText2: string;\r\n  color: string;\r\n  subscriptionUntil: Date;\r\n  stripeUserId?: string;\r\n  get colorDarkened(): string {\r\n    return shadeColor(this.color, -15);\r\n  }\r\n\r\n  constructor(name: string, path: string) {\r\n    this.name = name;\r\n    this.path = path;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantAdapter implements Adapter<Tenant> {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  adapt(item: any): Tenant {\r\n    const t = new Tenant(item.name, item.path);\r\n    t.id = item.id;\r\n    t.consentTeaser1 = item.consentTeaser1;\r\n    t.consentText1 = item.consentText1;\r\n    t.active = item.active;\r\n    t.consentTeaser2 = item.consentTeaser2;\r\n    t.consentText2 = item.consentText2;\r\n    t.color = item.color;\r\n    t.stripeUserId = item.stripeUserId;\r\n    if (item.logo && item.logo.length > 0) {\r\n      t.logo = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n        item.logo\r\n      ) as string;\r\n    } else {\r\n      t.logo = null;\r\n    }\r\n    if (item.subscriptionUntil) {\r\n      t.subscriptionUntil = moment(item.subscriptionUntil).toDate();\r\n    }\r\n    return t;\r\n  }\r\n}\r\n\r\nfunction shadeColor(color: string, percent: number) {\r\n  let R = parseInt(color.substring(1, 3), 16);\r\n  let G = parseInt(color.substring(3, 5), 16);\r\n  let B = parseInt(color.substring(5, 7), 16);\r\n\r\n  R = parseInt(`${(R * (100 + percent)) / 100}`);\r\n  G = parseInt(`${(G * (100 + percent)) / 100}`);\r\n  B = parseInt(`${(B * (100 + percent)) / 100}`);\r\n\r\n  R = R < 255 ? R : 255;\r\n  G = G < 255 ? G : 255;\r\n  B = B < 255 ? B : 255;\r\n\r\n  let RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\r\n  let GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\r\n  let BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\r\n\r\n  return '#' + RR + GG + BB;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss'],\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n  errorTitle: string;\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    // extract the error type parameter and display it accordingly\r\n    const type = this.route.snapshot.params.errortype;\r\n    if (type === 'account-not-found') {\r\n      this.errorTitle = 'Pfad ungültig';\r\n      this.errorMessage = 'Die aufgerufene URL existiert nicht';\r\n    } else {\r\n      this.errorTitle = 'Fehler';\r\n      this.errorMessage = 'Es ist ein Fehler aufgetreten';\r\n    }\r\n  }\r\n}\r\n","<h2>{{errorTitle}}</h2>\r\n<div class=\"alert alert-danger mt-3 mb-3\">\r\n  {{ errorMessage }}\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\n\r\n@Component({\r\n  selector: 'app-password-forgotten',\r\n  templateUrl: './password-forgotten.component.html',\r\n  styleUrls: ['./password-forgotten.component.scss'],\r\n})\r\nexport class PasswordForgottenComponent implements OnInit {\r\n  resetForm: FormGroup = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n  });\r\n  loading = false;\r\n  returnUrl: string;\r\n  userSubscription: Subscription;\r\n  passwordResetStatus = '';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private appService: AppService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.appService.getCurrentUser()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // check if there is a logged-in user already. if so, forward directly to the profile\r\n    this.userSubscription = this.appService.user.subscribe(user => {\r\n      if (user) {\r\n        this.router.navigate([`/${ROUTES.PROFILE}`]);\r\n      }\r\n    });\r\n  }\r\n\r\n  requestPasswordReset(): void {\r\n    // if a valid email is given, use that email to send a password reset mail to\r\n    if (this.resetForm.invalid) {\r\n      this.resetForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.userService\r\n      .initiatePasswordReset(this.resetForm.get('email').value)\r\n      .subscribe(\r\n        () => {\r\n          this.passwordResetStatus = 'success';\r\n          this.loading = false;\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.passwordResetStatus = 'error';\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 col-md-8 offset-md-2 col-xl-4 offset-xl-4\">\r\n    <div class=\"card\">\r\n      <h4 class=\"card-header\">Passwort Rücksetzung</h4>\r\n      <div class=\"card-body\">\r\n        <form\r\n          [formGroup]=\"resetForm\"\r\n          (ngSubmit)=\"requestPasswordReset()\"\r\n          *ngIf=\"passwordResetStatus !== 'success'\"\r\n        >\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              formControlName=\"email\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  resetForm.get('email').invalid &&\r\n                  resetForm.get('email').touched\r\n              }\"\r\n              required\r\n            />\r\n            <div\r\n              *ngIf=\"\r\n                resetForm.get('email').errors && resetForm.get('email').touched\r\n              \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              <div *ngIf=\"resetForm.get('email').errors.required\">\r\n                Bitte Email angeben\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-success\">\r\n              <span\r\n                *ngIf=\"loading\"\r\n                class=\"spinner-border spinner-border-sm mr-1\"\r\n              ></span>\r\n              Passwort zurücksetzen\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div\r\n          *ngIf=\"passwordResetStatus === 'success'\"\r\n          class=\"alert alert-success text-center mt-3 mb-0\"\r\n        >\r\n          Falls Ihre Email-Adresse im System bekannt ist, schicken wir Ihnen\r\n          eine Email mit einem Link zum Passwort-Reset zu.\r\n        </div>\r\n        <div\r\n          *ngIf=\"passwordResetStatus === 'error'\"\r\n          class=\"alert alert-warning text-center mt-3 mb-0\"\r\n        >\r\n          Beim Passwort-Reset trat ein Fehler auf. Bitte versuchen Sie es später\r\n          nochmals\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ROLE, TenantRelationI } from '../../../../common/tenant-relation';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { User, UserAdapter } from './user';\r\nimport { Tenant, TenantAdapter } from './tenant';\r\n\r\nexport class TenantRelation implements TenantRelationI {\r\n  id: string;\r\n  active: boolean;\r\n  user?: User;\r\n  userId: string;\r\n  tenant?: Tenant;\r\n  tenantId: string;\r\n  role: ROLE;\r\n\r\n  isOwner(): boolean {\r\n    return this.role === ROLE.OWNER;\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.role === ROLE.OWNER || this.role === ROLE.ADMIN;\r\n  }\r\n\r\n  isMember(): boolean {\r\n    return true;\r\n  }\r\n\r\n  hasRole(roleName: string): boolean {\r\n    if (this.role === ROLE.OWNER) return true;\r\n    if (this.role === ROLE.ADMIN && roleName !== ROLE.OWNER) return true;\r\n    return false;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantRelationAdapter implements Adapter<TenantRelation> {\r\n  constructor(\r\n    private userAdapter: UserAdapter,\r\n    private tenantAdapter: TenantAdapter\r\n  ) {}\r\n  adapt(item: any): TenantRelation {\r\n    const relation = new TenantRelation();\r\n    relation.id = item.id;\r\n    relation.active = item.active;\r\n    relation.userId = item.userId;\r\n    relation.tenantId = item.tenantId;\r\n    relation.role = item.role;\r\n    if (item.user) {\r\n      relation.user = this.userAdapter.adapt(item.user);\r\n    }\r\n    if (item.tenant) {\r\n      relation.tenant = this.tenantAdapter.adapt(item.tenant);\r\n    }\r\n    return relation;\r\n  }\r\n}\r\n","import { UserI } from '../../../../common/user';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { EventRelation, EventRelationAdapter } from './event-relation';\r\nimport { each } from 'lodash';\r\nimport { Event } from './event';\r\n\r\nexport class User implements UserI {\r\n  id: string;\r\n  tenantId: string;\r\n  email: string;\r\n  name: string;\r\n  password: string;\r\n  authdata?: string;\r\n  active: boolean;\r\n  eventRelations: EventRelation[];\r\n\r\n  constructor(email: string) {\r\n    this.email = email;\r\n  }\r\n\r\n  public hasAccessToEvent(eventOrEventId: string | Event): boolean {\r\n    if (typeof eventOrEventId === 'string') {\r\n      const eventId = eventOrEventId;\r\n      return (\r\n        this.eventRelations &&\r\n        (this.eventRelations.find(relation => relation.eventId === eventId) !==\r\n          undefined ||\r\n          this.eventRelations.find(\r\n            relation => relation.eventSeriesId === eventId\r\n          ) !== undefined)\r\n      );\r\n    } else {\r\n      return (\r\n        this.eventRelations &&\r\n        (this.eventRelations.find(\r\n          relation => relation.eventId === eventOrEventId.id\r\n        ) !== undefined ||\r\n          (eventOrEventId.eventSeries &&\r\n            this.eventRelations.find(\r\n              relation =>\r\n                relation.eventSeriesId === eventOrEventId.eventSeries.id\r\n            ) !== undefined))\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAdapter implements Adapter<User> {\r\n  constructor(private eventRelationAdapter: EventRelationAdapter) {}\r\n  adapt(item: any): User {\r\n    const u = new User(item.email);\r\n    u.id = item.id;\r\n    u.name = item.name;\r\n    u.tenantId = item.tenantId;\r\n    u.active = item.active;\r\n    u.eventRelations = [];\r\n    if (item.eventRelations) {\r\n      each(item.eventRelations, rel => {\r\n        u.eventRelations.push(this.eventRelationAdapter.adapt(rel));\r\n      });\r\n    }\r\n    return u;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { reject, findIndex, find, filter, map, uniqBy, sortBy } from 'lodash';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Invitation } from 'src/app/models/invitation';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { TenantRelation } from 'src/app/models/tenant-relation';\r\nimport { User } from 'src/app/models/user';\r\nimport { Event } from 'src/app/models/event';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\nimport { ROLE } from '../../../../../common/tenant-relation';\r\nimport { EventSeriesI } from '../../../../../common/event-series';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss'],\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  ROLE = ROLE;\r\n  inviteAdminForm: FormGroup = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n  });\r\n  tenantUserRelations: TenantRelation[] = null;\r\n  @Input()\r\n  tenant: Tenant;\r\n  invitations: Invitation[];\r\n  invitedUser: string = null;\r\n  userExists: string = null;\r\n  modalRef: BsModalRef;\r\n  selectedUser: User = null;\r\n  singleEvents: Event[];\r\n  eventSeries: EventSeriesI[];\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private tenantService: TenantService,\r\n    private appService: AppService,\r\n    private modalService: BsModalService,\r\n    private router: Router,\r\n    private eventService: EventService,\r\n    private notification: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // load users for this tenant\r\n    this.tenantService\r\n      .getUsers(this.tenant.id)\r\n      .subscribe((relations: TenantRelation[]) => {\r\n        this.tenantUserRelations = sortBy(relations, 'user.name');\r\n      });\r\n    if (this.appService.hasRole(this.tenant.id, ROLE.OWNER)) {\r\n      this.tenantService\r\n        .getOpenInvitations(this.tenant.id)\r\n        .subscribe((invitations: Invitation[]) => {\r\n          this.invitations = sortBy(invitations, 'email');\r\n        });\r\n    } else {\r\n      this.invitations = null;\r\n    }\r\n  }\r\n\r\n  activate(user: User): void {\r\n    this.userService\r\n      .activate(this.tenant.id, user.id)\r\n      .subscribe((activatedUser: User) => {\r\n        const index = findIndex(this.tenantUserRelations, { userId: user.id });\r\n        this.tenantUserRelations[index].active = true;\r\n      });\r\n  }\r\n\r\n  inviteNewAdmin(): void {\r\n    this.invitedUser = null;\r\n    this.userExists = null;\r\n    if (this.inviteAdminForm.invalid) {\r\n      this.inviteAdminForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    // check if an active admin already exists with the entered email address\r\n    const email = this.inviteAdminForm.get('email').value.toLowerCase();\r\n    const existingMember = find(\r\n      this.tenantUserRelations,\r\n      (relation: TenantRelation) => {\r\n        return relation.user.email.toLowerCase() === email;\r\n      }\r\n    );\r\n    if (existingMember) {\r\n      this.userExists =\r\n        'Ein Nutzer mit Email Adresse ' + email + ' existiert bereits';\r\n      return;\r\n    }\r\n    this.tenantService\r\n      .addUser(this.tenant.id, this.inviteAdminForm.get('email').value)\r\n      .subscribe(\r\n        (invitation: Invitation) => {\r\n          // only add the invitation to the list if there is no invitation with this email yet\r\n          if (!find(this.invitations, { email: invitation.email })) {\r\n            this.invitations.push(invitation);\r\n          }\r\n          this.invitedUser = invitation.email + ' wurde eingeladen';\r\n          this.inviteAdminForm.reset();\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.notification.error('Es trat ein Fehler auf');\r\n        }\r\n      );\r\n  }\r\n\r\n  delete(user: User): void {\r\n    this.notification.confirm({\r\n      title: 'Nutzer entfernen?',\r\n      text: 'Wirklich diesen Nutzer entfernen?',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Entfernen',\r\n      yesCallback: () => {\r\n        this.userService.removeFromTenant(this.tenant.id, user.id).subscribe(\r\n          () => {\r\n            this.tenantUserRelations = reject(this.tenantUserRelations, {\r\n              userId: user.id,\r\n            });\r\n            // if the user removed himself, jump to the profile:\r\n            if (user.id === this.appService.getCurrentUser().id) {\r\n              this.tenantService.getAll().subscribe();\r\n              this.router.navigate([`/${ROUTES.PROFILE}`]);\r\n            }\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            this.notification.error('Beim Löschen trat leider ein Fehler auf!');\r\n          }\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  assignRole(relation: TenantRelation, role: ROLE): void {\r\n    relation.role = role;\r\n    this.userService\r\n      .setRole(relation.tenantId, relation.userId, role)\r\n      .subscribe(() => {\r\n        this.notification.success('Rolle zugewiesen');\r\n      });\r\n  }\r\n\r\n  revokeInvitation(invitation: Invitation): void {\r\n    this.notification.confirm({\r\n      title: 'Einladung zurückziehen?',\r\n      text: 'Möchten Sie die Einladung wirklich zurückziehen?',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Ja',\r\n      yesCallback: () => {\r\n        this.tenantService\r\n          .revokeOpenInvitations(invitation.tenantId, invitation.id)\r\n          .subscribe(\r\n            () => {\r\n              this.notification.success('Die Einladung wurde zurückgezogen');\r\n              this.invitations = reject(this.invitations, invitation);\r\n            },\r\n            error => {\r\n              console.error(error);\r\n              this.notification.error('Es trat ein Fehler auf');\r\n            }\r\n          );\r\n      },\r\n    });\r\n  }\r\n\r\n  showEventRelations(user: User, template: TemplateRef<any>): void {\r\n    this.selectedUser = user;\r\n    this.modalRef = this.modalService.show(template);\r\n    // load the events for the client\r\n    this.eventService\r\n      .getEvents(this.tenant.id, null, null, true)\r\n      .subscribe((events: Event[]) => {\r\n        this.singleEvents = filter(events, event => event.singleOccurence);\r\n        this.eventSeries = uniqBy(\r\n          map(\r\n            filter(events, event => event.eventSeries),\r\n            'eventSeries'\r\n          ),\r\n          'id'\r\n        );\r\n      });\r\n  }\r\n\r\n  toggleAccessOnEvent(eventId: string): void {\r\n    if (this.selectedUser.hasAccessToEvent(eventId)) {\r\n      this.userService\r\n        .denyAccessToEvent(this.tenant.id, this.selectedUser.id, eventId)\r\n        .subscribe(() => {\r\n          this.selectedUser.eventRelations = reject(\r\n            this.selectedUser.eventRelations,\r\n            relation => relation.eventId === eventId\r\n          );\r\n        });\r\n    } else {\r\n      this.userService\r\n        .allowAccessToEvent(this.tenant.id, this.selectedUser.id, eventId)\r\n        .subscribe(relation => {\r\n          this.selectedUser.eventRelations.push(relation);\r\n        });\r\n    }\r\n  }\r\n\r\n  toggleAccessOnEventSeries(eventSeriesId: string): void {\r\n    if (this.selectedUser.hasAccessToEvent(eventSeriesId)) {\r\n      this.userService\r\n        .denyAccessToEventSeries(\r\n          this.tenant.id,\r\n          this.selectedUser.id,\r\n          eventSeriesId\r\n        )\r\n        .subscribe(() => {\r\n          this.selectedUser.eventRelations = reject(\r\n            this.selectedUser.eventRelations,\r\n            relation => relation.eventSeriesId === eventSeriesId\r\n          );\r\n        });\r\n    } else {\r\n      this.userService\r\n        .allowAccessToEventSeries(\r\n          this.tenant.id,\r\n          this.selectedUser.id,\r\n          eventSeriesId\r\n        )\r\n        .subscribe(relation => {\r\n          this.selectedUser.eventRelations.push(relation);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<h4>Nutzerverwaltung</h4>\r\n<p>\r\n  Verwalten Sie die Mitglieder Ihres Organisationen und vergeben Sie\r\n  entsprechende Rollen.\r\n</p>\r\n<ul class=\"list-group\">\r\n  <li\r\n    class=\"list-group-item list-group-item-action\"\r\n    *ngFor=\"let tenantUserRelation of tenantUserRelations\"\r\n    [ngStyle]=\"{\r\n      'background-color':\r\n        tenantUserRelation.active === false ? 'whitesmoke' : ''\r\n    }\"\r\n  >\r\n    <div class=\"row\">\r\n      <div class=\"col-7\">\r\n        {{ tenantUserRelation.user.name }}<br />\r\n        <small\r\n          ><a href=\"mailto:{{ tenantUserRelation.user.email }}\">{{\r\n            tenantUserRelation.user.email\r\n          }}</a></small\r\n        >\r\n      </div>\r\n      <div class=\"col-5 text-right\" style=\"line-height: 48px\">\r\n        <button\r\n          *ngIf=\"!tenantUserRelation.active\"\r\n          class=\"btn btn-sm btn-outline-success ml-2\"\r\n          (click)=\"activate(tenantUserRelation.user)\"\r\n        >\r\n          Zulassen\r\n        </button>\r\n        <div\r\n          class=\"dropdown d-inline-block\"\r\n          *ngIf=\"\r\n            tenantUserRelation.active &&\r\n            tenantUserRelation.userId !== appService.getCurrentUser().id &&\r\n            appService.hasRole(tenantUserRelation.tenantId, ROLE.OWNER)\r\n          \"\r\n        >\r\n          <button\r\n            class=\"btn btn-sm btn-secondary dropdown-toggle\"\r\n            type=\"button\"\r\n            data-toggle=\"dropdown\"\r\n          >\r\n            <span *ngIf=\"tenantUserRelation.role === ROLE.OWNER\"\r\n              ><i class=\"fas fa-crown\"></i> Owner</span\r\n            >\r\n            <span *ngIf=\"tenantUserRelation.role === ROLE.ADMIN\">Admin</span>\r\n            <span *ngIf=\"tenantUserRelation.role === ROLE.MEMBER\">Leiter</span>\r\n          </button>\r\n          <div class=\"dropdown-menu\">\r\n            <a\r\n              class=\"dropdown-item clickable\"\r\n              (click)=\"assignRole(tenantUserRelation, ROLE.OWNER)\"\r\n              ><i class=\"fas fa-crown\"></i> Owner</a\r\n            >\r\n            <a\r\n              class=\"dropdown-item clickable\"\r\n              (click)=\"assignRole(tenantUserRelation, ROLE.ADMIN)\"\r\n              >Admin</a\r\n            >\r\n            <a\r\n              class=\"dropdown-item clickable\"\r\n              (click)=\"assignRole(tenantUserRelation, ROLE.MEMBER)\"\r\n              >Leiter</a\r\n            >\r\n          </div>\r\n        </div>\r\n        <span\r\n          class=\"badge\"\r\n          *ngIf=\"\r\n            tenantUserRelation.userId === appService.getCurrentUser().id ||\r\n            (tenantUserRelation.active &&\r\n              !appService.hasRole(tenantUserRelation.tenantId, ROLE.OWNER))\r\n          \"\r\n          [ngClass]=\"{\r\n            'badge-success':\r\n              tenantUserRelation.isAdmin() && !tenantUserRelation.isOwner(),\r\n            'badge-primary': tenantUserRelation.isOwner(),\r\n            'badge-secondary':\r\n              !tenantUserRelation.isAdmin() && !tenantUserRelation.isOwner()\r\n          }\"\r\n        >\r\n          <span *ngIf=\"tenantUserRelation.isOwner()\"\r\n            ><i class=\"fas fa-crown\"></i> Owner</span\r\n          >\r\n          <span\r\n            *ngIf=\"\r\n              tenantUserRelation.isAdmin() && !tenantUserRelation.isOwner()\r\n            \"\r\n            >Admin</span\r\n          >\r\n          <span\r\n            *ngIf=\"\r\n              !tenantUserRelation.isAdmin() && !tenantUserRelation.isOwner()\r\n            \"\r\n            >Leiter</span\r\n          >\r\n        </span>\r\n        <i\r\n          class=\"fas fa-user-shield clickable ml-4\"\r\n          *ngIf=\"\r\n            tenantUserRelation.role === ROLE.MEMBER &&\r\n            appService.hasRole(tenantUserRelation.tenantId, ROLE.ADMIN)\r\n          \"\r\n          (click)=\"\r\n            showEventRelations(tenantUserRelation.user, showEventRelationsModal)\r\n          \"\r\n        ></i>\r\n        <i\r\n          class=\"fas fa-trash-alt clickable ml-4 text-danger\"\r\n          *ngIf=\"\r\n            tenantUserRelation.role === ROLE.MEMBER ||\r\n            tenantUserRelation.active === false ||\r\n            appService.hasRole(tenantUserRelation.tenantId, ROLE.OWNER)\r\n          \"\r\n          (click)=\"delete(tenantUserRelation.user)\"\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  </li>\r\n  <li\r\n    class=\"list-group-item list-group-item-action text-center\"\r\n    *ngIf=\"!tenantUserRelations\"\r\n  >\r\n    <loading></loading> Nutzer werden geladen\r\n  </li>\r\n  <li\r\n    class=\"list-group-item list-group-item-action\"\r\n    *ngFor=\"let invitation of invitations\"\r\n    style=\"background-color: whitesmoke\"\r\n  >\r\n    <div class=\"row\">\r\n      <div class=\"col-7\">\r\n        <span class=\"badge badge-secondary\">Einladung verschickt</span>\r\n        <br />\r\n        <small\r\n          ><a href=\"mailto:{{ invitation.email }}\">{{\r\n            invitation.email\r\n          }}</a></small\r\n        >\r\n      </div>\r\n      <div class=\"col-5\" style=\"line-height: 48px\">\r\n        <button\r\n          class=\"float-right btn btn-sm btn-outline-danger\"\r\n          (click)=\"revokeInvitation(invitation)\"\r\n        >\r\n          Einladung zurückziehen\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </li>\r\n  <li class=\"list-group-item list-group-item-action\">\r\n    <form [formGroup]=\"inviteAdminForm\" (ngSubmit)=\"inviteNewAdmin()\">\r\n      <div class=\"d-flex\">\r\n        <input\r\n          class=\"form-control flex-grow-1\"\r\n          id=\"inviteEmail\"\r\n          type=\"email\"\r\n          placeholder=\"Email-Adresse des neuen Nutzers\"\r\n          formControlName=\"email\"\r\n        />\r\n        <button class=\"ml-3 btn btn-outline-success text-nowrap\">\r\n          Nutzer einladen\r\n        </button>\r\n      </div>\r\n    </form>\r\n    <div class=\"alert alert-success mt-2\" *ngIf=\"invitedUser\">\r\n      {{ invitedUser }}\r\n    </div>\r\n    <div class=\"alert alert-warning mt-2\" *ngIf=\"userExists\">\r\n      {{ userExists }}\r\n    </div>\r\n  </li>\r\n</ul>\r\n\r\n<!-- modal to select which events the user has access to -->\r\n<ng-template #showEventRelationsModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Zugriff auf Teilnehmerdaten</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>\r\n      Legen Sie fest, zu welchen Veranstaltungen\r\n      <b>{{ selectedUser.name }}</b> Zugriff auf die Teilnehmerliste erhält:\r\n    </p>\r\n    <h5 *ngIf=\"eventSeries && eventSeries.length > 0\">Serienevents</h5>\r\n    <ul class=\"list-group mb-4\" *ngIf=\"eventSeries && eventSeries.length > 0\">\r\n      <li\r\n        class=\"list-group-item list-group-item-action\"\r\n        *ngFor=\"let event of eventSeries\"\r\n      >\r\n        <div class=\"d-flex\">\r\n          <div class=\"flex-grow-1\">{{ event.name }}</div>\r\n          <div style=\"width: 50px\">\r\n            <div\r\n              class=\"custom-control custom-switch float-right clickable\"\r\n              (click)=\"toggleAccessOnEventSeries(event.id)\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input clickable\"\r\n                [checked]=\"selectedUser.hasAccessToEvent(event.id)\"\r\n              />\r\n              <label class=\"custom-control-label clickable m-0\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <h5 *ngIf=\"singleEvents && singleEvents.length > 0\">\r\n      Einzelveranstaltungen\r\n    </h5>\r\n    <ul class=\"list-group\" *ngIf=\"singleEvents && singleEvents.length > 0\">\r\n      <li\r\n        class=\"list-group-item list-group-item-action\"\r\n        *ngFor=\"let singleEvent of singleEvents\"\r\n      >\r\n        <div class=\"d-flex\">\r\n          <div class=\"flex-grow-1\">{{ singleEvent.name }}</div>\r\n          <div style=\"width: 50px\">\r\n            <div\r\n              class=\"custom-control custom-switch float-right clickable\"\r\n              (click)=\"toggleAccessOnEvent(singleEvent.id)\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input clickable\"\r\n                [checked]=\"selectedUser.hasAccessToEvent(singleEvent.id)\"\r\n              />\r\n              <label class=\"custom-control-label clickable m-0\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <div class=\"alert alert-light\" *ngIf=\"!singleEvents && !eventSeries\">\r\n      Events werden geladen...\r\n    </div>\r\n    <div\r\n      class=\"alert alert-secondary\"\r\n      *ngIf=\"\r\n        singleEvents &&\r\n        singleEvents.length === 0 &&\r\n        eventSeries &&\r\n        eventSeries.length === 0\r\n      \"\r\n    >\r\n      Es sind keine Veranstaltungen vorhanden.\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      Schließen\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { each, filter, sortBy } from 'lodash';\r\nimport * as moment from 'moment';\r\nimport { Event } from '../../models/event';\r\nimport { Week } from 'src/app/models/week';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { ROLE } from '../../../../../common/tenant-relation';\r\n\r\n@Component({\r\n  selector: 'calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.scss'],\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n  @Input()\r\n  events: Event[];\r\n  @Input()\r\n  tenant: Tenant;\r\n\r\n  @Output()\r\n  eventClicked = new EventEmitter();\r\n  @Output()\r\n  statusToggled = new EventEmitter();\r\n\r\n  weeks: Week[];\r\n  months: number[];\r\n  ROLE = ROLE;\r\n  today = moment().dayOfYear();\r\n\r\n  constructor(public appService: AppService) {}\r\n\r\n  ngOnInit(): void {\r\n    // calculate the months to come this year (including the previous one)\r\n    this.months = new Array<number>();\r\n    for (\r\n      let m = moment().month() - 1 >= 0 ? moment().month() - 1 : 0;\r\n      m < 12;\r\n      m++\r\n    ) {\r\n      this.months.push(m);\r\n    }\r\n    // put the events in the corresponding weeks\r\n    this.putEventsInWeeks();\r\n  }\r\n\r\n  weeksInMonth(month: number): Week[] {\r\n    return filter(this.weeks, week => {\r\n      return (\r\n        week.startOfWeek.month() === month || week.endOfWeek.month() === month\r\n      );\r\n    });\r\n  }\r\n\r\n  displayMonth(month: number): string {\r\n    return moment().month(month).format('MMMM');\r\n  }\r\n\r\n  currentCW(): number {\r\n    return moment().isoWeek();\r\n  }\r\n\r\n  clickOn(event: Event): void {\r\n    this.eventClicked.emit(event);\r\n  }\r\n\r\n  toggleDisabled(clickEvent: any, event: Event): void {\r\n    clickEvent.stopPropagation();\r\n    this.statusToggled.emit(event);\r\n  }\r\n\r\n  /**\r\n   * returns the day within year\r\n   * @param week\r\n   * @param month\r\n   */\r\n  daysInWeek(week: Week, month: number): number[] {\r\n    const days = new Array<number>(7);\r\n    for (\r\n      let day = week.startOfWeek.dayOfYear();\r\n      day < week.startOfWeek.dayOfYear() + 7;\r\n      day++\r\n    ) {\r\n      if (moment().dayOfYear(day).month() === month) {\r\n        days[moment().dayOfYear(day).weekday()] = day;\r\n      }\r\n    }\r\n    return days;\r\n  }\r\n\r\n  dayOfMonth(dayOfYear: number): string {\r\n    if (dayOfYear) {\r\n      return moment().dayOfYear(dayOfYear).format('D');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  eventsOnDay(day: number, week: Week): Event[] {\r\n    return filter(week.events, event => {\r\n      return moment(event.date).dayOfYear() === day;\r\n    });\r\n  }\r\n\r\n  putEventsInWeeks(): void {\r\n    this.weeks = new Array<Week>();\r\n    const sortOrder = ['weekDay', 'time', 'name'];\r\n    this.events = sortBy(this.events, sortOrder);\r\n    // prepare the weeks, calculate the past 4 weeks until the end of the year:\r\n    const today = moment();\r\n    const weekNumberFourWeeksAgo = today.clone().subtract(4, 'weeks').week();\r\n    const startOfWeekFourWeeksAgo = today\r\n      .clone()\r\n      .startOf('week')\r\n      .subtract(4, 'weeks');\r\n    const endOfWeekFourWeeksAgo = today\r\n      .clone()\r\n      .endOf('week')\r\n      .subtract(4, 'weeks');\r\n    \r\n    for (\r\n      let kw = today.week() - 4;\r\n      kw <= moment().date(31).month(11).isoWeek();\r\n      kw++\r\n    ) {\r\n      const week = new Week(kw);\r\n      week.startOfWeek = startOfWeekFourWeeksAgo\r\n        .clone()\r\n        .add(kw - weekNumberFourWeeksAgo, 'weeks');\r\n      week.endOfWeek = endOfWeekFourWeeksAgo\r\n        .clone()\r\n        .add(kw - weekNumberFourWeeksAgo, 'weeks');\r\n      // add all events for this week\r\n      week.events = filter(this.events, (event: Event) => {\r\n        return moment(event.date).isBetween(\r\n          week.startOfWeek,\r\n          week.endOfWeek,\r\n          undefined,\r\n          '[]'\r\n        );\r\n      });\r\n      this.weeks.push(week);\r\n    }\r\n  }\r\n}\r\n","<div *ngFor=\"let month of months\" class=\"mb-4\">\r\n  <h2>{{ displayMonth(month) }}</h2>\r\n  <table class=\"w-100\">\r\n    <thead>\r\n      <tr>\r\n        <th style=\"width: 9%\">KW</th>\r\n        <th style=\"width: 13%\" class=\"text-center\">Mo</th>\r\n        <th style=\"width: 13%\" class=\"text-center\">Di</th>\r\n        <th style=\"width: 13%\" class=\"text-center\">Mi</th>\r\n        <th style=\"width: 13%\" class=\"text-center\">Do</th>\r\n        <th style=\"width: 13%\" class=\"text-center\">Fr</th>\r\n        <th style=\"width: 13%\" class=\"text-center\">Sa</th>\r\n        <th style=\"width: 13%\" class=\"text-center\">So</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let week of weeksInMonth(month)\">\r\n        <td [ngClass]=\"{ currentCW: week.number === currentCW() }\">\r\n          {{ week.number }}\r\n          <small *ngIf=\"week.number === currentCW()\"\r\n            ><br />aktuelle Woche</small\r\n          >\r\n        </td>\r\n        <!-- each day gets a box -->\r\n        <td\r\n          *ngFor=\"let day of daysInWeek(week, month)\"\r\n          [ngClass]=\"{ greyedOut: day >= 0 }\"\r\n          [ngStyle]=\"{\r\n            border: day === today ? '2px solid var(--plevents-main-color)' : ''\r\n          }\"\r\n        >\r\n          <div>\r\n            <b>{{ dayOfMonth(day) }}</b>\r\n            <div\r\n              *ngFor=\"let event of eventsOnDay(day, week)\"\r\n              style=\"position: relative\"\r\n              [ngClass]=\"{\r\n                'happening': event,\r\n                'unavailable': event && event.takenSeats >= event.maxSeats,\r\n                'disabled': event && event.disabled,\r\n                'empty': event && event.takenSeats === 0,\r\n                'has-passed': event && event.isInPast(),\r\n                'clickable':\r\n                  event &&\r\n                  (appService.hasRole(tenant.id, ROLE.ADMIN) ||\r\n                    appService.getCurrentUser().hasAccessToEvent(event))\r\n              }\"\r\n              (click)=\"clickOn(event)\"\r\n            >\r\n              <div class=\"row\">\r\n                <div class=\"col-12 col-xl-6\">\r\n                  {{ event.name }}\r\n                </div>\r\n                <div class=\"col-12 col-sm-6 col-xl-3\">\r\n                  <small>{{ event.takenSeats }} / {{ event.maxSeats }} </small>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6 col-xl-3\">\r\n                  <small\r\n                    class=\"stateToggler\"\r\n                    [ngClass]=\"{ clickable: !event.isInPast() }\"\r\n                    (click)=\"event.isInPast() || toggleDisabled($event, event)\"\r\n                  >\r\n                    <i *ngIf=\"!event.disabled\">aktiv</i>\r\n                    <i *ngIf=\"event.disabled\">inaktiv</i>\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Event } from 'src/app/models/event';\r\n\r\n@Component({\r\n  selector: 'app-event-select',\r\n  templateUrl: './event-select.component.html',\r\n  styleUrls: ['./event-select.component.scss'],\r\n})\r\nexport class EventSelectComponent implements OnInit {\r\n  @Input()\r\n  event: Event;\r\n  @Input()\r\n  selected: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  availableSeatsText(event: Event): string {\r\n    const free = event.maxSeats - event.takenSeats;\r\n    if (free > 3) {\r\n      return `${free} freie Plätze`;\r\n    }\r\n    if (free > 1) {\r\n      return `nur ${free} freie Plätze`;\r\n    }\r\n    return `noch 1 freier Platz`;\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"event !== undefined\"\r\n  class=\"happening\"\r\n  [ngClass]=\"{\r\n    greyedOut: event.isInPast(),\r\n    full: event.takenSeats >= event.maxSeats,\r\n    selected: selected\r\n  }\"\r\n>\r\n  {{ event.displayDate() }}<br />\r\n  <small class=\"mb-2\"\r\n    >{{ event.takenSeats }} / {{ event.maxSeats }} Teilnehmer\r\n  </small>\r\n  <span *ngIf=\"!event.isInPast()\">\r\n    <span\r\n      *ngIf=\"event.maxSeats - event.takenSeats > 3\"\r\n      class=\"badge badge-success top-right\"\r\n      >{{ availableSeatsText(event) }}</span\r\n    >\r\n    <span\r\n      *ngIf=\"\r\n        event.maxSeats - event.takenSeats <= 3 &&\r\n        event.maxSeats - event.takenSeats > 0\r\n      \"\r\n      class=\"badge badge-warning top-right\"\r\n      >{{ availableSeatsText(event) }}</span\r\n    >\r\n    <span\r\n      *ngIf=\"event.maxSeats - event.takenSeats <= 0\"\r\n      class=\"badge badge-danger top-right\"\r\n      >ausgebucht</span\r\n    >\r\n  </span>\r\n  <span *ngIf=\"event.isInPast()\">\r\n    <span class=\"badge badge-secondary top-right\">bereits vergangen</span>\r\n  </span>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4201',\r\n  domain: 'localhost',\r\n  stripePubKey:\r\n    'pk_test_51HhiAYFrAXm59OieoGtMgGYnOkrkaT3dVshNy2ENIjLgjSltE0oDfrAj8sYsUwKvemMrhdrN5YO9HM2SqycIHnnY00eHMIY6nq',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imprint',\r\n  templateUrl: './imprint.component.html',\r\n  styleUrls: ['./imprint.component.scss']\r\n})\r\nexport class ImprintComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Impressum</h1>\r\n\r\n<h2>Angaben gem&auml;&szlig; &sect; 5 TMG</h2>\r\n<p>\r\n  Stefan Strobel<br />\r\n  Stefan Strobel Software &amp; Service Consulting<br />\r\n  Robert-Bosch-Str. 43<br />\r\n  71277 Rutesheim\r\n</p>\r\n\r\n<h2>Kontakt</h2>\r\n<p>\r\n  Telefon: +49 159 040 533 54<br />\r\n  E-Mail: stefan.strobel@s4-consulting.de\r\n</p>\r\n\r\n<h2>Umsatzsteuer-ID</h2>\r\n<p>\r\n  Umsatzsteuer-Identifikationsnummer gem&auml;&szlig; &sect; 27 a\r\n  Umsatzsteuergesetz:<br />\r\n  DE32504c6906\r\n</p>\r\n\r\n<h2>EU-Streitschlichtung</h2>\r\n<p>\r\n  Die Europ&auml;ische Kommission stellt eine Plattform zur\r\n  Online-Streitbeilegung (OS) bereit:\r\n  <a\r\n    href=\"https://ec.europa.eu/consumers/odr\"\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n    >https://ec.europa.eu/consumers/odr</a\r\n  >.<br />\r\n  Unsere E-Mail-Adresse finden Sie oben im Impressum.\r\n</p>\r\n\r\n<h2>\r\n  Verbraucher&shy;streit&shy;beilegung/Universal&shy;schlichtungs&shy;stelle\r\n</h2>\r\n<p>\r\n  Wir sind nicht bereit oder verpflichtet, an Streitbeilegungsverfahren vor\r\n  einer Verbraucherschlichtungsstelle teilzunehmen.\r\n</p>\r\n\r\n<h3>Haftung f&uuml;r Inhalte</h3>\r\n<p>\r\n  Als Diensteanbieter sind wir gem&auml;&szlig; &sect; 7 Abs.1 TMG f&uuml;r\r\n  eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich.\r\n  Nach &sect;&sect; 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht\r\n  verpflichtet, &uuml;bermittelte oder gespeicherte fremde Informationen zu\r\n  &uuml;berwachen oder nach Umst&auml;nden zu forschen, die auf eine\r\n  rechtswidrige T&auml;tigkeit hinweisen.\r\n</p>\r\n<p>\r\n  Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen\r\n  nach den allgemeinen Gesetzen bleiben hiervon unber&uuml;hrt. Eine\r\n  diesbez&uuml;gliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis\r\n  einer konkreten Rechtsverletzung m&ouml;glich. Bei Bekanntwerden von\r\n  entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.\r\n</p>\r\n<h3>Haftung f&uuml;r Links</h3>\r\n<p>\r\n  Unser Angebot enth&auml;lt Links zu externen Websites Dritter, auf deren\r\n  Inhalte wir keinen Einfluss haben. Deshalb k&ouml;nnen wir f&uuml;r diese\r\n  fremden Inhalte auch keine Gew&auml;hr &uuml;bernehmen. F&uuml;r die Inhalte\r\n  der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der\r\n  Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der\r\n  Verlinkung auf m&ouml;gliche Rechtsverst&ouml;&szlig;e &uuml;berpr&uuml;ft.\r\n  Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar.\r\n</p>\r\n<p>\r\n  Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne\r\n  konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei\r\n  Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend\r\n  entfernen.\r\n</p>\r\n<h3>Urheberrecht</h3>\r\n<p>\r\n  Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten\r\n  unterliegen dem deutschen Urheberrecht. Die Vervielf&auml;ltigung,\r\n  Bearbeitung, Verbreitung und jede Art der Verwertung au&szlig;erhalb der\r\n  Grenzen des Urheberrechtes bed&uuml;rfen der schriftlichen Zustimmung des\r\n  jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur\r\n  f&uuml;r den privaten, nicht kommerziellen Gebrauch gestattet.\r\n</p>\r\n<p>\r\n  Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden,\r\n  werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter\r\n  als solche gekennzeichnet. Sollten Sie trotzdem auf eine\r\n  Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden\r\n  Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte\r\n  umgehend entfernen.\r\n</p>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  CanActivate,\r\n} from '@angular/router';\r\nimport { ROUTES } from '../../../../common/frontend.routes';\r\nimport { AppService } from '../services/app.service';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private appService: AppService\r\n  ) {}\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const user = this.appService.getCurrentUser();\r\n    if (user) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(\r\n      route.params.tenantPath\r\n        ? [route.params.tenantPath, ROUTES.LOGIN]\r\n        : [`/${ROUTES.LOGIN}`],\r\n      {\r\n        queryParams: { returnUrl: state.url },\r\n      }\r\n    );\r\n    return false;\r\n  }\r\n}\r\n","import { Component, TemplateRef } from '@angular/core';\r\nimport { NotificationService } from '../../services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './toast.component.html',\r\n  styleUrls: ['./toast.component.scss'],\r\n})\r\nexport class ToastComponent {\r\n  constructor(public toastService: NotificationService) {}\r\n\r\n  isTemplate(toast) {\r\n    return toast.textOrTpl instanceof TemplateRef;\r\n  }\r\n}\r\n","<div class=\"toast-container\">\r\n  <ngb-toast\r\n    *ngFor=\"let toast of toastService.toasts\"\r\n    [header]=\"toast.headertext\"\r\n    [class]=\"toast.classname\"\r\n    [autohide]=\"toast.autohide\"\r\n    [delay]=\"toast.delay || 5000\"\r\n    (hide)=\"toastService.remove(toast)\"\r\n  >\r\n    <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n      <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n    </ng-template>\r\n\r\n    <ng-template #text>{{ toast.textOrTpl }}</ng-template>\r\n  </ngb-toast>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { Week } from 'src/app/models/week';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { sortBy, each, filter, find, map, max, uniq } from 'lodash';\r\nimport * as moment from 'moment';\r\nimport { Event } from 'src/app/models/event';\r\nimport { Participant } from 'src/app/models/participant';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Category } from 'src/app/models/category';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { AppService } from 'src/app/services/app.service';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.scss'],\r\n})\r\nexport class EventsComponent implements OnInit, OnDestroy {\r\n  weeks: Week[] = null;\r\n  uniqueEvents: Event[] = null;\r\n  eventsInTimeframe: Event[] = new Array<Event>();\r\n  timeColumns: string[] = new Array<string>();\r\n  registerForm: FormGroup;\r\n  selectedEvent: Event = null;\r\n  successfullyRegistered = false;\r\n  categoryOptions: string[] = null;\r\n  categories: Category[];\r\n  selectedCategory: Category = undefined;\r\n  consentTeaser1: string = null;\r\n  consentTeaser2: string = null;\r\n  consentText1: string = null;\r\n  consentText2: string = null;\r\n  consentText1Shown: boolean = false;\r\n  consentText2Shown: boolean = false;\r\n  tenantSubscription: Subscription;\r\n  tenant: Tenant = null;\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private tenantService: TenantService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private categoryService: CategoryService,\r\n    private appService: AppService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // load the tenant information and redirect in case tenant path does not exist:\r\n    this.tenantService\r\n      .getByPath(this.route.snapshot.params.tenantPath)\r\n      .subscribe(\r\n        () => {},\r\n        error => {\r\n          if (\r\n            error === 'Not Found' ||\r\n            (error instanceof HttpErrorResponse && error.status === 404)\r\n          ) {\r\n            this.router.navigate(['fehler', 'account-not-found']);\r\n          }\r\n        }\r\n      );\r\n    this.createRegisterForm();\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n    this.tenantSubscription = this.appService.tenant.subscribe(\r\n      (tenant: Tenant) => {\r\n        if (tenant) {\r\n          this.tenant = tenant;\r\n          this.appService.setColor(this.tenant);\r\n          this.loadEvents();\r\n          this.consentTeaser1 = tenant.consentTeaser1;\r\n          this.consentText1 = tenant.consentText1;\r\n          if (this.consentTeaser1 && this.consentTeaser1.length > 0) {\r\n            // only add the form control if it is not existing yet\r\n            if (!this.registerForm.contains('consent1')) {\r\n              this.registerForm.addControl(\r\n                'consent1',\r\n                new FormControl(false, Validators.required)\r\n              );\r\n            }\r\n          } else {\r\n            this.registerForm.removeControl('consent1');\r\n          }\r\n          this.consentTeaser2 = tenant.consentTeaser2;\r\n          this.consentText2 = tenant.consentText2;\r\n          if (this.consentTeaser2 && this.consentTeaser2.length > 0) {\r\n            // only add the form control if it is not existing yet\r\n            if (!this.registerForm.contains('consent2')) {\r\n              this.registerForm.addControl(\r\n                'consent2',\r\n                new FormControl(false, Validators.required)\r\n              );\r\n            }\r\n          } else {\r\n            this.registerForm.removeControl('consent2');\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.appService.setColor(null);\r\n    if (this.tenantSubscription) {\r\n      this.tenantSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  loadEvents(): void {\r\n    this.timeColumns = new Array<string>();\r\n    const today = moment();\r\n    const start = today.clone(); //.startOf('week').add(1, 'week');\r\n    const end = today.clone().endOf('week').add(1, 'week');\r\n    const observables = [];\r\n    observables.push(\r\n      this.eventService.getEvents(\r\n        this.appService.getCurrentTenant().id,\r\n        start,\r\n        end\r\n      )\r\n    );\r\n    observables.push(this.categoryService.getCategories(this.tenant.path));\r\n    forkJoin(observables).subscribe(results => {\r\n      /////////////////////////////////////////\r\n      const events = results[0] as Event[];\r\n      // filter out all events that are disabled\r\n      this.eventsInTimeframe = filter(events, { disabled: false });\r\n      /////////////////////////////////////////\r\n      this.categories = results[1] as Category[];\r\n      // only consider categories that have at least one event present\r\n      this.categories = filter(this.categories, (category: Category) => {\r\n        return (\r\n          filter(\r\n            this.eventsInTimeframe,\r\n            event => event.categoryId === category.id\r\n          ).length > 0\r\n        );\r\n      });\r\n      this.categoryOptions = new Array<string>();\r\n      this.categoryOptions.push(...filter(map(this.categories, 'name')));\r\n      // sort the values\r\n      this.categoryOptions = this.categoryOptions.sort();\r\n      // add 'alle' at the top\r\n      this.categoryOptions.unshift('alle');\r\n    });\r\n  }\r\n\r\n  selectCategory(category: Category): void {\r\n    this.selectedCategory = category;\r\n    this.selectedEvent = null;\r\n    this.registerForm.markAsUntouched();\r\n    this.determineUniqueEvents();\r\n    const eventsToDisplay = <Event[]>(\r\n      filter(this.eventsInTimeframe, (event: Event) => {\r\n        if (this.selectedCategory === null) {\r\n          return true;\r\n        }\r\n        return event.categoryId === this.selectedCategory.id;\r\n      })\r\n    );\r\n    this.weeks = this.generateWeeksNeededToDisplayEvents(eventsToDisplay);\r\n    each(eventsToDisplay, (event: Event) => {\r\n      // find out at which position to display the event\r\n      each(this.uniqueEvents, (uniqueEvent: Event, index: number) => {\r\n        if (\r\n          uniqueEvent.displayName() === event.displayName() &&\r\n          uniqueEvent.weekDay === event.weekDay &&\r\n          uniqueEvent.displayTime() === event.displayTime()\r\n        ) {\r\n          // find the calendar week to put it in to\r\n          const week = find(this.weeks, {\r\n            number: moment(event.date).isoWeek(),\r\n          });\r\n          week.events[index] = event;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  generateWeeksNeededToDisplayEvents(events: Event[]): Week[] {\r\n    const weeks = new Array<Week>();\r\n    let maxDate = new Date();\r\n    each(events, event => {\r\n      if (event.date > maxDate) {\r\n        maxDate = event.date;\r\n      }\r\n    });\r\n    for (\r\n      let isoWeek = moment().isoWeek();\r\n      isoWeek <= moment(maxDate).isoWeek() || isoWeek <= moment().isoWeek() + 1;\r\n      isoWeek++\r\n    ) {\r\n      const week = new Week(isoWeek);\r\n      week.startOfWeek = moment().isoWeek(isoWeek).startOf('week');\r\n      week.endOfWeek = moment().isoWeek(isoWeek).endOf('week');\r\n      week.events = new Array<Event>(this.uniqueEvents.length);\r\n      weeks.push(week);\r\n    }\r\n    return weeks;\r\n  }\r\n\r\n  private determineUniqueEvents(): void {\r\n    this.uniqueEvents = new Array<Event>();\r\n    each(this.eventsInTimeframe, (event: Event) => {\r\n      if (\r\n        !this.selectedCategory ||\r\n        event.categoryId === this.selectedCategory.id\r\n      ) {\r\n        // check if there is already an instance of this event displayed\r\n        if (\r\n          find(this.uniqueEvents, (uniqueEvent: Event) => {\r\n            return (\r\n              uniqueEvent.displayName() === event.displayName() &&\r\n              uniqueEvent.weekDay === event.weekDay &&\r\n              uniqueEvent.displayTime() === event.displayTime()\r\n            );\r\n          }) === undefined\r\n        ) {\r\n          this.uniqueEvents.push(event);\r\n        }\r\n      }\r\n    });\r\n    this.uniqueEvents = sortBy(this.uniqueEvents, ['weekDay', 'time']);\r\n  }\r\n\r\n  private createRegisterForm(): void {\r\n    this.registerForm = new FormGroup({\r\n      firstname: new FormControl('', Validators.required),\r\n      lastname: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      phone: new FormControl('', Validators.required),\r\n      street: new FormControl('', Validators.required),\r\n      zip: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n      rememberMe: new FormControl(false),\r\n      dataprivacy: new FormControl(false, Validators.required),\r\n    });\r\n    // check if stored personal information exists. if so, prefill the form:\r\n    const previousData = JSON.parse(localStorage.getItem('rememberMe'));\r\n    if (previousData) {\r\n      this.registerForm.get('firstname').setValue(previousData.firstname);\r\n      this.registerForm.get('lastname').setValue(previousData.lastname);\r\n      this.registerForm.get('email').setValue(previousData.email);\r\n      this.registerForm.get('phone').setValue(previousData.phone);\r\n      this.registerForm.get('street').setValue(previousData.street);\r\n      this.registerForm.get('zip').setValue(previousData.zip);\r\n      this.registerForm.get('city').setValue(previousData.city);\r\n      this.registerForm.get('rememberMe').setValue(true);\r\n    }\r\n  }\r\n\r\n  availableSeatsText(event: Event): string {\r\n    const free = event.maxSeats - event.takenSeats;\r\n    if (free > 3) {\r\n      return `${free} freie Plätze`;\r\n    }\r\n    if (free > 1) {\r\n      return `nur ${free} freie Plätze`;\r\n    }\r\n    return `noch 1 freier Platz`;\r\n  }\r\n\r\n  selectEvent(event: Event): void {\r\n    this.registerForm.markAsUntouched();\r\n    if (this.selectedEvent === event) {\r\n      this.selectedEvent = null;\r\n    } else {\r\n      this.selectedEvent = event;\r\n      // scroll down to the participant form\r\n      setTimeout(() => {\r\n        document.getElementsByTagName('h5')[0].scrollIntoView();\r\n      }, 20);\r\n    }\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.registerForm.get(formControlName).invalid &&\r\n      this.registerForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  registerParticipant(): void {\r\n    if (this.registerForm.invalid) {\r\n      this.registerForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const participant = new Participant();\r\n    participant.firstname = this.registerForm.get('firstname').value;\r\n    participant.lastname = this.registerForm.get('lastname').value;\r\n    participant.email = this.registerForm.get('email').value;\r\n    participant.phone = this.registerForm.get('phone').value;\r\n    participant.street = this.registerForm.get('street').value;\r\n    participant.zip = this.registerForm.get('zip').value;\r\n    participant.city = this.registerForm.get('city').value;\r\n    // if the user has selected the rememberMe flag, store the data locally so that it can be used next time to pre-fill the data\r\n    if (this.registerForm.get('rememberMe').value === true) {\r\n      localStorage.setItem('rememberMe', JSON.stringify(participant));\r\n    } else {\r\n      // in case pre-entered information exists, but the user does not want it to be stored any more, remove it from local storage\r\n      localStorage.removeItem('rememberMe');\r\n    }\r\n    participant.name = participant.firstname + ' ' + participant.lastname;\r\n    participant.eventId = this.selectedEvent.id;\r\n    this.eventService.addParticipant(participant).subscribe(() => {\r\n      this.successfullyRegistered = true;\r\n      this.registerForm.reset();\r\n    });\r\n  }\r\n\r\n  singleEvents(uniqueEvents: Event[]): Event[] {\r\n    return filter(uniqueEvents, { singleOccurence: true });\r\n  }\r\n\r\n  recurringEvents(uniqueEvents: Event[]): Event[] {\r\n    return filter(uniqueEvents, { singleOccurence: false });\r\n  }\r\n}\r\n","<h2 *ngIf=\"tenant && tenant.active\">Anmeldung zu Aktivität</h2>\r\n\r\n<div *ngIf=\"successfullyRegistered\" class=\"alert alert-success messageBox mb-3\">\r\n  Du hast dich erfolgreich zu <b>{{ selectedEvent.name }}</b> angemeldet!\r\n</div>\r\n<div\r\n  class=\"alert text-center\"\r\n  style=\"margin-top: 100px\"\r\n  *ngIf=\"!categoryOptions && (!tenant || tenant.active)\"\r\n>\r\n  <loading></loading>\r\n  Events werden geladen...\r\n</div>\r\n<div\r\n  *ngIf=\"\r\n    categoryOptions != null &&\r\n    selectedCategory === undefined &&\r\n    tenant &&\r\n    tenant.active\r\n  \"\r\n  class=\"row\"\r\n>\r\n  <div class=\"col-12\">\r\n    <p>\r\n      Bitte wähle zuerst eine Kategorie aus, zu der dir Events angezeigt werden:\r\n    </p>\r\n  </div>\r\n  <div\r\n    class=\"col-12 col-sm-4 col-md-3 p-1\"\r\n    *ngFor=\"let category of categories\"\r\n    (click)=\"selectCategory(category)\"\r\n  >\r\n    <div class=\"category-card\">\r\n      <i class=\"fas mr-2 {{ category.icon }}\" *ngIf=\"category.icon\"></i>\r\n      {{ category.name }}\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 col-sm-4 col-md-3 p-1\" (click)=\"selectCategory(null)\">\r\n    <div class=\"category-card\">alle Events</div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"selectedCategory !== undefined\">\r\n  <div class=\"back-to-categories\" (click)=\"selectedCategory = undefined\">\r\n    <i class=\"fas fa-chevron-left\"></i>\r\n    zurück zur Kategorie-Auswahl\r\n  </div>\r\n  <span>\r\n    Registriere dich bitte für eine der folgenden Aktivitäten in der Kategorie\r\n    <span style=\"color: var(--plevents-main-color)\">{{\r\n      selectedCategory === null ? 'alle Events' : selectedCategory.name\r\n    }}</span\r\n    >:\r\n  </span>\r\n  <!-- horizontal table -->\r\n  <table class=\"w-100 d-none d-lg-table mt-3\">\r\n    <thead>\r\n      <tr *ngIf=\"uniqueEvents\">\r\n        <th [ngStyle]=\"{ width: 100 / (uniqueEvents.length + 1) + '%' }\">KW</th>\r\n        <th\r\n          [ngStyle]=\"{ width: 100 / (uniqueEvents.length + 1) + '%' }\"\r\n          style=\"text-align: center\"\r\n          *ngFor=\"let uniqueEvent of uniqueEvents\"\r\n        >\r\n          {{ uniqueEvent.displayName() }}\r\n          <br />\r\n          <span class=\"badge badge-secondary\">{{\r\n            uniqueEvent.displayTime()\r\n          }}</span>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let week of weeks; index as i\">\r\n        <td>\r\n          {{ week.number }}\r\n          <span *ngIf=\"i === 0\"><br />(diese Woche)</span>\r\n          <span *ngIf=\"i === 1\"><br />(nächste Woche)</span>\r\n        </td>\r\n        <td *ngFor=\"let event of week.events\">\r\n          <app-event-select\r\n            [event]=\"event\"\r\n            (click)=\"selectEvent(event)\"\r\n            [selected]=\"event === selectedEvent\"\r\n          ></app-event-select>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- vertical table -->\r\n  <div\r\n    *ngIf=\"uniqueEvents && recurringEvents(uniqueEvents).length > 0\"\r\n    class=\"mt-3 d-lg-none\"\r\n  >\r\n    <h5>Regelmäßige Aktivitäten</h5>\r\n    <table class=\"w-100\">\r\n      <thead>\r\n        <tr>\r\n          <th style=\"width: 30%\"></th>\r\n          <th style=\"width: 35%\" *ngIf=\"weeks[0] != null\">\r\n            {{ weeks[0].number }}<br />(diese Woche)\r\n          </th>\r\n          <th style=\"width: 35%\" *ngIf=\"weeks[1] != null\">\r\n            {{ weeks[1].number }}<br />(nächste Woche)\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          *ngFor=\"let uniqueEvent of recurringEvents(uniqueEvents); index as i\"\r\n        >\r\n          <td>\r\n            {{ uniqueEvent.displayName() }}\r\n            <br />\r\n            <span class=\"badge badge-secondary\">{{\r\n              uniqueEvent.displayTime()\r\n            }}</span>\r\n          </td>\r\n          <td>\r\n            <app-event-select\r\n              *ngIf=\"weeks[0].events[i]\"\r\n              [event]=\"weeks[0].events[i]\"\r\n              (click)=\"selectEvent(weeks[0].events[i])\"\r\n              [selected]=\"weeks[0].events[i] === selectedEvent\"\r\n            ></app-event-select>\r\n          </td>\r\n          <td>\r\n            <app-event-select\r\n              *ngIf=\"weeks[1].events[i]\"\r\n              [event]=\"weeks[1].events[i]\"\r\n              (click)=\"selectEvent(weeks[1].events[i])\"\r\n              [selected]=\"weeks[1].events[i] === selectedEvent\"\r\n            ></app-event-select>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div\r\n    *ngIf=\"uniqueEvents && singleEvents(uniqueEvents).length > 0\"\r\n    class=\"mt-3 d-lg-none\"\r\n  >\r\n    <h5>Einmalige Aktivitäten</h5>\r\n    <table class=\"w-100\">\r\n      <tbody *ngIf=\"uniqueEvents\">\r\n        <tr *ngFor=\"let singleEvent of singleEvents(uniqueEvents)\">\r\n          <td>\r\n            {{ singleEvent.displayName() }}\r\n            <br />\r\n            <span class=\"badge badge-secondary\">{{\r\n              singleEvent.displayTime()\r\n            }}</span>\r\n          </td>\r\n          <td>\r\n            <app-event-select\r\n              [event]=\"singleEvent\"\r\n              (click)=\"selectEvent(singleEvent)\"\r\n              [selected]=\"singleEvent === selectedEvent\"\r\n            ></app-event-select>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div style=\"margin-top: 40px\" *ngIf=\"selectedEvent\">\r\n    <div\r\n      *ngIf=\"selectedEvent && selectedEvent.isInPast()\"\r\n      class=\"alert alert-secondary\"\r\n    >\r\n      Dieses Event liegt in der Vergangenheit. Keine Aktion möglich.\r\n    </div>\r\n\r\n    <div\r\n      *ngIf=\"\r\n        selectedEvent &&\r\n        !selectedEvent.isInPast() &&\r\n        selectedEvent.takenSeats >= selectedEvent.maxSeats\r\n      \"\r\n      class=\"alert alert-danger\"\r\n    >\r\n      Dieses Event ist bereits leider ausgebucht!\r\n    </div>\r\n    <div\r\n      *ngIf=\"\r\n        selectedEvent &&\r\n        !selectedEvent.isInPast() &&\r\n        selectedEvent.takenSeats < selectedEvent.maxSeats\r\n      \"\r\n    >\r\n      <h5>Angaben zu Teilnehmer:</h5>\r\n      <p>\r\n        für die Anmeldung zu\r\n        <b>{{ selectedEvent.name }}</b> am\r\n        <span *ngIf=\"!selectedEvent.singleOccurence\"\r\n          ><b>{{ selectedEvent.displayDate() }}</b> um</span\r\n        >\r\n        <b>{{ selectedEvent.displayTime(false) }} Uhr</b>:\r\n      </p>\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerParticipant()\">\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('firstname') }\"\r\n          >\r\n            <label for=\"firstname\">Vorname</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Vorname des Teilnehmers\"\r\n              formControlName=\"firstname\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('lastname') }\"\r\n          >\r\n            <label for=\"lastname\">Nachname</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nachname des Teilnehmers\"\r\n              formControlName=\"lastname\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('email') }\"\r\n          >\r\n            <label for=\"email\">Email</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Kontakt-Email Adresse\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('phone') }\"\r\n          >\r\n            <label for=\"phone\">Telefonnummer</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"phone\"\r\n              type=\"phone\"\r\n              placeholder=\"Telefonnr für Rückfragen\"\r\n              formControlName=\"phone\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('street') }\"\r\n          >\r\n            <label for=\"street\">Adresse</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"street\"\r\n              type=\"text\"\r\n              placeholder=\"Straße & Hausnummer\"\r\n              formControlName=\"street\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6 col-md-4\" [ngClass]=\"{ invalid: isInvalid('zip') }\">\r\n            <label for=\"zip\">PLZ</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"zip\"\r\n              type=\"text\"\r\n              placeholder=\"Postleitzahl\"\r\n              formControlName=\"zip\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('city') }\"\r\n          >\r\n            <label for=\"city\">Ort</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"city\"\r\n              type=\"text\"\r\n              placeholder=\"Wohnort\"\r\n              formControlName=\"city\"\r\n            />\r\n          </div>\r\n          <div class=\"col-12 form-check sg-consent-boxes\">\r\n            <div\r\n              class=\"form-group\"\r\n              [ngClass]=\"{\r\n                invalid:\r\n                  registerForm.touched &&\r\n                  registerForm.get('dataprivacy').value === false\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"form-check-input\"\r\n                id=\"dataprivacy\"\r\n                type=\"checkbox\"\r\n                formControlName=\"dataprivacy\"\r\n                required\r\n              />\r\n              <label class=\"form-check-label\" for=\"dataprivacy\"\r\n                >Hiermit bestätige ich, dass ich die\r\n                <a href=\"/rechtliches#datenschutz\" target=\"_blank\"\r\n                  >Datenschutzbestimmungen</a\r\n                >\r\n                von plevents.de gelesen habe und diesen zustimme. Meine Daten\r\n                werden nach spätestens 4 Wochen automatisch gelöscht.</label\r\n              >\r\n            </div>\r\n            <div\r\n              class=\"form-group\"\r\n              *ngIf=\"consentTeaser1 && consentTeaser1.length > 0\"\r\n              [ngClass]=\"{\r\n                invalid:\r\n                  registerForm.touched &&\r\n                  registerForm.get('consent1').value === false\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"form-check-input\"\r\n                id=\"consent1\"\r\n                type=\"checkbox\"\r\n                formControlName=\"consent1\"\r\n                required\r\n              />\r\n              <label class=\"form-check-label\" for=\"consent1\">{{\r\n                consentTeaser1\r\n              }}</label>\r\n              <span *ngIf=\"consentText1 && consentText1.length > 0\">\r\n                <small\r\n                  *ngIf=\"!consentText1Shown\"\r\n                  (click)=\"consentText1Shown = true\"\r\n                  class=\"consent-toggler\"\r\n                  >Details anzeigen</small\r\n                >\r\n                <small\r\n                  *ngIf=\"consentText1Shown\"\r\n                  (click)=\"consentText1Shown = false\"\r\n                  class=\"consent-toggler\"\r\n                  >Details ausblenden</small\r\n                >\r\n              </span>\r\n              <div *ngIf=\"consentText1Shown\" [innerHTML]=\"consentText1\"></div>\r\n            </div>\r\n            <div\r\n              class=\"form-group\"\r\n              *ngIf=\"consentTeaser2 && consentTeaser2.length > 0\"\r\n              [ngClass]=\"{\r\n                invalid:\r\n                  registerForm.touched &&\r\n                  registerForm.get('consent2').value === false\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"form-check-input\"\r\n                id=\"consent2\"\r\n                type=\"checkbox\"\r\n                formControlName=\"consent2\"\r\n                required\r\n              />\r\n              <label class=\"form-check-label\" for=\"consent2\">{{\r\n                consentTeaser2\r\n              }}</label>\r\n              <span *ngIf=\"consentText2 && consentText2.length > 0\">\r\n                <small\r\n                  *ngIf=\"!consentText2Shown\"\r\n                  (click)=\"consentText2Shown = true\"\r\n                  class=\"consent-toggler\"\r\n                  >Details anzeigen</small\r\n                >\r\n                <small\r\n                  *ngIf=\"consentText2Shown\"\r\n                  (click)=\"consentText2Shown = false\"\r\n                  class=\"consent-toggler\"\r\n                  >Details ausblenden</small\r\n                >\r\n              </span>\r\n              <div *ngIf=\"consentText2Shown\" [innerHTML]=\"consentText2\"></div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                id=\"rememberMe\"\r\n                type=\"checkbox\"\r\n                formControlName=\"rememberMe\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"rememberMe\">\r\n                Meine eingegebenen persönlichen Daten sollen auf diesem Gerät\r\n                gespeichert werden. Dies ermöglicht eine schnellere Anmeldung\r\n                zur nächsten Aktivität, da die Felder dann automatisch\r\n                ausgefüllt werden.\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-4\">\r\n            <button\r\n              class=\"btn btn-block btn-success\"\r\n              type=\"submit\"\r\n              style=\"margin-top: 32px\"\r\n            >\r\n              Zum Event anmelden\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"tenant && !tenant.active\" class=\"alert alert-warning messageBox\">\r\n  Die angefragte Organisation ist noch nicht freigeschaltet. Daher sind noch\r\n  keine Anmeldungen zu Aktivitäten möglich.\r\n  <br /><br />\r\n  Bitte kontaktieren Sie den Support, falls Sie der Administrator dieser\r\n  Organisation sind.\r\n</div>\r\n","import { CategoryI } from '../../../../common/category';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\n\r\nexport class Category implements CategoryI {\r\n  id: string;\r\n  tenantId: string;\r\n  name: string;\r\n  icon?: string;\r\n\r\n  constructor(item?: any) {\r\n    if (item) {\r\n      this.id = item.id;\r\n      this.tenantId = item.tenantId;\r\n      this.name = item.name;\r\n      this.icon = item.icon;\r\n    }\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CategoryAdapter implements Adapter<Category> {\r\n  adapt(item: any): Category {\r\n    return new Category(item);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Subscription, SubscriptionAdapter } from '../models/subscription';\r\nimport { SubscriptionI } from '../../../../common/subscription';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SubscriptionService {\r\n  constructor(private http: HttpClient, private adapter: SubscriptionAdapter) {}\r\n\r\n  /*\r\n  getSubscriptions(tenantId: string): Observable<Subscription[]> {\r\n    return this.http\r\n      .get(`${environment.apiUrl}/secure/tenants/${tenantId}/subscriptions`)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) => data.map(item => this.adapter.adapt(item)))\r\n      );\r\n  }\r\n  */\r\n\r\n  getLinkToStripCustomerPortal(tenantId: string): Observable<any> {\r\n    return this.http.get(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/subscriptions`\r\n    );\r\n  }\r\n\r\n  initializePayment(subscription: SubscriptionI): Observable<any> {\r\n    return this.http.post(\r\n      `${environment.apiUrl}/secure/tenants/${subscription.tenantId}/subscriptions`,\r\n      subscription\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { Router } from '@angular/router';\r\nimport { TenantRelation } from 'src/app/models/tenant-relation';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { ROLE } from '../../../../../common/tenant-relation';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-tenant-registration',\r\n  templateUrl: './tenant-registration.component.html',\r\n  styleUrls: ['./tenant-registration.component.scss'],\r\n})\r\nexport class TenantRegistrationComponent implements OnInit {\r\n  registrationForm: FormGroup;\r\n  error: string = null;\r\n  loading: boolean = false;\r\n  currentSubscription: Subscription = null;\r\n  pathCheck = {\r\n    pathTaken: false,\r\n  };\r\n\r\n  constructor(\r\n    private tenantService: TenantService,\r\n    private router: Router,\r\n    private appService: AppService,\r\n    private notification: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrationForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required]),\r\n      path: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(40),\r\n        Validators.pattern('[a-z0-9-]{0,40}'),\r\n      ]),\r\n      agbCheck: new FormControl(false, Validators.required),\r\n      dataPrivacyCheck: new FormControl(false, Validators.required),\r\n    });\r\n  }\r\n\r\n  checkPath(): void {\r\n    this.tenantService.checkPath(\r\n      this.registrationForm.get('path').value,\r\n      this.pathCheck\r\n    );\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.registrationForm.get(formControlName).invalid &&\r\n      this.registrationForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.registrationForm.invalid) {\r\n      this.registrationForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    // create the tenant. aftewards, forward the user to the registration for the personal login\r\n    const name = this.registrationForm.get('name').value;\r\n    const path = this.registrationForm.get('path').value;\r\n    const tenantToCreate = new Tenant(name, path);\r\n    this.tenantService.create(tenantToCreate).subscribe(\r\n      (tenant: Tenant) => {\r\n        // the assignment was done on serverside already. go to the management view of the new tenant\r\n        const relation = new TenantRelation();\r\n        relation.user = this.appService.getCurrentUser();\r\n        relation.userId = this.appService.getCurrentUser().id;\r\n        relation.tenant = tenant;\r\n        relation.tenantId = tenant.id;\r\n        relation.active = true;\r\n        relation.role = ROLE.OWNER;\r\n        const relations = this.appService.getCurrentTenantRelations();\r\n        relations.push(relation);\r\n        this.appService.setCurrentTenantRelations(relations);\r\n        this.router.navigate([tenant.path, ROUTES.TENANT_MANAGEMENT]);\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.notification.error('Es trat leider ein Fehler auf');\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  currentLengthOf(formControlName: string): number {\r\n    try {\r\n      return (this.registrationForm.get(formControlName).value as string)\r\n        .length;\r\n    } catch (e) {\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n","<h1>Jetzt Organisation anlegen</h1>\r\n<p>\r\n  Legen Sie sich in wenigen Minuten Ihre eigene kostenlose Terminbuchungs-Seite\r\n  an, mit DSGVO-konformer Datensparsamkeit und automatischer -löschung.\r\n</p>\r\n<hr />\r\n<form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-md-6\">\r\n      Der Name Ihrer Organisation wird auf der Website angezeigt. Bspw.: \"CVJM\r\n      Gärtringen\"<br />\r\n      <small>Sie können diesen Wert später noch ändern.</small>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name der Organisation *</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          formControlName=\"name\"\r\n          placeholder=\"z.B. Musterorganisation e.V.\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{\r\n            'is-invalid': isInvalid('name')\r\n          }\"\r\n        />\r\n        <div *ngIf=\"isInvalid('name')\" class=\"invalid-feedback\">\r\n          Bitte einen kurzen beschreibenden Namen angeben\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      Bitte einen Pfad angeben, der dann in der URL zu sehen sein wird. Die\r\n      maximale Länge beträgt 40 Zeichen. Nur Kleinbuchstaben, Zahlen und\r\n      Trennstriche (-) sind erlaubt.<br />\r\n      <small>Sie können diesen Wert später noch ändern.</small>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"path\">Pfad *</label>\r\n        <div class=\"input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\">https://plevents.de/o/</span>\r\n          </div>\r\n          <input\r\n            id=\"path\"\r\n            type=\"text\"\r\n            formControlName=\"path\"\r\n            placeholder=\"z.B. meine-organisation\"\r\n            class=\"form-control\"\r\n            (keyup)=\"checkPath()\"\r\n            [ngClass]=\"{\r\n              'is-invalid': pathCheck.pathTaken || isInvalid('path'),\r\n              'is-valid':\r\n                !pathCheck.pathTaken && registrationForm.get('path').valid\r\n            }\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div\r\n            [ngClass]=\"{\r\n              'is-invalid': pathCheck.pathTaken || isInvalid('path'),\r\n              'is-valid':\r\n                !pathCheck.pathTaken && registrationForm.get('path').valid\r\n            }\"\r\n          ></div>\r\n          <div *ngIf=\"pathCheck.pathTaken\" class=\"invalid-feedback\">\r\n            Dieser Pfad ist bereits leider vergeben\r\n          </div>\r\n          <div class=\"valid-feedback\">\r\n            <i class=\"fas fa-check\"></i> Pfad ist noch frei und kann benutzt\r\n            werden!\r\n          </div>\r\n          <div *ngIf=\"isInvalid('path')\" class=\"invalid-feedback\">\r\n            Bitte einen gültigen Pfad angeben\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 form-group\">\r\n      <div class=\"form-check\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          id=\"agbCheck\"\r\n          type=\"checkbox\"\r\n          formControlName=\"agbCheck\"\r\n          required\r\n        />\r\n        <label\r\n          class=\"form-check-label\"\r\n          for=\"agbCheck\"\r\n          [ngClass]=\"{\r\n            'is-invalid': isInvalid('agbCheck')\r\n          }\"\r\n          >Hiermit bestätige ich, dass ich die\r\n          <a href=\"/rechtliches#agb\" target=\"_blank\">AGB</a> gelesen habe und\r\n          diesen zustimme. *</label\r\n        >\r\n        <div *ngIf=\"isInvalid('agbCheck')\" class=\"invalid-feedback\">\r\n          Bitte stimmen Sie den AGB zu.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 form-group\">\r\n      <div class=\"form-check\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          id=\"dataPrivacyCheck\"\r\n          type=\"checkbox\"\r\n          formControlName=\"dataPrivacyCheck\"\r\n          required\r\n        />\r\n        <label\r\n          class=\"form-check-label\"\r\n          for=\"dataPrivacyCheck\"\r\n          [ngClass]=\"{\r\n            'is-invalid': isInvalid('dataPrivacyCheck')\r\n          }\"\r\n          >Hiermit bestätige ich, dass ich die\r\n          <a href=\"/rechtliches#datenschutz\" target=\"_blank\"\r\n            >Datenschutzbestimmungen</a\r\n          >\r\n          gelesen habe und diesen zustimme. *</label\r\n        >\r\n        <div *ngIf=\"isInvalid('dataPrivacyCheck')\" class=\"invalid-feedback\">\r\n          Bitte stimmen Sie den Datenschutzbestimmungen zu.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"text-right\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-success\">\r\n      <span\r\n        *ngIf=\"loading\"\r\n        class=\"spinner-border spinner-border-sm mr-1\"\r\n      ></span>\r\n      Organisation erstellen\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n    {{ error }}\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Tenant } from '../../models/tenant';\r\nimport { TenantService } from '../../services/tenant.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { clone, find } from 'lodash';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { ROLE } from '../../../../../common/tenant-relation';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-tenant',\r\n  templateUrl: './tenant.component.html',\r\n  styleUrls: ['./tenant.component.scss'],\r\n})\r\nexport class TenantComponent implements OnInit, OnDestroy {\r\n  tenant: Tenant = null;\r\n  logoValidationError: string = null;\r\n  private tenantSubscription: Subscription;\r\n  operationOngoing = {\r\n    updateCore: false,\r\n    updateLegal: false,\r\n    deleteTenant: false,\r\n  };\r\n  pathCheck = {\r\n    pathTaken: false,\r\n  };\r\n  color: string;\r\n  ROLE = ROLE;\r\n  tenantForm: FormGroup = new FormGroup({\r\n    name: new FormControl('', Validators.required),\r\n    path: new FormControl('', Validators.required),\r\n  });\r\n  legalForm: FormGroup = new FormGroup({\r\n    consentTeaser1: new FormControl('', Validators.maxLength(1000)),\r\n    consentText1: new FormControl('', Validators.maxLength(10000)),\r\n    consentTeaser2: new FormControl('', Validators.maxLength(1000)),\r\n    consentText2: new FormControl('', Validators.maxLength(10000)),\r\n  });\r\n\r\n  constructor(\r\n    private tenantService: TenantService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public appService: AppService,\r\n    private notification: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.tenant = null;\r\n    this.tenantSubscription = this.appService.tenant.subscribe(\r\n      (tenant: Tenant) => {\r\n        if (tenant && tenant.path === this.route.snapshot.params.tenantPath) {\r\n          this.appService.setColor(tenant);\r\n          this.tenant = tenant;\r\n          this.setFormValues();\r\n        }\r\n      }\r\n    );\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath, true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.appService.setColor(null);\r\n    if (this.tenantSubscription) {\r\n      this.tenantSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.tenantForm.get(formControlName).invalid &&\r\n      this.tenantForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  setFormValues(): void {\r\n    this.tenantForm.get('name').setValue(this.tenant.name);\r\n    this.tenantForm.get('path').setValue(this.tenant.path);\r\n    this.legalForm.get('consentTeaser1').setValue(this.tenant.consentTeaser1);\r\n    this.legalForm.get('consentText1').setValue(this.tenant.consentText1);\r\n    this.legalForm.get('consentTeaser2').setValue(this.tenant.consentTeaser2);\r\n    this.legalForm.get('consentText2').setValue(this.tenant.consentText2);\r\n    this.color = this.tenant.color;\r\n  }\r\n\r\n  updateTenant(): void {\r\n    if (\r\n      this.tenantForm.invalid ||\r\n      this.pathCheck.pathTaken ||\r\n      this.logoValidationError\r\n    ) {\r\n      this.notification.error('Bitte alle Felder korrekt ausfüllen');\r\n      this.tenantForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.operationOngoing.updateCore = true;\r\n    const updatedTenant = clone(this.tenant);\r\n    updatedTenant.name = this.tenantForm.get('name').value;\r\n    updatedTenant.path = this.tenantForm.get('path').value;\r\n    updatedTenant.color = this.color;\r\n    const pathChanged = updatedTenant.path !== this.tenant.path;\r\n    this.tenantService.update(updatedTenant).subscribe(\r\n      (tenant: Tenant) => {\r\n        // update the tenant in the relations array\r\n        const relations = this.appService.getCurrentTenantRelations();\r\n        const relation = find(relations, { tenantId: tenant.id });\r\n        if (relation) {\r\n          relation.tenant = tenant;\r\n        }\r\n        this.appService.setCurrentTenantRelations(relations);\r\n        this.appService.setCurrentTenant(tenant);\r\n        if (pathChanged) {\r\n          // the path was changed, reload the page\r\n          this.router.navigate([tenant.path, ROUTES.TENANT_MANAGEMENT]);\r\n        } else {\r\n          this.tenant = tenant;\r\n          this.setFormValues();\r\n        }\r\n        this.notification.success('Erfolgreich gespeichert');\r\n        this.operationOngoing.updateCore = false;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.notification.error('Beim Speichern trat leider ein Fehler auf!');\r\n        this.operationOngoing.updateCore = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  updateLegalTexts(): void {\r\n    if (this.legalForm.invalid) {\r\n      this.notification.error('Bitte alle Felder korrekt ausfüllen');\r\n      this.legalForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.operationOngoing.updateLegal = true;\r\n    const updatedTenant = clone(this.tenant);\r\n    updatedTenant.consentTeaser1 = this.legalForm.get('consentTeaser1').value;\r\n    updatedTenant.consentText1 = this.legalForm.get('consentText1').value;\r\n    updatedTenant.consentTeaser2 = this.legalForm.get('consentTeaser2').value;\r\n    updatedTenant.consentText2 = this.legalForm.get('consentText2').value;\r\n    this.tenantService.update(updatedTenant).subscribe(\r\n      (tenant: Tenant) => {\r\n        this.tenant = tenant;\r\n        this.setFormValues();\r\n        // update the tenant in the relations array\r\n        const relations = this.appService.getCurrentTenantRelations();\r\n        const relation = find(relations, { tenantId: tenant.id });\r\n        if (relation) {\r\n          relation.tenant = tenant;\r\n        }\r\n        this.appService.setCurrentTenantRelations(relations);\r\n        this.appService.setCurrentTenant(tenant);\r\n        this.notification.success('Erfolgreich gespeichert');\r\n        this.operationOngoing.updateLegal = false;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.notification.error('Beim Speichern trat leider ein Fehler auf');\r\n        this.operationOngoing.updateLegal = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteTenant(): void {\r\n    this.notification.confirm({\r\n      title: 'Organisation löschen?',\r\n      text: 'Wirklich die gesamte Organisation löschen?',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Löschen',\r\n      yesCallback: () => {\r\n        this.operationOngoing.deleteTenant = true;\r\n        this.tenantService.delete(this.tenant.id).subscribe(\r\n          () => {\r\n            this.notification.success('Organisation gelöscht!');\r\n            // go to profile view\r\n            this.appService.setCurrentTenant(null);\r\n            this.tenantService.getAll().subscribe();\r\n            this.router.navigate([`/${ROUTES.PROFILE}`]);\r\n          },\r\n          error => {\r\n            this.notification.error('Es trat ein Fehler auf');\r\n            this.operationOngoing.deleteTenant = false;\r\n          }\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  checkPath(): void {\r\n    // only check the path if it is different than the already-existing one\r\n    const desiredNewPath = this.tenantForm.get('path').value;\r\n    if (desiredNewPath !== this.tenant.path) {\r\n      this.tenantService.checkPath(\r\n        this.tenantForm.get('path').value,\r\n        this.pathCheck\r\n      );\r\n    }\r\n  }\r\n\r\n  setNewLogo(newLogo: any): void {\r\n    this.logoValidationError = null;\r\n    const newLogoFile = <File>newLogo.target.files[0];\r\n    // check that image does not exceed maximum size\r\n    // 1024 bytes = 1 kB\r\n    const kiloBytes = Math.round(newLogoFile.size / 1024);\r\n    if (kiloBytes > 500) {\r\n      // 1024 kiloBytes = 1 MB\r\n      const fileSize =\r\n        kiloBytes / 1024 >= 1\r\n          ? `${(kiloBytes / 1024).toFixed(2)} MB`\r\n          : `${kiloBytes} kB`;\r\n      this.logoValidationError = `Das gewählte Bild ist zu groß (${fileSize}). Die maximale Größe eines Logos ist 500 kB`;\r\n      return;\r\n    }\r\n    var myReader: FileReader = new FileReader();\r\n    myReader.onloadend = e => {\r\n      this.tenant.logo = <string>myReader.result;\r\n    };\r\n    myReader.readAsDataURL(newLogoFile);\r\n  }\r\n\r\n  currentLengthOf(formControlName: string): number {\r\n    try {\r\n      if (this.tenantForm.get(formControlName)) {\r\n        return (this.tenantForm.get(formControlName).value as string).length;\r\n      }\r\n      if (this.legalForm.get(formControlName)) {\r\n        return (this.legalForm.get(formControlName).value as string).length;\r\n      }\r\n    } catch (e) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * simply trigger the browser to open the file select modal\r\n   */\r\n  selectNewLogo(): void {\r\n    document.getElementById('logo_file_input').click();\r\n  }\r\n}\r\n","<h2>Verwaltung der Organisation</h2>\r\n<p>\r\n  Verwalten Sie hier den Namen und den Pfad Ihrer Organisation. Zudem können Sie\r\n  ein Logo hinterlegen und Administratoren verwalten.\r\n</p>\r\n<div\r\n  class=\"alert alert-warning d-flex flex-row\"\r\n  *ngIf=\"tenant && !tenant.active\"\r\n>\r\n  <div style=\"width: 30px\">\r\n    <i class=\"fas fa-exclamation-triangle\"></i>\r\n  </div>\r\n  <div>\r\n    Diese Organisation ist derzeit noch <b>nicht</b> freigeschaltet. Events sind\r\n    daher noch nicht öffentlich verfübar. Bitte kontaktieren Sie den Support für\r\n    Unterstützung:\r\n    <a href=\"mailto:stefan.strobel@s4-consulting.de\"\r\n      >stefan.strobel@s4-consulting.de</a\r\n    >\r\n  </div>\r\n</div>\r\n\r\n<hr style=\"margin-bottom: -30px\" />\r\n\r\n<!-- two-column layout -->\r\n<div class=\"row\">\r\n  <div class=\"col-12 col-lg-6 col-xl-5 mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h4>Allgemein</h4>\r\n        <form [formGroup]=\"tenantForm\" *ngIf=\"tenant\">\r\n          <div class=\"row\">\r\n            <div\r\n              class=\"col-12 col-md-6\"\r\n              [ngClass]=\"{ invalid: isInvalid('name') }\"\r\n            >\r\n              <label for=\"name\">Name *</label>\r\n              <br />\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                formControlName=\"name\"\r\n              />\r\n            </div>\r\n            <div\r\n              class=\"col-12 col-md-6\"\r\n              [ngClass]=\"{ invalid: isInvalid('path') }\"\r\n            >\r\n              <label for=\"name\">Pfad *</label>\r\n              <br />\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"path\"\r\n                type=\"text\"\r\n                formControlName=\"path\"\r\n                (keyup)=\"checkPath()\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': pathCheck.pathTaken\r\n                }\"\r\n              />\r\n              <div *ngIf=\"pathCheck.pathTaken\" class=\"invalid-feedback\">\r\n                Dieser Pfad ist bereits leider vergeben\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-12 col-md-6 mb-0\"\r\n              [ngClass]=\"{ invalid: logoValidationError !== null }\"\r\n            >\r\n              <label (click)=\"selectNewLogo()\">Logo für die Organisation</label>\r\n              <div class=\"form-group\">\r\n                <div *ngIf=\"tenant !== null && tenant.logo !== null\">\r\n                  <img\r\n                    class=\"plevents-tenant-logo plevents-tenant-logo-hover\"\r\n                    [src]=\"tenant.logo\"\r\n                    (click)=\"selectNewLogo()\"\r\n                  />\r\n                  <br />\r\n                  <small\r\n                    ><i style=\"cursor: pointer\" (click)=\"selectNewLogo()\"\r\n                      >neues Logo auswählen</i\r\n                    ></small\r\n                  >\r\n                </div>\r\n                <div\r\n                  class=\"plevents-tenant-logo plevents-tenant-logo-hover\"\r\n                  [hidden]=\"tenant !== null && tenant.logo !== null\"\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"logo_file_input\"\r\n                    accept=\".jpg,.jpeg,.png\"\r\n                    (change)=\"setNewLogo($event)\"\r\n                  />\r\n                  <label for=\"logo_file_input\">Logo auswählen</label>\r\n                </div>\r\n                <div class=\"invalid-logo\" *ngIf=\"logoValidationError !== null\">\r\n                  {{ logoValidationError }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-6 mb-0\">\r\n              <label>Darstellungsfarbe</label><br />\r\n              <span\r\n                id=\"tenant-color-picker\"\r\n                class=\"clickable\"\r\n                [style.color]=\"color\"\r\n                [cpPosition]=\"'bottom'\"\r\n                [cpPositionOffset]=\"'50%'\"\r\n                [cpPositionRelativeToArrow]=\"true\"\r\n                [(colorPicker)]=\"color\"\r\n                >Legen Sie hier Ihre persönliche Anwendungsfarbe fest</span\r\n              >\r\n            </div>\r\n            <div class=\"col-12 text-right mb-0\">\r\n              <button\r\n                class=\"btn btn-outline-success\"\r\n                (click)=\"updateTenant()\"\r\n                [disabled]=\"operationOngoing.updateCore\"\r\n              >\r\n                <loading\r\n                  *ngIf=\"operationOngoing.updateCore\"\r\n                  textClass=\"text-success\"\r\n                ></loading>\r\n                Speichern\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"text-center\" *ngIf=\"!tenant\">\r\n          <loading></loading>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 mt-5\">\r\n        <h4>Einwilligungserklärung</h4>\r\n        <p>\r\n          Sie können, zusätzlich zu den plevents Datenschutzbedingungen, noch\r\n          weitere Datenschutz- bzw. Einwilligungserklärungen hinterlegen, die\r\n          die Teilnehmer durch aktives Setzen eines Häkchens akzeptieren müssen.\r\n        </p>\r\n        <form [formGroup]=\"legalForm\" *ngIf=\"tenant\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <label for=\"consentTeaser1\"\r\n                >Einwilligungserklärung 1 Teaser</label\r\n              >\r\n              <br />\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"consentTeaser1\"\r\n                type=\"text\"\r\n                formControlName=\"consentTeaser1\"\r\n              />\r\n              <small\r\n                >{{ currentLengthOf('consentTeaser1') }} / 1.000 Zeichen</small\r\n              >\r\n              <br />\r\n              <label style=\"margin-top: 25px\" for=\"consent\"\r\n                >Einwilligungserklärung 1 Details</label\r\n              >\r\n              <br />\r\n              <quill-editor\r\n                formControlName=\"consentText1\"\r\n                [style]=\"{ height: '250px' }\"\r\n              ></quill-editor>\r\n              <small\r\n                >{{ currentLengthOf('consentText1') }} / 10.000 Zeichen</small\r\n              >\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <label for=\"consentTeaser2\"\r\n                >Einwilligungserklärung 2 Teaser</label\r\n              >\r\n              <br />\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"consentTeaser2\"\r\n                type=\"text\"\r\n                formControlName=\"consentTeaser2\"\r\n              />\r\n              <small\r\n                >{{ currentLengthOf('consentTeaser2') }} / 1.000 Zeichen</small\r\n              >\r\n              <br />\r\n              <label style=\"margin-top: 25px\" for=\"consent\"\r\n                >Einwilligungserklärung 2 Details</label\r\n              >\r\n              <br />\r\n              <quill-editor\r\n                formControlName=\"consentText2\"\r\n                [style]=\"{ height: '250px' }\"\r\n              ></quill-editor>\r\n              <small\r\n                >{{ currentLengthOf('consentText2') }} / 10.000 Zeichen</small\r\n              >\r\n            </div>\r\n            <div class=\"col-12 text-right mb-0\">\r\n              <button\r\n                class=\"btn btn-outline-success\"\r\n                (click)=\"updateLegalTexts()\"\r\n                [disabled]=\"operationOngoing.updateLegal\"\r\n              >\r\n                <loading\r\n                  *ngIf=\"operationOngoing.updateLegal\"\r\n                  textClass=\"text-success\"\r\n                ></loading>\r\n                Speichern\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"text-center\" *ngIf=\"!tenant\">\r\n          <loading></loading>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 col-lg-6 col-xl-5 offset-xl-2\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 mt-5\">\r\n        <category-management\r\n          *ngIf=\"tenant\"\r\n          [tenant]=\"tenant\"\r\n        ></category-management>\r\n      </div>\r\n      <div class=\"col-12 mt-5\">\r\n        <user-management [tenant]=\"tenant\" *ngIf=\"tenant\"></user-management>\r\n      </div>\r\n      <div\r\n        class=\"col-12 mt-5\"\r\n        *ngIf=\"tenant && appService.hasRole(tenant.id, ROLE.OWNER)\"\r\n      >\r\n        <subscription [tenant]=\"tenant\"></subscription>\r\n      </div>\r\n      <div\r\n        class=\"col-12 mt-5\"\r\n        *ngIf=\"tenant && appService.hasRole(tenant.id, ROLE.OWNER)\"\r\n      >\r\n        <h4>Löschung</h4>\r\n        <p>\r\n          Falls Sie Ihre Organisation nicht mehr benötigen, können Sie hier\r\n          jegliche Daten löschen. Hierzu gehören:\r\n        </p>\r\n        <ul>\r\n          <li>alle Nutzerzuordnungen</li>\r\n          <li>alle Events</li>\r\n          <li>alle Teilnehmerdaten</li>\r\n        </ul>\r\n        Die Löschung erfolgt sofort und kann <b>nicht</b> rückgängig gemacht\r\n        werden!\r\n        <button\r\n          class=\"btn btn-block btn-sm mt-3\"\r\n          id=\"delete-account-button\"\r\n          (click)=\"deleteTenant()\"\r\n          [disabled]=\"operationOngoing.deleteTenant\"\r\n          *ngIf=\"tenant\"\r\n        >\r\n          <loading\r\n            *ngIf=\"operationOngoing.deleteTenant\"\r\n            textClass=\"text-danger\"\r\n          ></loading>\r\n          Organisation löschen\r\n        </button>\r\n        <div class=\"text-center\" *ngIf=\"!tenant\">\r\n          <loading></loading>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AppService } from '../services/app.service';\r\n\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n  constructor(private appService: AppService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add header with basic auth credentials if user is logged in and request is to the api url\r\n    const user = this.appService.getCurrentUser();\r\n    const isLoggedIn = user && user.authdata;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Basic ${user.authdata}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","// toast.service.ts\r\nimport { Component, Injectable, OnInit, TemplateRef } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\nexport interface ConfirmOptions {\r\n  id?: number;\r\n  title: string;\r\n  text: string;\r\n  yesCallback?: Function;\r\n  noCallback?: Function;\r\n  yesButtonText?: string;\r\n  noButtonText?: string;\r\n  noButtonClass?: string;\r\n  yesButtonClass?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n  toasts: any[] = [];\r\n  modalRef: BsModalRef;\r\n  confirmOptions: ConfirmOptions = null;\r\n\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  // Push new Toasts to array with content and options\r\n  private show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ textOrTpl, ...options });\r\n  }\r\n\r\n  // Callback method to remove Toast DOM element from view\r\n  remove(toast) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n\r\n  success(message: string): void {\r\n    this.show(message, {\r\n      classname: 'toast-success',\r\n      delay: 2000,\r\n      autohide: true,\r\n    });\r\n  }\r\n\r\n  error(message: string): void {\r\n    this.show(message, {\r\n      classname: 'toast-error',\r\n      delay: 2000,\r\n      autohide: true,\r\n    });\r\n  }\r\n\r\n  confirm(options: ConfirmOptions): void {\r\n    // set defaults if not overridden\r\n    options.yesButtonText = options.yesButtonText\r\n      ? options.yesButtonText\r\n      : 'Ja';\r\n    options.noButtonText = options.noButtonText ? options.noButtonText : 'Nein';\r\n    this.confirmOptions = options;\r\n    options.id = Math.ceil(Math.random() * 100000);\r\n    this.modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      id: options.id,\r\n      class: 'modal-md modal-dialog-centered',\r\n      initialState: this.confirmOptions,\r\n      ignoreBackdropClick: true,\r\n    });\r\n  }\r\n}\r\n\r\n/* This is a component which we pass in modal*/\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  template: `\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title pull-left\">{{ title }}</h4>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <p>{{ text }}</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <div class=\"w-100\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn {{ noButtonClass }}\"\r\n          style=\"width: 40%;\"\r\n          (click)=\"confirmNo()\"\r\n        >\r\n          {{ noButtonText }}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn {{ yesButtonClass }} float-right\"\r\n          style=\"width: 40%;\"\r\n          (click)=\"confirmYes()\"\r\n        >\r\n          {{ yesButtonText }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n  id: number;\r\n  title: string;\r\n  text: string;\r\n  yesCallback: Function;\r\n  noCallback: Function;\r\n  yesButtonText: string;\r\n  noButtonText: string;\r\n  noButtonClass: string = 'btn-light';\r\n  yesButtonClass: string = 'btn-light';\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    public modalRef: BsModalRef\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  confirmYes(): void {\r\n    if (this.yesCallback) {\r\n      this.yesCallback();\r\n    }\r\n    this.modalService.hide(this.id);\r\n  }\r\n\r\n  confirmNo(): void {\r\n    if (this.noCallback) {\r\n      this.noCallback();\r\n    }\r\n    this.modalService.hide(this.id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Tenant } from '../models/tenant';\r\nimport { User } from '../models/user';\r\nimport { TenantRelation } from '../models/tenant-relation';\r\nimport { ROLE } from '../../../../common/tenant-relation';\r\nimport { find } from 'lodash';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppService {\r\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\r\n  private tenantSubject: BehaviorSubject<Tenant>;\r\n  public tenant: Observable<Tenant>;\r\n  private tenantRelationsSubject: BehaviorSubject<TenantRelation[]>;\r\n  public tenantRelations: Observable<TenantRelation[]>;\r\n\r\n  constructor() {\r\n    this.userSubject = new BehaviorSubject<User>(null);\r\n    this.user = this.userSubject.asObservable();\r\n    this.tenantSubject = new BehaviorSubject<Tenant>(null);\r\n    this.tenant = this.tenantSubject.asObservable();\r\n    this.tenantRelationsSubject = new BehaviorSubject<TenantRelation[]>(null);\r\n    this.tenantRelations = this.tenantRelationsSubject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * sets the overall text color based on the tenant. if tenant is null, it defaults to the plevents standard color\r\n   * @param color\r\n   */\r\n  setColor(tenant: Tenant): void {\r\n    let color: string, colorDarkened: string;\r\n    if (tenant && tenant.color) {\r\n      color = tenant.color;\r\n      colorDarkened = tenant.colorDarkened;\r\n    } else {\r\n      color = ' #2f5597';\r\n      colorDarkened = '#344f7d';\r\n    }\r\n    document.querySelector(\r\n      'body'\r\n    ).style.cssText = `--plevents-main-color: ${color}; --plevents-main-color-darkened: ${colorDarkened};`;\r\n  }\r\n\r\n  setCurrentTenant(tenant: Tenant): void {\r\n    if (this.tenantSubject.value !== tenant) {\r\n      this.tenantSubject.next(tenant);\r\n    }\r\n  }\r\n\r\n  setCurrentTenantRelations(tenantRelations: TenantRelation[]): void {\r\n    this.tenantRelationsSubject.next(tenantRelations);\r\n  }\r\n\r\n  setCurrentUser(user: User): void {\r\n    if (this.userSubject.value !== user) {\r\n      this.userSubject.next(user);\r\n    }\r\n  }\r\n\r\n  getCurrentTenant(): Tenant {\r\n    return this.tenantSubject.value;\r\n  }\r\n\r\n  getCurrentTenantRelations(): TenantRelation[] {\r\n    return this.tenantRelationsSubject.value;\r\n  }\r\n\r\n  getCurrentUser(): User {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  hasRole(tenantId: string, role: ROLE): boolean {\r\n    if (this.getCurrentTenantRelations()) {\r\n      const relation = find(this.getCurrentTenantRelations(), { tenantId });\r\n      return relation && relation.hasRole(role);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  loginForm: FormGroup = new FormGroup({\r\n    username: new FormControl('', Validators.required),\r\n    password: new FormControl('', Validators.required),\r\n  });\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  tenant: Tenant;\r\n  userSubscription: Subscription;\r\n  ROUTES = ROUTES;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private tenantService: TenantService,\r\n    private appService: AppService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.appService.getCurrentUser()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // check if there is a logged-in user already. if so, forward directly to the profile\r\n    this.userSubscription = this.appService.user.subscribe(user => {\r\n      if (user) {\r\n        this.router.navigate([`/${ROUTES.PROFILE}`]);\r\n      }\r\n    });\r\n    if (this.tenantPath()) {\r\n      // load the tenant information and redirect in case tenant path does not exist:\r\n      this.tenantService.getByPath(this.tenantPath()).subscribe(\r\n        () => {},\r\n        (error: any) => {\r\n          if (\r\n            error === 'Not Found' ||\r\n            (error instanceof HttpErrorResponse && error.status === 404)\r\n          ) {\r\n            this.router.navigate(['fehler', 'account-not-found']);\r\n          }\r\n        }\r\n      );\r\n      this.appService.tenant.subscribe((tenant: Tenant) => {\r\n        if (tenant) {\r\n          this.tenant = tenant;\r\n          this.appService.setColor(this.tenant);\r\n          // get return url from route parameters or default to '/'\r\n          this.returnUrl =\r\n            this.route.snapshot.queryParams['returnUrl'] ||\r\n            this.tenant.path + '/' + ROUTES.TENANT_PLANNER;\r\n        }\r\n      });\r\n      this.tenantService.load(this.tenantPath());\r\n    } else {\r\n      this.returnUrl = ROUTES.MY_TENANTS;\r\n    }\r\n    this.loginForm;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.appService.setColor(null);\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  tenantPath(): string {\r\n    return this.route.snapshot.params.tenantPath;\r\n  }\r\n\r\n  onSubmit() {\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(\r\n        this.loginForm.get('username').value,\r\n        this.loginForm.get('password').value\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(this.returnUrl.split('/'));\r\n        },\r\n        error => {\r\n          this.error = 'Nutzername oder Passwort ist falsch';\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 col-md-8 offset-md-2 col-xl-4 offset-xl-4\">\r\n    <div class=\"card\">\r\n      <h4 class=\"card-header\">\r\n        {{ tenant ? tenant.name + ' - ' : '' }}Interner Bereich\r\n      </h4>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"username\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && loginForm.get('username').errors\r\n              }\"\r\n              required\r\n            />\r\n            <div\r\n              *ngIf=\"submitted && loginForm.get('username').errors\"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              <div *ngIf=\"loginForm.get('username').errors.required\">\r\n                Bitte Nutzername angeben\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Passwort</label>\r\n            <input\r\n              type=\"password\"\r\n              formControlName=\"password\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && loginForm.get('password').errors\r\n              }\"\r\n              required\r\n            />\r\n            <div\r\n              *ngIf=\"submitted && loginForm.get('password').errors\"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              <div *ngIf=\"loginForm.get('password').errors.required\">\r\n                Bitte Passwort angeben\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-success\">\r\n              <span\r\n                *ngIf=\"loading\"\r\n                class=\"spinner-border spinner-border-sm mr-1\"\r\n              ></span>\r\n              Login\r\n            </button>\r\n          </div>\r\n          <div>\r\n            > noch kein Nutzerprofil?\r\n            <a\r\n              [routerLink]=\"\r\n                tenantPath()\r\n                  ? [\r\n                      '/' + ROUTES.TENANT_PREFIX,\r\n                      tenantPath(),\r\n                      ROUTES.REGISTER_USER\r\n                    ]\r\n                  : ['/' + ROUTES.REGISTER_USER]\r\n              \"\r\n              >Hier registrieren</a\r\n            >\r\n          </div>\r\n          <div>\r\n            > Passwort vergessen?\r\n            <a [routerLink]=\"['/' + ROUTES.PASSWORD_FORGOTTEN]\"\r\n              >Hier zurücksetzen</a\r\n            >\r\n          </div>\r\n          <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n            {{ error }}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  CanActivate,\r\n} from '@angular/router';\r\nimport { TenantRelation } from '../models/tenant-relation';\r\nimport { AppService } from '../services/app.service';\r\nimport { find } from 'lodash';\r\nimport { of } from 'rxjs';\r\nimport { TenantService } from '../services/tenant.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { ROLE } from '../../../../common/tenant-relation';\r\nimport { ROUTES } from '../../../../common/frontend.routes';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TenantGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private appService: AppService,\r\n    private tenantService: TenantService\r\n  ) {}\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.appService.getCurrentTenantRelations()) {\r\n      const isAllowed = this.hasAccess(\r\n        this.appService.getCurrentTenantRelations(),\r\n        route\r\n      );\r\n      //console.log('Guard said: ' + (isAllowed ? 'allowed' : 'rejected'));\r\n      return of(isAllowed);\r\n    } else {\r\n      return this.tenantService.getAll().pipe(\r\n        map(tenantRelations => {\r\n          const isAllowed = this.hasAccess(tenantRelations, route);\r\n          //console.log('Guard said: ' + (isAllowed ? 'allowed' : 'rejected'));\r\n          return isAllowed;\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private hasAccess(\r\n    tenantRelations: TenantRelation[],\r\n    route: ActivatedRouteSnapshot\r\n  ): boolean {\r\n    const tenantPath = route.params.tenantPath;\r\n    const relation = find(tenantRelations, (tenantRelation: TenantRelation) => {\r\n      return tenantRelation.active && tenantRelation.tenant.path === tenantPath;\r\n    });\r\n    if (relation) {\r\n      const requiredRole = route.data.role as ROLE;\r\n      if (requiredRole) {\r\n        return relation.hasRole(requiredRole);\r\n      }\r\n      // no specific role required\r\n      return true;\r\n    }\r\n    // not an internal member of the tenant - redirect user to the public events screen\r\n    this.router.navigate([route.params.tenantPath, ROUTES.TENANT_EVENTS]);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport * as moment from 'moment';\r\nimport { TenantService } from './services/tenant.service';\r\nimport { Tenant } from './models/tenant';\r\nimport { User } from './models/user';\r\nimport { TenantRelation } from './models/tenant-relation';\r\nimport { AppService } from './services/app.service';\r\nimport { ROLE } from '../../../common/tenant-relation';\r\nimport { ROUTES } from '../../../common/frontend.routes';\r\nimport { NgcCookieConsentService } from 'ngx-cookieconsent';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  serverResult: '';\r\n  receivedEmail: '';\r\n  tenant: Tenant = null;\r\n  username: string = null;\r\n  tenantRelations: TenantRelation[];\r\n  ROUTES = ROUTES;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private tenantService: TenantService,\r\n    private appService: AppService,\r\n    // LEAVE THE NEXT LINE IN THE FILE!!! :-)\r\n    private ccService: NgcCookieConsentService,\r\n    // LEAVE THE ABOVE LINE IN THE FILE!!! :-)\r\n    private userService: UserService\r\n  ) {\r\n    moment.locale('de');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.appService.tenant.subscribe((tenant: Tenant) => {\r\n      if (tenant) {\r\n        this.tenant = tenant;\r\n      }\r\n    });\r\n    this.appService.user.subscribe((user: User) => {\r\n      if (user) {\r\n        this.username = user.name;\r\n        // if there is a user, load all related tenants for this user\r\n        this.loadTenantRelations();\r\n        // also, load the events that the user has access to\r\n        this.userService.loadEventsWithAccessTo().subscribe(relations => {\r\n          user.eventRelations = relations;\r\n        });\r\n      } else {\r\n        this.username = null;\r\n      }\r\n    });\r\n    this.appService.tenantRelations.subscribe(tenantRelations => {\r\n      this.tenantRelations = tenantRelations;\r\n    });\r\n  }\r\n\r\n  private loadTenantRelations(): void {\r\n    this.tenantService\r\n      .getAll()\r\n      .subscribe((tenantRelations: TenantRelation[]) => {\r\n        if (\r\n          tenantRelations.length === 1 &&\r\n          tenantRelations[0].active &&\r\n          (!this.tenant ||\r\n            (this.tenant &&\r\n              this.tenant.path !== tenantRelations[0].tenant.path))\r\n        ) {\r\n          this.tenantService.load(tenantRelations[0].tenant.path);\r\n        }\r\n      });\r\n  }\r\n\r\n  isOwnerOfCurrentTenant(): boolean {\r\n    return this.hasRole(ROLE.OWNER);\r\n  }\r\n\r\n  isAdminOfCurrentTenant(): boolean {\r\n    return this.hasRole(ROLE.ADMIN);\r\n  }\r\n\r\n  isMemberOfCurrentTenant(): boolean {\r\n    return this.hasRole(ROLE.MEMBER);\r\n  }\r\n\r\n  private hasRole(role: ROLE): boolean {\r\n    if (this.appService.getCurrentTenant() && this.tenantRelations) {\r\n      const relation = this.tenantRelations.find(\r\n        tr => tr.tenantId === this.appService.getCurrentTenant().id && tr.active\r\n      );\r\n      if (relation) {\r\n        if (role === ROLE.OWNER) return relation.isOwner();\r\n        if (role === ROLE.ADMIN) return relation.isAdmin();\r\n        if (role === ROLE.MEMBER) return relation.isMember();\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.appService.getCurrentUser() !== null;\r\n  }\r\n\r\n  logout(): void {\r\n    this.authenticationService.logout();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a\r\n    class=\"nav-link nav-logo\"\r\n    *ngIf=\"tenant\"\r\n    [routerLink]=\"[ROUTES.TENANT_PREFIX, tenant.path, ROUTES.TENANT_EVENTS]\"\r\n  >\r\n    <img *ngIf=\"tenant.logo\" [src]=\"tenant.logo\" />\r\n    <img\r\n      *ngIf=\"!tenant.logo\"\r\n      src=\"assets/logo.png\"\r\n      style=\"margin-left: 30px; padding: 5px\"\r\n    />\r\n  </a>\r\n  <a\r\n    class=\"nav-link nav-logo\"\r\n    *ngIf=\"!tenant\"\r\n    [routerLink]=\"['/' + ROUTES.HOME]\"\r\n  >\r\n    <img src=\"assets/logo.png\" style=\"margin-left: 30px; padding: 5px\" />\r\n  </a>\r\n  <!--<div *ngIf=\"!isLoggedIn() || !tenant\" style=\"flex: 100000000 1 auto\"></div>-->\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div id=\"navbarSupportedContent\" class=\"collapse navbar-collapse\">\r\n    <ul\r\n      class=\"navbar-nav mr-auto\"\r\n      [ngClass]=\"{ 'mr-auto': isLoggedIn(), 'ml-auto': !isLoggedIn() }\"\r\n    >\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[ROUTES.HOME]\"\r\n          routerLinkActive=\"active\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          >Home</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"tenant\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[\r\n            ROUTES.TENANT_PREFIX,\r\n            tenant.path,\r\n            ROUTES.TENANT_EVENTS\r\n          ]\"\r\n          routerLinkActive=\"active\"\r\n          [routerLinkActiveOptions]=\"{\r\n            __change_detection_hack__: [tenant.path]\r\n          }\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          >Events</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"isMemberOfCurrentTenant()\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[\r\n            ROUTES.TENANT_PREFIX,\r\n            tenant.path,\r\n            ROUTES.TENANT_PLANNER\r\n          ]\"\r\n          routerLinkActive=\"active\"\r\n          [routerLinkActiveOptions]=\"{\r\n            __change_detection_hack__: [tenant.path]\r\n          }\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          >Event-Planner</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"isAdminOfCurrentTenant()\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[\r\n            ROUTES.TENANT_PREFIX,\r\n            tenant.path,\r\n            ROUTES.TENANT_MANAGEMENT\r\n          ]\"\r\n          routerLinkActive=\"active\"\r\n          [routerLinkActiveOptions]=\"{\r\n            __change_detection_hack__: [tenant.path]\r\n          }\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          >Verwaltung</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn()\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[ROUTES.MY_TENANTS]\"\r\n          routerLinkActive=\"active\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          >Meine Organisationen</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn()\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[ROUTES.PROFILE]\"\r\n          routerLinkActive=\"active\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          >Mein Profil</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"!isLoggedIn()\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"\r\n            tenant\r\n              ? [ROUTES.TENANT_PREFIX, tenant.path, ROUTES.LOGIN]\r\n              : [ROUTES.LOGIN]\r\n          \"\r\n          routerLinkActive=\"active\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          >Login</a\r\n        >\r\n      </li>\r\n    </ul>\r\n    <div *ngIf=\"isLoggedIn()\">\r\n      angemeldet als:&nbsp;<u\r\n        class=\"clickable\"\r\n        [routerLink]=\"[ROUTES.PROFILE]\"\r\n        >{{ username }}</u\r\n      >\r\n      <button\r\n        id=\"logout-button\"\r\n        class=\"btn btn-outline-danger my-2 my-sm-0 ml-3\"\r\n        (click)=\"logout()\"\r\n      >\r\n        Logout\r\n      </button>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\" style=\"margin-top: 30px\">\r\n    <div class=\"col-12 col-xl-10 offset-xl-1\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n  <app-notification style=\"z-index: 10000\"></app-notification>\r\n</div>\r\n\r\n<footer>\r\n  <div class=\"credits\">\r\n    <a [routerLink]=\"[ROUTES.IMPRINT]\">Impressum</a>\r\n  </div>\r\n  <div class=\"credits\">\r\n    <small>zur Verfügung gestellt von</small>&nbsp;<br />\r\n    <a href=\"https://s4-consulting.de\"\r\n      >Stefan Strobel Software & Service Consulting</a\r\n    >\r\n  </div>\r\n</footer>\r\n","import { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { SubscriptionI } from '../../../../common/subscription';\r\nimport { TenantI } from '../../../../common/tenant';\r\n\r\nexport class Subscription implements SubscriptionI {\r\n  id?: string;\r\n  tenant?: TenantI;\r\n  tenantId: string;\r\n  pricePerMonth?: number;\r\n  paid: Date = null;\r\n  createdAt?: Date;\r\n\r\n  constructor(item?: any) {\r\n    if (item) {\r\n      this.id = item.id;\r\n      this.tenantId = item.tenantId;\r\n      this.tenant = item.tenant;\r\n      this.paid = item.paid;\r\n      this.pricePerMonth = item.pricePerMonth;\r\n      this.createdAt = item.createdAt;\r\n    }\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SubscriptionAdapter implements Adapter<Subscription> {\r\n  adapt(item: any): Subscription {\r\n    return new Subscription(item);\r\n  }\r\n}\r\n","import { EventRelationI } from '../../../../common/event-relation';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { User } from './user';\r\nimport { Event } from './event';\r\nimport { EventSeriesI } from '../../../../common/event-series';\r\n\r\nexport class EventRelation implements EventRelationI {\r\n  id: string;\r\n  user?: User;\r\n  userId: string;\r\n  event?: Event;\r\n  eventId: string;\r\n  eventSeries?: EventSeriesI;\r\n  eventSeriesId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventRelationAdapter implements Adapter<EventRelation> {\r\n  adapt(item: any): EventRelation {\r\n    const relation = new EventRelation();\r\n    relation.id = item.id;\r\n    relation.userId = item.userId;\r\n    relation.eventId = item.eventId;\r\n    relation.eventSeriesId = item.eventSeriesId;\r\n    return relation;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { SubscriptionService } from 'src/app/services/subscription.service';\r\nimport { Subscription } from 'src/app/models/subscription';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { environment } from 'src/environments/environment';\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n  selector: 'subscription',\r\n  templateUrl: './subscription.component.html',\r\n  styleUrls: ['./subscription.component.scss'],\r\n})\r\nexport class SubscriptionComponent implements OnInit {\r\n  @Input()\r\n  tenant: Tenant;\r\n  subscriptions: Subscription[] = null;\r\n  subscriptionForm: FormGroup = new FormGroup({\r\n    months: new FormControl(1, Validators.required),\r\n  });\r\n  linkToCustomerPortal: string = null;\r\n\r\n  constructor(private subscriptionService: SubscriptionService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptionService\r\n      .getLinkToStripCustomerPortal(this.tenant.id)\r\n      .subscribe(responseWithLink => {\r\n        this.linkToCustomerPortal = responseWithLink.link;\r\n      });\r\n  }\r\n\r\n  initializeSubscription(): void {\r\n    this.subscriptionService\r\n      .initializePayment({\r\n        tenantId: this.tenant.id,\r\n        paid: null,\r\n      })\r\n      .subscribe(\r\n        (responseWithStripeSessionID: any) => {\r\n          // we received a link to the PSP. open a new browser window / tab\r\n          const stripe = Stripe(environment.stripePubKey);\r\n          stripe\r\n            .redirectToCheckout({\r\n              sessionId: responseWithStripeSessionID.stripeSessionID,\r\n            })\r\n            .then(() => {\r\n              console.log('success for stripe callback! :-)');\r\n            });\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  moreMonths(): string {\r\n    const months = parseInt(this.subscriptionForm.get('months').value);\r\n    return (\r\n      (months === 1 ? 'weiteren ' : 'weitere ') +\r\n      (months === 1 ? 'Monat' : 'Monate') +\r\n      ' kaufen.'\r\n    );\r\n  }\r\n\r\n  subscriptionEndsSoon(): boolean {\r\n    return (\r\n      this.tenant.subscriptionUntil &&\r\n      moment(this.tenant.subscriptionUntil).diff(moment(), 'days') <= 7\r\n    );\r\n  }\r\n}\r\n","<h4>Lizenz</h4>\r\n<div\r\n  class=\"alert alert-secondary d-flex\"\r\n  *ngIf=\"tenant.active\"\r\n  style=\"background-color: whitesmoke\"\r\n>\r\n  <div style=\"width: 50px\">\r\n    <i class=\"fas fa-check text-success\"></i>\r\n  </div>\r\n  <div class=\"flex-grow-1\">\r\n    <div>\r\n      Die Organisation hat<span *ngIf=\"tenant.subscriptionUntil\">\r\n        noch bis zum\r\n        <b>{{ tenant.subscriptionUntil | date: 'dd.MM.yyyy' }}</b></span\r\n      >\r\n      eine gültige Lizenz.\r\n    </div>\r\n    <a\r\n      *ngIf=\"linkToCustomerPortal && tenant.subscriptionUntil\"\r\n      [href]=\"linkToCustomerPortal\"\r\n      target=\"_blank\"\r\n    >\r\n      Alte Rechnungen einsehen\r\n    </a>\r\n    <a\r\n      *ngIf=\"linkToCustomerPortal && !tenant.subscriptionUntil\"\r\n      class=\"btn btn-sm btn-outline-success float-right\"\r\n      [href]=\"linkToCustomerPortal\"\r\n      target=\"_blank\"\r\n    >\r\n      Zahlungen und Rechnungen verwalten\r\n    </a>\r\n    <button\r\n      *ngIf=\"tenant.subscriptionUntil\"\r\n      class=\"btn btn-sm btn-outline-success float-right\"\r\n      (click)=\"initializeSubscription()\"\r\n    >\r\n      Neue Lizenz erwerben\r\n    </button>\r\n  </div>\r\n</div>\r\n<div\r\n  class=\"alert alert-secondary d-flex\"\r\n  *ngIf=\"!tenant.active\"\r\n  style=\"background-color: whitesmoke\"\r\n>\r\n  <div style=\"width: 50px\">\r\n    <i class=\"fas fa-exclamation-triangle text-danger\"></i>\r\n  </div>\r\n  <div class=\"flex-grow-1\">\r\n    <div>\r\n      Diese Organisation ist gerade nicht freigeschaltet und kann daher nicht\r\n      genutzt werden. Bitte eine Lizenz kaufen, damit Events öffentlich\r\n      angezeigt werden.\r\n    </div>\r\n    <a\r\n      *ngIf=\"linkToCustomerPortal\"\r\n      [href]=\"linkToCustomerPortal\"\r\n      target=\"_blank\"\r\n    >\r\n      Alte Rechnungen einsehen\r\n    </a>\r\n    <button\r\n      class=\"btn btn-sm btn-outline-success float-right\"\r\n      (click)=\"initializeSubscription()\"\r\n    >\r\n      Jetzt Lizenz erwerben\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-legal',\r\n  templateUrl: './legal.component.html',\r\n  styleUrls: ['./legal.component.scss']\r\n})\r\nexport class LegalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 id=\"agb\">Allgemeine Geschäftsbedingungen (AGB)</h1>\r\n<h2>\r\n  Zustandekommen einer Vereinbarung über die Nutzung der Eventplanungssoftware\r\n  \"plevents\"\r\n</h2>\r\n<p>\r\n  Durch Anklicken des Feldes \"Registrieren kommt eine Vereinbarung über die\r\n  Nutzung der Eventplanungssoftware plevents.de (nachfolgend \"plevents\" genannt)\r\n  zwischen der Stefan Strobel Software & Service Consulting (nachfolgend\r\n  \"Betreiber\" genannt) als Lizenzgeber und dem Nutzer der Eventplanungssoftware\r\n  (nachfolgend \"Nutzer\" genannt) als Lizenznehmer zu den nachfolgenden\r\n  Bedingungen zustande.\r\n</p>\r\n<p>\r\n  Der Betreiber schließt diese Vereinbarung über die Nutzung der\r\n  Eventplanungssoftware nicht mit Verbrauchern im Sinne des § 13 BGB ab.\r\n</p>\r\n\r\n<h2>Vertragsgegenstand und Lizenzumfang</h2>\r\n<p>\r\n  Vertragsgegenstand ist die Einräumung eines Nutzungsrechts des Nutzers durch\r\n  den Betreiber an der Eventplanungssoftware.\r\n</p>\r\n<p>\r\n  Die Beschreibung der Eventplanungssoftware ergibt sich aus der Beschreibung\r\n  auf der Internetseite https://plevents.de/home.\r\n</p>\r\n<p>\r\n  Der Betreiber räumt dem Nutzer ein jederzeit widerrufliches, einfaches, nicht\r\n  übertragbares Recht ein, die Eventplanungssoftware im Rahmen des\r\n  bestimmungsgemäßen Gebrauchs in der jeweils aktuellen Version zu nutzen. Der\r\n  Betreiber stellt hierfür einen Aufruf über https://plevents.de zur Verfügung.\r\n</p>\r\n\r\n<h2>Störfälle</h2>\r\n<p>\r\n  Für eventuelle Störfälle steht dem Nutzer die Möglichkeit zur Verfügung, unter\r\n  der E-Mail-Adresse stefan.strobel@s4-consulting.de die Störung zu melden.\r\n</p>\r\n\r\n<h2>Vergütung</h2>\r\n<p>\r\n  Eine Vergütung schuldet der Nutzer dem Betreiber für die Verwendung der\r\n  Eventplanungssoftware im Rahmen des zeitlich nicht limiterten Testzugangs\r\n  zunächst nicht.\r\n</p>\r\n<p>\r\n  Sobald der Nutzer die Plattform für eine öffentlich nutzbare\r\n  Teilnehmerregistrierung verwenden möchte, muss er hierfür eine Lizenzgebühr\r\n  zahlen. Die Höhe richtet sich nach den zu diesem Zeitpunkt geltenden Gebühren.\r\n  Der Bezahlvorgang erfolgt als angemeldeter Nutzer über einen angebundenen\r\n  Zahlungsdienstleister. Die Vergütung fällt monatlich an und kann jederzeit\r\n  fristlos bis zum Ende eines Laufzeitmonats gekündigt werden. Etwaig bereits\r\n  gezahlte Beträge sind nicht erstattbar. Diese entgeltbasierte Lizenz muss\r\n  aktiv in der Anwendung aktiviert werden.\r\n</p>\r\n\r\n<h2>Vertragsdauer und Kündigung</h2>\r\n<p>\r\n  Diese Vereinbarung beginnt am Datum des Vertragsabschlusses und wird auf\r\n  unbestimmte Zeit geschlossen. Die Vertragsparteien können diese\r\n  Nutzungsvereinbarung jederzeit ordentlich fristlos kündigen. Das Recht zur\r\n  Kündigung aus wichtigem Grund bleibt überdies unberührt. Mit Wirksamwerden der\r\n  Kündigung erlöschen die Nutzungsrechte des Nutzers.\r\n</p>\r\n<p>\r\n  Sobald ein Nutzer das Vertragsverhältnis ordentlich kündigt, erlischt jede\r\n  weitere Nutzbarkeit.\r\n</p>\r\n\r\n<h2>Geheimhaltung und Datenschutz</h2>\r\n<p>Es gelten die Regelungen unter „Datenschutzhinweise“.</p>\r\n\r\n<h2>Beauftragung Dritter</h2>\r\n<p>\r\n  Der Betreiber ist berechtigt, Leistungen ganz oder teilweise durch von ihr\r\n  beauftragte Dritte ausführen zu lassen. Hierüber wird der Betreiber über\r\n  geeignete Wege informieren.\r\n</p>\r\n\r\n<h2>Übertragung auf Dritte</h2>\r\n<p>\r\n  Der Betreiber kann die Gesamtheit der Rechte und Pflichten aus dieser\r\n  Vereinbarung einem Dritten übertragen. Der Betreiber wird den Kunden über die\r\n  Übertragung informieren.\r\n</p>\r\n\r\n<h2>Allgemeine Bestimmungen</h2>\r\n<ol>\r\n  <li>\r\n    Sollte eine Bestimmung dieser Vereinbarung ganz oder teilweise unwirksam\r\n    sein oder werden oder sollte sich in dieser Vereinbarung eine Lücke\r\n    herausstellen, so wird die Wirksamkeit der übrigen Bestimmungen nicht\r\n    berührt. Die Vertragsparteien verpflichten sich, die unwirksame Bestimmung\r\n    gemäß den gesetzlichen Vorschriften zu ersetzen oder zu ergänzen.\r\n  </li>\r\n  <li>\r\n    Diese Vereinbarung unterliegt dem Recht der Bundesrepublik Deutschland.\r\n  </li>\r\n  <li>Gerichtsstand ist Stuttgart.</li>\r\n</ol>\r\n\r\n<h1 id=\"datenschutz\" class=\"mt-5\">Datenschutz&shy;erkl&auml;rung</h1>\r\n<h2>1. Datenschutz auf einen Blick</h2>\r\n<h3>Allgemeine Hinweise</h3>\r\n<p>\r\n  Die folgenden Hinweise geben einen einfachen &Uuml;berblick dar&uuml;ber, was\r\n  mit Ihren personenbezogenen Daten passiert, wenn Sie diese Website besuchen.\r\n  Personenbezogene Daten sind alle Daten, mit denen Sie pers&ouml;nlich\r\n  identifiziert werden k&ouml;nnen. Ausf&uuml;hrliche Informationen zum Thema\r\n  Datenschutz entnehmen Sie unserer unter diesem Text aufgef&uuml;hrten\r\n  Datenschutzerkl&auml;rung.\r\n</p>\r\n<h3>Datenerfassung auf dieser Website</h3>\r\n<h4>Wer ist verantwortlich f&uuml;r die Datenerfassung auf dieser Website?</h4>\r\n<p>\r\n  Die Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber.\r\n  Dessen Kontaktdaten k&ouml;nnen Sie dem Impressum dieser Website entnehmen.\r\n</p>\r\n<h4>Wie erfassen wir Ihre Daten?</h4>\r\n<p>\r\n  Ihre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen.\r\n  Hierbei kann es sich z.&nbsp;B. um Daten handeln, die Sie in ein\r\n  Kontaktformular eingeben.\r\n</p>\r\n<p>\r\n  Andere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der\r\n  Website durch unsere IT-Systeme erfasst. Das sind vor allem technische Daten\r\n  (z.&nbsp;B. Internetbrowser, Betriebssystem oder Uhrzeit des Seitenaufrufs).\r\n  Die Erfassung dieser Daten erfolgt automatisch, sobald Sie diese Website\r\n  betreten.\r\n</p>\r\n<h4>Wof&uuml;r nutzen wir Ihre Daten?</h4>\r\n<p>\r\n  Ein Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der\r\n  Website zu gew&auml;hrleisten. Andere Daten k&ouml;nnen zur Analyse Ihres\r\n  Nutzerverhaltens verwendet werden.\r\n</p>\r\n<h4>Welche Rechte haben Sie bez&uuml;glich Ihrer Daten?</h4>\r\n<p>\r\n  Sie haben jederzeit das Recht, unentgeltlich Auskunft &uuml;ber Herkunft,\r\n  Empf&auml;nger und Zweck Ihrer gespeicherten personenbezogenen Daten zu\r\n  erhalten. Sie haben au&szlig;erdem ein Recht, die Berichtigung oder\r\n  L&ouml;schung dieser Daten zu verlangen. Wenn Sie eine Einwilligung zur\r\n  Datenverarbeitung erteilt haben, k&ouml;nnen Sie diese Einwilligung jederzeit\r\n  f&uuml;r die Zukunft widerrufen. Au&szlig;erdem haben Sie das Recht, unter\r\n  bestimmten Umst&auml;nden die Einschr&auml;nkung der Verarbeitung Ihrer\r\n  personenbezogenen Daten zu verlangen. Des Weiteren steht Ihnen ein\r\n  Beschwerderecht bei der zust&auml;ndigen Aufsichtsbeh&ouml;rde zu.\r\n</p>\r\n<p>\r\n  Hierzu sowie zu weiteren Fragen zum Thema Datenschutz k&ouml;nnen Sie sich\r\n  jederzeit unter der im Impressum angegebenen Adresse an uns wenden.\r\n</p>\r\n<h2>2. Hosting und Content Delivery Networks (CDN)</h2>\r\n<h3>Externes Hosting</h3>\r\n<p>\r\n  Diese Website wird bei einem externen Dienstleister gehostet (Hoster). Die\r\n  personenbezogenen Daten, die auf dieser Website erfasst werden, werden auf den\r\n  Servern des Hosters gespeichert. Hierbei kann es sich v. a. um IP-Adressen,\r\n  Kontaktanfragen, Meta- und Kommunikationsdaten, Vertragsdaten, Kontaktdaten,\r\n  Namen, Websitezugriffe und sonstige Daten, die &uuml;ber eine Website\r\n  generiert werden, handeln.\r\n</p>\r\n<p>\r\n  Der Einsatz des Hosters erfolgt zum Zwecke der Vertragserf&uuml;llung\r\n  gegen&uuml;ber unseren potenziellen und bestehenden Kunden (Art. 6 Abs. 1 lit.\r\n  b DSGVO) und im Interesse einer sicheren, schnellen und effizienten\r\n  Bereitstellung unseres Online-Angebots durch einen professionellen Anbieter\r\n  (Art. 6 Abs. 1 lit. f DSGVO).\r\n</p>\r\n<p>\r\n  Unser Hoster wird Ihre Daten nur insoweit verarbeiten, wie dies zur\r\n  Erf&uuml;llung seiner Leistungspflichten erforderlich ist und unsere Weisungen\r\n  in Bezug auf diese Daten befolgen.\r\n</p>\r\n<p>Wir setzen folgenden Hoster ein:</p>\r\n<p>\r\n  Uberspace<br />\r\n  Jonas Pasche<br />\r\n  Kaiserstr. 15<br />\r\n  55116 Mainz\r\n</p>\r\n<h2>3. Allgemeine Hinweise und Pflicht&shy;informationen</h2>\r\n<h3>Datenschutz</h3>\r\n<p>\r\n  Die Betreiber dieser Seiten nehmen den Schutz Ihrer pers&ouml;nlichen Daten\r\n  sehr ernst. Wir behandeln Ihre personenbezogenen Daten vertraulich und\r\n  entsprechend der gesetzlichen Datenschutzvorschriften sowie dieser\r\n  Datenschutzerkl&auml;rung.\r\n</p>\r\n<p>\r\n  Wenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten\r\n  erhoben. Personenbezogene Daten sind Daten, mit denen Sie pers&ouml;nlich\r\n  identifiziert werden k&ouml;nnen. Die vorliegende Datenschutzerkl&auml;rung\r\n  erl&auml;utert, welche Daten wir erheben und wof&uuml;r wir sie nutzen. Sie\r\n  erl&auml;utert auch, wie und zu welchem Zweck das geschieht.\r\n</p>\r\n<p>\r\n  Wir weisen darauf hin, dass die Daten&uuml;bertragung im Internet (z.&nbsp;B.\r\n  bei der Kommunikation per E-Mail) Sicherheitsl&uuml;cken aufweisen kann. Ein\r\n  l&uuml;ckenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht\r\n  m&ouml;glich.\r\n</p>\r\n<h3>Hinweis zur verantwortlichen Stelle</h3>\r\n<p>\r\n  Die verantwortliche Stelle f&uuml;r die Datenverarbeitung auf dieser Website\r\n  ist:\r\n</p>\r\n<p>\r\n  Stefan Strobel Software &amp; Service Consulting<br />\r\n  Stefan Strobel<br />\r\n  Robert-Bosch-Str. 43<br />\r\n  71277 Rutesheim\r\n</p>\r\n\r\n<p>\r\n  Telefon: +49 159 040 533 54<br />\r\n  E-Mail: stefan.strobel@s4-consulting.de\r\n</p>\r\n<p>\r\n  Verantwortliche Stelle ist die nat&uuml;rliche oder juristische Person, die\r\n  allein oder gemeinsam mit anderen &uuml;ber die Zwecke und Mittel der\r\n  Verarbeitung von personenbezogenen Daten (z.&nbsp;B. Namen, E-Mail-Adressen o.\r\n  &Auml;.) entscheidet.\r\n</p>\r\n\r\n<h3>Speicherdauer</h3>\r\n<p>\r\n  Soweit innerhalb dieser Datenschutzerkl&auml;rung keine speziellere\r\n  Speicherdauer genannt wurde, verbleiben Ihre personenbezogenen Daten bei uns,\r\n  bis der Zweck f&uuml;r die Datenverarbeitung entf&auml;llt. Wenn Sie ein\r\n  berechtigtes L&ouml;schersuchen geltend machen oder eine Einwilligung zur\r\n  Datenverarbeitung widerrufen, werden Ihre Daten gel&ouml;scht, sofern wir\r\n  keinen anderen rechtlich zul&auml;ssigen&nbsp; Gr&uuml;nde f&uuml;r die\r\n  Speicherung Ihrer personenbezogenen Daten haben (z.B. steuer- oder\r\n  handelsrechtliche Aufbewahrungsfristen); im letztgenannten Fall erfolgt die\r\n  L&ouml;schung nach Fortfall dieser Gr&uuml;nde.\r\n</p>\r\n<h3>Widerruf Ihrer Einwilligung zur Datenverarbeitung</h3>\r\n<p>\r\n  Viele Datenverarbeitungsvorg&auml;nge sind nur mit Ihrer ausdr&uuml;cklichen\r\n  Einwilligung m&ouml;glich. Sie k&ouml;nnen eine bereits erteilte Einwilligung\r\n  jederzeit widerrufen. Die Rechtm&auml;&szlig;igkeit der bis zum Widerruf\r\n  erfolgten Datenverarbeitung bleibt vom Widerruf unber&uuml;hrt.\r\n</p>\r\n<h3>\r\n  Widerspruchsrecht gegen die Datenerhebung in besonderen F&auml;llen sowie\r\n  gegen Direktwerbung (Art. 21 DSGVO)\r\n</h3>\r\n<p>\r\n  WENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F DSGVO\r\n  ERFOLGT, HABEN SIE JEDERZEIT DAS RECHT, AUS GR&Uuml;NDEN, DIE SICH AUS IHRER\r\n  BESONDEREN SITUATION ERGEBEN, GEGEN DIE VERARBEITUNG IHRER PERSONENBEZOGENEN\r\n  DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH F&Uuml;R EIN AUF DIESE\r\n  BESTIMMUNGEN GEST&Uuml;TZTES PROFILING. DIE JEWEILIGE RECHTSGRUNDLAGE, AUF\r\n  DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER\r\n  DATENSCHUTZERKL&Auml;RUNG. WENN SIE WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE\r\n  BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR VERARBEITEN, ES SEI DENN, WIR\r\n  K&Ouml;NNEN ZWINGENDE SCHUTZW&Uuml;RDIGE GR&Uuml;NDE F&Uuml;R DIE VERARBEITUNG\r\n  NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN &Uuml;BERWIEGEN ODER\r\n  DIE VERARBEITUNG DIENT DER GELTENDMACHUNG, AUS&Uuml;BUNG ODER VERTEIDIGUNG VON\r\n  RECHTSANSPR&Uuml;CHEN (WIDERSPRUCH NACH ART. 21 ABS. 1 DSGVO).\r\n</p>\r\n<p>\r\n  WERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU\r\n  BETREIBEN, SO HABEN SIE DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE\r\n  VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER DATEN ZUM ZWECKE DERARTIGER\r\n  WERBUNG EINZULEGEN; DIES GILT AUCH F&Uuml;R DAS PROFILING, SOWEIT ES MIT\r\n  SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN IHRE\r\n  PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER DIREKTWERBUNG\r\n  VERWENDET (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).\r\n</p>\r\n<h3>\r\n  Beschwerde&shy;recht bei der zust&auml;ndigen Aufsichts&shy;beh&ouml;rde\r\n</h3>\r\n<p>\r\n  Im Falle von Verst&ouml;&szlig;en gegen die DSGVO steht den Betroffenen ein\r\n  Beschwerderecht bei einer Aufsichtsbeh&ouml;rde, insbesondere in dem\r\n  Mitgliedstaat ihres gew&ouml;hnlichen Aufenthalts, ihres Arbeitsplatzes oder\r\n  des Orts des mutma&szlig;lichen Versto&szlig;es zu. Das Beschwerderecht\r\n  besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher\r\n  Rechtsbehelfe.\r\n</p>\r\n<h3>Recht auf Daten&shy;&uuml;bertrag&shy;barkeit</h3>\r\n<p>\r\n  Sie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in\r\n  Erf&uuml;llung eines Vertrags automatisiert verarbeiten, an sich oder an einen\r\n  Dritten in einem g&auml;ngigen, maschinenlesbaren Format aush&auml;ndigen zu\r\n  lassen. Sofern Sie die direkte &Uuml;bertragung der Daten an einen anderen\r\n  Verantwortlichen verlangen, erfolgt dies nur, soweit es technisch machbar ist.\r\n</p>\r\n<h3>SSL- bzw. TLS-Verschl&uuml;sselung</h3>\r\n<p>\r\n  Diese Seite nutzt aus Sicherheitsgr&uuml;nden und zum Schutz der\r\n  &Uuml;bertragung vertraulicher Inhalte, wie zum Beispiel Bestellungen oder\r\n  Anfragen, die Sie an uns als Seitenbetreiber senden, eine SSL- bzw.\r\n  TLS-Verschl&uuml;sselung. Eine verschl&uuml;sselte Verbindung erkennen Sie\r\n  daran, dass die Adresszeile des Browsers von &bdquo;http://&ldquo; auf\r\n  &bdquo;https://&ldquo; wechselt und an dem Schloss-Symbol in Ihrer\r\n  Browserzeile.\r\n</p>\r\n<p>\r\n  Wenn die SSL- bzw. TLS-Verschl&uuml;sselung aktiviert ist, k&ouml;nnen die\r\n  Daten, die Sie an uns &uuml;bermitteln, nicht von Dritten mitgelesen werden.\r\n</p>\r\n<h3>Auskunft, L&ouml;schung und Berichtigung</h3>\r\n<p>\r\n  Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das\r\n  Recht auf unentgeltliche Auskunft &uuml;ber Ihre gespeicherten\r\n  personenbezogenen Daten, deren Herkunft und Empf&auml;nger und den Zweck der\r\n  Datenverarbeitung und ggf. ein Recht auf Berichtigung oder L&ouml;schung\r\n  dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene Daten\r\n  k&ouml;nnen Sie sich jederzeit unter der im Impressum angegebenen Adresse an\r\n  uns wenden.\r\n</p>\r\n<h3>Recht auf Einschr&auml;nkung der Verarbeitung</h3>\r\n<p>\r\n  Sie haben das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer\r\n  personenbezogenen Daten zu verlangen. Hierzu k&ouml;nnen Sie sich jederzeit\r\n  unter der im Impressum angegebenen Adresse an uns wenden. Das Recht auf\r\n  Einschr&auml;nkung der Verarbeitung besteht in folgenden F&auml;llen:\r\n</p>\r\n<ul>\r\n  <li>\r\n    Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen Daten\r\n    bestreiten, ben&ouml;tigen wir in der Regel Zeit, um dies zu\r\n    &uuml;berpr&uuml;fen. F&uuml;r die Dauer der Pr&uuml;fung haben Sie das\r\n    Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten\r\n    zu verlangen.\r\n  </li>\r\n  <li>\r\n    Wenn die Verarbeitung Ihrer personenbezogenen Daten unrechtm&auml;&szlig;ig\r\n    geschah/geschieht, k&ouml;nnen Sie statt der L&ouml;schung die\r\n    Einschr&auml;nkung der Datenverarbeitung verlangen.\r\n  </li>\r\n  <li>\r\n    Wenn wir Ihre personenbezogenen Daten nicht mehr ben&ouml;tigen, Sie sie\r\n    jedoch zur Aus&uuml;bung, Verteidigung oder Geltendmachung von\r\n    Rechtsanspr&uuml;chen ben&ouml;tigen, haben Sie das Recht, statt der\r\n    L&ouml;schung die Einschr&auml;nkung der Verarbeitung Ihrer\r\n    personenbezogenen Daten zu verlangen.\r\n  </li>\r\n  <li>\r\n    Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss\r\n    eine Abw&auml;gung zwischen Ihren und unseren Interessen vorgenommen werden.\r\n    Solange noch nicht feststeht, wessen Interessen &uuml;berwiegen, haben Sie\r\n    das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen\r\n    Daten zu verlangen.\r\n  </li>\r\n</ul>\r\n<p>\r\n  Wenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschr&auml;nkt\r\n  haben, d&uuml;rfen diese Daten &ndash; von ihrer Speicherung abgesehen &ndash;\r\n  nur mit Ihrer Einwilligung oder zur Geltendmachung, Aus&uuml;bung oder\r\n  Verteidigung von Rechtsanspr&uuml;chen oder zum Schutz der Rechte einer\r\n  anderen nat&uuml;rlichen oder juristischen Person oder aus Gr&uuml;nden eines\r\n  wichtigen &ouml;ffentlichen Interesses der Europ&auml;ischen Union oder eines\r\n  Mitgliedstaats verarbeitet werden.\r\n</p>\r\n<h2>4. Datenerfassung auf dieser Website</h2>\r\n<h3>Cookies</h3>\r\n<p>\r\n  Unsere Internetseiten verwenden so genannte &bdquo;Cookies&ldquo;. Cookies\r\n  sind kleine Textdateien und richten auf Ihrem Endger&auml;t keinen Schaden an.\r\n  Sie werden entweder vor&uuml;bergehend f&uuml;r die Dauer einer Sitzung\r\n  (Session-Cookies) oder dauerhaft (permanente Cookies) auf Ihrem Endger&auml;t\r\n  gespeichert. Session-Cookies werden nach Ende Ihres Besuchs automatisch\r\n  gel&ouml;scht. Permanente Cookies bleiben auf Ihrem Endger&auml;t gespeichert,\r\n  bis Sie diese selbst l&ouml;schen&nbsp;oder eine automatische L&ouml;schung\r\n  durch Ihren Webbrowser erfolgt.\r\n</p>\r\n<p>\r\n  Teilweise k&ouml;nnen auch Cookies von Drittunternehmen auf Ihrem\r\n  Endger&auml;t gespeichert werden, wenn Sie unsere Seite betreten\r\n  (Third-Party-Cookies). Diese erm&ouml;glichen uns oder Ihnen die Nutzung\r\n  bestimmter Dienstleistungen des Drittunternehmens (z.B. Cookies zur Abwicklung\r\n  von Zahlungsdienstleistungen).\r\n</p>\r\n<p>\r\n  Cookies haben verschiedene Funktionen. Zahlreiche Cookies sind technisch\r\n  notwendig, da bestimmte Websitefunktionen ohne diese nicht funktionieren\r\n  w&uuml;rden (z.B. die Warenkorbfunktion oder die Anzeige von Videos). Andere\r\n  Cookies dienen dazu, das Nutzerverhalten auszuwerten&nbsp;oder Werbung\r\n  anzuzeigen.\r\n</p>\r\n<p>\r\n  Cookies, die zur Durchf&uuml;hrung des elektronischen Kommunikationsvorgangs\r\n  (notwendige Cookies) oder zur Bereitstellung bestimmter, von Ihnen\r\n  erw&uuml;nschter Funktionen (funktionale Cookies, z. B. f&uuml;r die\r\n  Warenkorbfunktion) oder zur Optimierung der Website (z.B. Cookies zur Messung\r\n  des Webpublikums) erforderlich sind, werden auf Grundlage von Art. 6 Abs. 1\r\n  lit. f DSGVO gespeichert, sofern keine andere Rechtsgrundlage angegeben wird.\r\n  Der Websitebetreiber hat ein berechtigtes Interesse an der Speicherung von\r\n  Cookies zur technisch fehlerfreien und optimierten Bereitstellung seiner\r\n  Dienste. Sofern eine Einwilligung zur Speicherung von Cookies abgefragt wurde,\r\n  erfolgt die Speicherung der betreffenden Cookies ausschlie&szlig;lich auf\r\n  Grundlage dieser Einwilligung (Art. 6 Abs. 1 lit. a DSGVO); die Einwilligung\r\n  ist jederzeit widerrufbar.\r\n</p>\r\n<p>\r\n  Sie k&ouml;nnen Ihren Browser so einstellen, dass Sie &uuml;ber das Setzen von\r\n  Cookies informiert werden und Cookies nur im Einzelfall erlauben, die Annahme\r\n  von Cookies f&uuml;r bestimmte F&auml;lle oder generell ausschlie&szlig;en\r\n  sowie das automatische L&ouml;schen der Cookies beim Schlie&szlig;en des\r\n  Browsers aktivieren. Bei der Deaktivierung von Cookies kann die\r\n  Funktionalit&auml;t dieser Website eingeschr&auml;nkt sein.\r\n</p>\r\n<p>\r\n  Soweit Cookies von Drittunternehmen oder zu Analysezwecken eingesetzt werden,\r\n  werden wir Sie hier&uuml;ber im Rahmen dieser Datenschutzerkl&auml;rung\r\n  gesondert informieren und ggf. eine Einwilligung abfragen.\r\n</p>\r\n<h3>Server-Log-Dateien</h3>\r\n<p>\r\n  Der Provider der Seiten erhebt und speichert automatisch Informationen in so\r\n  genannten Server-Log-Dateien, die Ihr Browser automatisch an uns\r\n  &uuml;bermittelt. Dies sind:\r\n</p>\r\n<ul>\r\n  <li>Browsertyp und Browserversion</li>\r\n  <li>verwendetes Betriebssystem</li>\r\n  <li>Referrer URL</li>\r\n  <li>Hostname des zugreifenden Rechners</li>\r\n  <li>Uhrzeit der Serveranfrage</li>\r\n  <li>IP-Adresse</li>\r\n</ul>\r\n<p>\r\n  Eine Zusammenf&uuml;hrung dieser Daten mit anderen Datenquellen wird nicht\r\n  vorgenommen.\r\n</p>\r\n<p>\r\n  Die Erfassung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f\r\n  DSGVO. Der Websitebetreiber hat ein berechtigtes Interesse an der technisch\r\n  fehlerfreien Darstellung und der Optimierung seiner Website &ndash; hierzu\r\n  m&uuml;ssen die Server-Log-Files erfasst werden.\r\n</p>\r\n<h3>Anfrage per E-Mail, Telefon oder Telefax</h3>\r\n<p>\r\n  Wenn Sie uns per E-Mail, Telefon oder Telefax kontaktieren, wird Ihre Anfrage\r\n  inklusive aller daraus hervorgehenden personenbezogenen Daten (Name, Anfrage)\r\n  zum Zwecke der Bearbeitung Ihres Anliegens bei uns gespeichert und\r\n  verarbeitet. Diese Daten geben wir nicht ohne Ihre Einwilligung weiter.\r\n</p>\r\n<p>\r\n  Die Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. b\r\n  DSGVO, sofern Ihre Anfrage mit der Erf&uuml;llung eines Vertrags\r\n  zusammenh&auml;ngt oder zur Durchf&uuml;hrung vorvertraglicher Ma&szlig;nahmen\r\n  erforderlich ist. In allen &uuml;brigen F&auml;llen beruht die Verarbeitung\r\n  auf unserem berechtigten Interesse an der effektiven Bearbeitung der an uns\r\n  gerichteten Anfragen (Art. 6 Abs. 1 lit. f DSGVO) oder auf Ihrer Einwilligung\r\n  (Art. 6 Abs. 1 lit. a DSGVO) sofern diese abgefragt wurde.\r\n</p>\r\n<p>\r\n  Die von Ihnen an uns per Kontaktanfragen &uuml;bersandten Daten verbleiben bei\r\n  uns, bis Sie uns zur L&ouml;schung auffordern, Ihre Einwilligung zur\r\n  Speicherung widerrufen oder der Zweck f&uuml;r die Datenspeicherung\r\n  entf&auml;llt (z.&nbsp;B. nach abgeschlossener Bearbeitung Ihres Anliegens).\r\n  Zwingende gesetzliche Bestimmungen &ndash; insbesondere gesetzliche\r\n  Aufbewahrungsfristen &ndash; bleiben unber&uuml;hrt.\r\n</p>\r\n<h2>5. Plugins und Tools</h2>\r\n<h3>Google Web Fonts (lokales Hosting)</h3>\r\n<p>\r\n  Diese Seite nutzt zur einheitlichen Darstellung von Schriftarten so genannte\r\n  Web Fonts, die von Google bereitgestellt werden. Die Google Fonts sind lokal\r\n  installiert. Eine Verbindung zu Servern von Google findet dabei nicht statt.\r\n</p>\r\n<p>\r\n  Weitere Informationen zu Google Web Fonts finden Sie unter\r\n  <a\r\n    href=\"https://developers.google.com/fonts/faq\"\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n    >https://developers.google.com/fonts/faq</a\r\n  >\r\n  und in der Datenschutzerkl&auml;rung von Google:\r\n  <a\r\n    href=\"https://policies.google.com/privacy?hl=de\"\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n    >https://policies.google.com/privacy?hl=de</a\r\n  >.\r\n</p>\r\n<h3>Font Awesome (lokales Hosting)</h3>\r\n<p>\r\n  Diese Seite nutzt zur einheitlichen Darstellung von Schriftarten Font Awesome.\r\n  Font Awesome ist lokal installiert. Eine Verbindung zu Servern von Fonticons,\r\n  Inc.&nbsp; findet dabei nicht statt.\r\n</p>\r\n<p>\r\n  Weitere Informationen zu Font Awesome finden Sie&nbsp;und in der\r\n  Datenschutzerkl&auml;rung f&uuml;r Font Awesome unter:\r\n  <a\r\n    href=\"https://fontawesome.com/privacy\"\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n    >https://fontawesome.com/privacy</a\r\n  >.\r\n</p>\r\n<p>Quelle: <a href=\"https://www.e-recht24.de\">eRecht24</a></p>\r\n","import { TenantI } from './tenant';\r\nimport { UserI } from './user';\r\n\r\nexport enum ROLE {\r\n  MEMBER = 'member',\r\n  ADMIN = 'admin',\r\n  OWNER = 'owner',\r\n}\r\n\r\nexport interface TenantRelationI {\r\n  id: string;\r\n  active: boolean;\r\n  user?: UserI;\r\n  userId: string;\r\n  tenant?: TenantI;\r\n  tenantId: string;\r\n  role: ROLE;\r\n}\r\n","export enum ROUTES {\r\n  LOGIN = 'login',\r\n  REGISTER_USER = 'nutzer-registrierung',\r\n  REGISTER_TENANT = 'account-registrierung',\r\n  PASSWORD_FORGOTTEN = 'passwort-vergessen',\r\n  PASSWORD_RESET = 'passwort-reset',\r\n  IMPRINT = 'impressum',\r\n  LEGAL = 'rechtliches',\r\n  REGISTER_USER_FINISH = 'registrierung',\r\n  PROFILE = 'profil',\r\n  TENANT_PREFIX = 'o',\r\n  TENANT_PLANNER = 'planner',\r\n  TENANT_MANAGEMENT = 'verwaltung',\r\n  TENANT_EVENTS = 'events',\r\n  HOME = 'home',\r\n  MY_TENANTS = 'meine-organisationen',\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { User } from 'src/app/models/user';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss'],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  error: string = null;\r\n  loading: boolean = false;\r\n  success: boolean = false;\r\n  userSubscription: Subscription;\r\n  isLoggedIn: boolean = false;\r\n\r\n  constructor(\r\n    private tenantService: TenantService,\r\n    private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private appService: AppService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userSubscription = this.appService.user.subscribe((user: User) => {\r\n      this.isLoggedIn = user !== null;\r\n    });\r\n    if (this.route.snapshot.params.tenantPath) {\r\n      this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n    }\r\n    this.registrationForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      name: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      dataPrivacyCheck: new FormControl(false, Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.appService.setColor(null);\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.registrationForm.get(formControlName).invalid &&\r\n      this.registrationForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.registrationForm.invalid) {\r\n      this.registrationForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    if (this.isLoggedIn) {\r\n      return;\r\n    }\r\n    const user = new User(this.registrationForm.get('email').value);\r\n    user.name = this.registrationForm.get('name').value;\r\n    user.password = this.registrationForm.get('password').value;\r\n    this.userService\r\n      .register(user, this.route.snapshot.params.tenantPath)\r\n      .subscribe(\r\n        () => {\r\n          this.success = true;\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!success && !isLoggedIn\">\r\n  <div class=\"col-12 col-md-8 offset-md-2 col-xl-4 offset-xl-4\">\r\n    <div class=\"card\">\r\n      <h4 class=\"card-header\">Persönliches Profil anlegen</h4>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              formControlName=\"email\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'is-invalid': isInvalid('email')\r\n              }\"\r\n            />\r\n            <div *ngIf=\"isInvalid('email')\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"isInvalid('email')\">Bitte Email angeben</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'is-invalid': isInvalid('name')\r\n              }\"\r\n            />\r\n            <div *ngIf=\"isInvalid('name')\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"isInvalid('name')\">Bitte Name angeben</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Passwort</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              formControlName=\"password\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'is-invalid': isInvalid('password')\r\n              }\"\r\n            />\r\n            <div *ngIf=\"isInvalid('password')\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"isInvalid('password')\">Bitte Passwort angeben</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                id=\"dataPrivacyCheck\"\r\n                type=\"checkbox\"\r\n                formControlName=\"dataPrivacyCheck\"\r\n                required\r\n              />\r\n              <label\r\n                class=\"form-check-label mt-0\"\r\n                for=\"dataPrivacyCheck\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': isInvalid('dataPrivacyCheck')\r\n                }\"\r\n                >Hiermit bestätige ich, dass ich die\r\n                <a href=\"/rechtliches#datenschutz\" target=\"_blank\"\r\n                  >Datenschutzbestimmungen</a\r\n                >\r\n                gelesen habe und diesen zustimme. *</label\r\n              >\r\n              <div\r\n                *ngIf=\"isInvalid('dataPrivacyCheck')\"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                Bitte stimmen Sie den Datenschutzbestimmungen zu.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-success\">\r\n              <span\r\n                *ngIf=\"loading\"\r\n                class=\"spinner-border spinner-border-sm mr-1\"\r\n              ></span>\r\n              Registrieren\r\n            </button>\r\n          </div>\r\n          <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n            {{ error }}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"success\" class=\"alert alert-success mt-3 mb-0\">\r\n  Bitte bestätigen Sie Ihre Organisation, indem Sie in der Registrierungs-Email,\r\n  die wir Ihnen eben geschickt haben, den Bestätigungslink klicken.\r\n  <br />\r\n  Sie können dieses Browserfenster nun schließen.\r\n</div>\r\n\r\n<div *ngIf=\"isLoggedIn\" class=\"alert alert-warning mt-3 mb-0 d-flex flex-row\">\r\n  <div style=\"width: 30px\">\r\n    <i class=\"fas fa-exclamation-triangle\"></i>\r\n  </div>\r\n  <div>\r\n    Sie sind derzeit bereits eingeloggt und können sich nicht nochmals\r\n    registrieren.\r\n    <br />\r\n    Sollten Sie ein zweites Profil erstellen wollen, loggen Sie sich erst aus\r\n    und registrieren Sie sich danach erneut.\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { DashboardComponent } from './views/dashboard/dashboard.component';\r\nimport { EventsComponent } from './views/events/events.component';\r\nimport { TenantComponent } from './views/tenant/tenant.component';\r\nimport { RegistrationComponent } from './views/registration/registration.component';\r\nimport { TenantRegistrationComponent } from './views/tenant-registration/tenant-registration.component';\r\nimport { ErrorComponent } from './views/error/error.component';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { EventSelectComponent } from './components/event-select/event-select.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { ImprintComponent } from './views/imprint/imprint.component';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\nimport { LegalComponent } from './views/legal/legal.component';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport {\r\n  NgcCookieConsentModule,\r\n  NgcCookieConsentConfig,\r\n} from 'ngx-cookieconsent';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CategoryManagementComponent } from './components/category-management/category-management.component';\r\nimport { CompleteRegistrationComponent } from './views/complete-registration/complete-registration.component';\r\nimport { PasswordResetComponent } from './views/password-reset/password-reset.component';\r\nimport { UserManagementComponent } from './components/user-management/user-management.component';\r\nimport { PasswordForgottenComponent } from './views/password-forgotten/password-forgotten.component';\r\nimport { IntroComponent } from './views/intro/intro.component';\r\nimport { MyAccountsComponent } from './views/my-accounts/my-accounts.component';\r\nimport { SubscriptionComponent } from './components/subscription/subscription.component';\r\nimport { ToastComponent } from './components/toast/toast.component';\r\nimport { NotificationService } from './services/notification.service';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { CalendarComponent } from './components/calendar/calendar.component';\r\n\r\nconst cookieConfig: NgcCookieConsentConfig = {\r\n  cookie: {\r\n    domain: environment.domain,\r\n  },\r\n  position: 'bottom',\r\n  theme: 'classic',\r\n  palette: {\r\n    popup: {\r\n      background: '#000000',\r\n      text: '#ffffff',\r\n      link: '#ffffff',\r\n    },\r\n    button: {\r\n      background: '#f1d600',\r\n      text: '#000000',\r\n      border: 'transparent',\r\n    },\r\n  },\r\n  type: 'info',\r\n  content: {\r\n    message:\r\n      'Diese Seite nutzt Cookies, um die korrekte Funktionsweise der Anwendung sicherzustellen. Es findet kein Tracking statt, persönliche Informationen bleiben rein auf diesem Gerät.',\r\n    dismiss: 'Verstanden, Cookies zulassen',\r\n    link: '',\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    EventsComponent,\r\n    TenantComponent,\r\n    RegistrationComponent,\r\n    TenantRegistrationComponent,\r\n    ErrorComponent,\r\n    EventSelectComponent,\r\n    ImprintComponent,\r\n    ProfileComponent,\r\n    LegalComponent,\r\n    CategoryManagementComponent,\r\n    CompleteRegistrationComponent,\r\n    PasswordResetComponent,\r\n    UserManagementComponent,\r\n    PasswordForgottenComponent,\r\n    IntroComponent,\r\n    MyAccountsComponent,\r\n    SubscriptionComponent,\r\n    ToastComponent,\r\n    LoadingComponent,\r\n    CalendarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    QuillModule.forRoot({\r\n      modules: {\r\n        toolbar: [\r\n          ['bold', 'italic', 'underline'], // toggled buttons\r\n          ['blockquote'],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\r\n          [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\r\n          [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n          [{ align: [] }],\r\n          ['link'],\r\n        ],\r\n      },\r\n      placeholder: 'Optionalen Text eingeben',\r\n    }),\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    ModalModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    NgcCookieConsentModule.forRoot(cookieConfig),\r\n    ColorPickerModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { EventI } from '../../../../common/event';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport * as moment from 'moment';\r\nimport { each, find } from 'lodash';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EventSeriesI } from '../../../../common/event-series';\r\n\r\nexport class Event implements EventI {\r\n  id?: string;\r\n  date: Date;\r\n  maxSeats: number;\r\n  takenSeats: number;\r\n  name: string;\r\n  categoryId: string;\r\n  weekDay: number;\r\n  // time in seconds on that day\r\n  time: number;\r\n  disabled: boolean;\r\n  tenantId: string;\r\n  singleOccurence: boolean;\r\n  registrationOpenFrom: Date;\r\n  eventSeries?: EventSeriesI;\r\n\r\n  downloadLink(): string {\r\n    return `${environment.apiUrl}/secure/tenants/${this.tenantId}/events/${this.id}/pdf`;\r\n  }\r\n\r\n  displayName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  displayTime(includeWeekDay: boolean = true): string {\r\n    const m = moment(this.date);\r\n    if (this.singleOccurence) {\r\n      return m.format('DD.MM. (ddd) HH:mm');\r\n    }\r\n    if (includeWeekDay) {\r\n      return m.format('ddd HH:mm');\r\n    }\r\n    return m.format('HH:mm');\r\n  }\r\n\r\n  displayDate(): string {\r\n    const m = moment(this.date);\r\n    return m.format('DD.MM.');\r\n  }\r\n\r\n  isInPast(): boolean {\r\n    const now = moment();\r\n    return now.isAfter(moment(this.date));\r\n  }\r\n\r\n  /**\r\n   * returns all unique events based on name, weekDay, targetClass and time\r\n   * @param events\r\n   */\r\n  static unique(events: Event[]): Event[] {\r\n    const uniqueEvents = new Array<Event>();\r\n    each(events, (event: Event) => {\r\n      const identicalEvent = find(uniqueEvents, (uniqueEvent: Event) => {\r\n        return (\r\n          uniqueEvent.name === event.name &&\r\n          uniqueEvent.weekDay === event.weekDay &&\r\n          uniqueEvent.categoryId === event.categoryId &&\r\n          uniqueEvent.time === event.time\r\n        );\r\n      });\r\n      if (identicalEvent === undefined) {\r\n        uniqueEvents.push(event);\r\n      }\r\n    });\r\n    return uniqueEvents;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventAdapter implements Adapter<Event> {\r\n  adapt(item: any): Event {\r\n    const event = new Event();\r\n    event.id = item.id;\r\n    event.name = item.name;\r\n    event.categoryId = item.categoryId;\r\n    const m = moment(item.date);\r\n    event.date = m.toDate();\r\n    // compute the week day and the time in minutes on that day:\r\n    event.weekDay = m.isoWeekday();\r\n    event.time = m.hours() / 60 + m.minutes();\r\n    event.maxSeats = item.maxSeats;\r\n    event.takenSeats = item.takenSeats;\r\n    event.disabled = item.disabled;\r\n    event.tenantId = item.tenantId;\r\n    event.singleOccurence = item.singleOccurence;\r\n    if (item.registrationOpenFrom) {\r\n      event.registrationOpenFrom = moment(item.registrationOpenFrom).toDate();\r\n    }\r\n    event.eventSeries = item.eventSeries;\r\n    return event;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Category, CategoryAdapter } from '../models/category';\r\nimport { CategoryI } from '../../../../common/category';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CategoryService {\r\n  constructor(private http: HttpClient, private adapter: CategoryAdapter) {}\r\n\r\n  getCategories(tenantPath: string): Observable<Category[]> {\r\n    return this.http\r\n      .get(`${environment.apiUrl}/tenants/${tenantPath}/categories`)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) => data.map(item => this.adapter.adapt(item)))\r\n      );\r\n  }\r\n\r\n  deleteCategory(id: string): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}/secure/categories/${id}`);\r\n  }\r\n\r\n  createCategory(category: CategoryI): Observable<Category> {\r\n    return this.http\r\n      .post(`${environment.apiUrl}/secure/categories`, category)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any) => this.adapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  updateCategory(category: Category): Observable<Category> {\r\n    return this.http\r\n      .put(`${environment.apiUrl}/secure/categories/${category.id}`, category)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any) => this.adapter.adapt(data))\r\n      );\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Injectable, SecurityContext } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { TenantAdapter, Tenant } from '../models/tenant';\r\nimport { Observable, Subscription, of } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport {\r\n  TenantRelation,\r\n  TenantRelationAdapter,\r\n} from '../models/tenant-relation';\r\nimport { AppService } from './app.service';\r\nimport { Invitation, InvitationAdapter } from '../models/invitation';\r\nimport { clone } from 'lodash';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TenantService {\r\n  private checkPathSubscription: Subscription = null;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tenantAdapter: TenantAdapter,\r\n    private tenantRelationAdapter: TenantRelationAdapter,\r\n    private appService: AppService,\r\n    private invitationAdapter: InvitationAdapter,\r\n    private domSanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  /**\r\n   * loads the tenant for the given path.\r\n   * if the tenant is already loaded, it is not requested at the backend again.\r\n   * @param tenantPath\r\n   */\r\n  load(tenantPath: string, force: boolean = false) {\r\n    if (\r\n      !force &&\r\n      this.appService.getCurrentTenant() &&\r\n      this.appService.getCurrentTenant().path === tenantPath\r\n    ) {\r\n      this.appService.setCurrentTenant(this.appService.getCurrentTenant());\r\n    } else {\r\n      // we must load the tenant from server-side\r\n      this.getByPath(tenantPath).subscribe((tenant: Tenant) => {\r\n        this.appService.setCurrentTenant(tenant);\r\n      });\r\n    }\r\n  }\r\n\r\n  getByPath(tenantPath: string): Observable<Tenant> {\r\n    if (\r\n      this.appService.getCurrentTenant() &&\r\n      this.appService.getCurrentTenant().path === tenantPath\r\n    ) {\r\n      return of(this.appService.getCurrentTenant());\r\n    } else {\r\n      return this.http.get(`${environment.apiUrl}/tenants/${tenantPath}`).pipe(\r\n        // Adapt the raw item\r\n        map(item => this.tenantAdapter.adapt(item))\r\n      );\r\n    }\r\n  }\r\n\r\n  get(tenantId: string): Observable<Tenant> {\r\n    if (\r\n      this.appService.getCurrentTenant() &&\r\n      this.appService.getCurrentTenant().id === tenantId\r\n    ) {\r\n      return of(this.appService.getCurrentTenant());\r\n    } else {\r\n      return this.http\r\n        .get(`${environment.apiUrl}/secure/tenants/${tenantId}`)\r\n        .pipe(\r\n          // Adapt the raw item\r\n          map(item => this.tenantAdapter.adapt(item))\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loads all tenant relationships for the current user\r\n   */\r\n  getAll(): Observable<TenantRelation[]> {\r\n    return this.http.get(`${environment.apiUrl}/secure/tenants`).pipe(\r\n      // Adapt the raw item\r\n      map((data: any[]) =>\r\n        data.map(item => this.tenantRelationAdapter.adapt(item))\r\n      ),\r\n      tap(tenantRelations => {\r\n        this.appService.setCurrentTenantRelations(tenantRelations);\r\n      })\r\n    );\r\n  }\r\n\r\n  update(tenant: Tenant): Observable<Tenant> {\r\n    const tenantToUpdate = clone(tenant);\r\n    // update the logo from the current tenant object\r\n    if (tenantToUpdate.logo) {\r\n      if (typeof tenantToUpdate.logo === 'object') {\r\n        // it's a SafeResourceUrl oject - convert it to string first\r\n        tenantToUpdate.logo = this.domSanitizer.sanitize(\r\n          SecurityContext.RESOURCE_URL,\r\n          tenantToUpdate.logo\r\n        );\r\n      }\r\n    }\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/tenants/${tenantToUpdate.id}`,\r\n        tenantToUpdate\r\n      )\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.tenantAdapter.adapt(item)),\r\n        tap((tenant: Tenant) => {\r\n          if (tenant.id === this.appService.getCurrentTenant().id) {\r\n            this.appService.setCurrentTenant(tenant);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  create(tenant: Tenant): Observable<Tenant> {\r\n    return this.http.post(`${environment.apiUrl}/secure/tenants`, tenant).pipe(\r\n      // Adapt the raw item\r\n      map(item => this.tenantAdapter.adapt(item))\r\n    );\r\n  }\r\n\r\n  delete(tenantId: string): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}/secure/tenants/${tenantId}`);\r\n  }\r\n\r\n  getUsers(tenantId: string): Observable<TenantRelation[]> {\r\n    return this.http\r\n      .get(`${environment.apiUrl}/secure/tenants/${tenantId}/users`)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) =>\r\n          data.map(item => this.tenantRelationAdapter.adapt(item))\r\n        )\r\n      );\r\n  }\r\n\r\n  getOpenInvitations(tenantId: string): Observable<Invitation[]> {\r\n    return this.http\r\n      .get(`${environment.apiUrl}/secure/tenants/${tenantId}/invitations`)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) =>\r\n          data.map(item => this.invitationAdapter.adapt(item))\r\n        )\r\n      );\r\n  }\r\n\r\n  revokeOpenInvitations(\r\n    tenantId: string,\r\n    invitationId: string\r\n  ): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/invitations/${invitationId}`\r\n    );\r\n  }\r\n\r\n  addUser(tenantId: string, email: string): Observable<Invitation> {\r\n    return this.http\r\n      .post(`${environment.apiUrl}/secure/tenants/${tenantId}/users`, {\r\n        email,\r\n      })\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(item => this.invitationAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * will check if a given path is already taken by someone. the result (true|false) will be set on the parameter variable \"checkResultReference\"\r\n   * @param pathToCheck\r\n   */\r\n  checkPath(\r\n    pathToCheck: string,\r\n    checkResultReference: { pathTaken: boolean }\r\n  ): void {\r\n    // unsubscribe from any potential previous request:\r\n    if (this.checkPathSubscription) {\r\n      this.checkPathSubscription.unsubscribe();\r\n    }\r\n    this.checkPathSubscription = this.getByPath(pathToCheck).subscribe(\r\n      potentiallyExistingTenant => {\r\n        // now check if a tenant exists:\r\n        if (\r\n          potentiallyExistingTenant &&\r\n          potentiallyExistingTenant.path === pathToCheck\r\n        ) {\r\n          checkResultReference.pathTaken = true;\r\n          this.checkPathSubscription.unsubscribe();\r\n          this.checkPathSubscription = null;\r\n        } else {\r\n          checkResultReference.pathTaken = false;\r\n          this.checkPathSubscription.unsubscribe();\r\n          this.checkPathSubscription = null;\r\n        }\r\n      },\r\n      error => {\r\n        checkResultReference.pathTaken = false;\r\n        this.checkPathSubscription.unsubscribe();\r\n        this.checkPathSubscription = null;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User, UserAdapter } from '../models/user';\r\nimport { AppService } from './app.service';\r\nimport { ROUTES } from '../../../../common/frontend.routes';\r\nimport { UserI } from '../../../../common/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private appService: AppService,\r\n    private userAdapter: UserAdapter\r\n  ) {\r\n    if (localStorage.getItem('user')) {\r\n      const storedData = JSON.parse(localStorage.getItem('user'));\r\n      const user = this.userAdapter.adapt(storedData);\r\n      user.authdata = storedData.authdata;\r\n      this.appService.setCurrentUser(user);\r\n    }\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const user = new User(email);\r\n    user.password = password;\r\n    return this.http\r\n      .post<User>(`${environment.apiUrl}/authenticate`, user)\r\n      .pipe(\r\n        map((loggedInUser: UserI) => {\r\n          // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n          this.update(this.userAdapter.adapt(loggedInUser), password);\r\n          return loggedInUser;\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * this will update the user object in the application's cache. this can happen in the following scenarios:\r\n   * - after successful login (with password)\r\n   * - after update of user profile\r\n   * - after update of password (with password)\r\n   * - when opening the profile page\r\n   * - when loading the stored user object from local storage (with password)\r\n   * @param user\r\n   * @param password\r\n   */\r\n  update(user: User, password?: string): void {\r\n    if (user) {\r\n      if (password) {\r\n        user.authdata = window.btoa(user.email + ':' + password);\r\n      } else {\r\n        delete user.authdata;\r\n      }\r\n      let existingUserData: User;\r\n      if (localStorage.getItem('user')) {\r\n        const storedData = JSON.parse(localStorage.getItem('user'));\r\n        existingUserData = this.userAdapter.adapt(storedData);\r\n        existingUserData.authdata = storedData.authdata;\r\n      } else {\r\n        existingUserData = user;\r\n      }\r\n      const updatedUserData = Object.assign(existingUserData, user);\r\n      localStorage.setItem('user', JSON.stringify(updatedUserData));\r\n      this.appService.setCurrentUser(updatedUserData);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n    this.appService.setCurrentUser(null);\r\n    this.appService.setCurrentTenantRelations(null);\r\n    if (\r\n      this.appService.getCurrentTenant() &&\r\n      this.appService.getCurrentTenant().path\r\n    ) {\r\n      this.router.navigate([\r\n        this.appService.getCurrentTenant().path,\r\n        ROUTES.LOGIN,\r\n      ]);\r\n    } else {\r\n      this.router.navigate([`/${ROUTES.LOGIN}`]);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((err) => {\r\n        if (err.status === 401) {\r\n          // auto logout if 401 response returned from api\r\n          this.authenticationService.logout();\r\n        }\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { clone, find, reject } from 'lodash';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Category } from 'src/app/models/category';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ROLE } from '../../../../../common/tenant-relation';\r\n\r\n@Component({\r\n  selector: 'category-management',\r\n  templateUrl: './category-management.component.html',\r\n  styleUrls: ['./category-management.component.scss'],\r\n})\r\nexport class CategoryManagementComponent implements OnInit {\r\n  @Input()\r\n  tenant: Tenant;\r\n  categories: Category[];\r\n  ROLE = ROLE;\r\n  categoriesBeingEdited: string[] = new Array<string>();\r\n  categoryForm: FormGroup = new FormGroup({\r\n    newCategory: new FormControl('', Validators.required),\r\n  });\r\n  modalRef: BsModalRef;\r\n  iconClassNames = [\r\n    'fa-swimmer',\r\n    'fa-volleyball-ball',\r\n    'fa-futbol',\r\n    'fa-basketball-ball',\r\n    'fa-biking',\r\n    'fa-skiing',\r\n    'fa-hiking',\r\n    'fa-table-tennis',\r\n    'fa-bowling-ball',\r\n    'fa-dice',\r\n    'fa-chess',\r\n    'fa-campground',\r\n    'fa-music',\r\n    'fa-church',\r\n    'fa-users',\r\n    'fa-video',\r\n    'fa-camera-retro',\r\n    'fa-paint-brush',\r\n    'fa-tools',\r\n    'fa-car',\r\n    'fa-utensils',\r\n    'fa-dog',\r\n    'fa-cat',\r\n    'fa-horse-head',\r\n    'fa-hippo',\r\n  ];\r\n  categoryBeingEdited: Category;\r\n  newCategory: Category = new Category();\r\n\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    public appService: AppService,\r\n    private modalService: BsModalService,\r\n    private notification: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.categoryService\r\n      .getCategories(this.tenant.path)\r\n      .subscribe(categories => {\r\n        this.categories = categories;\r\n      });\r\n  }\r\n\r\n  isBeingEdited(categoryId: string): boolean {\r\n    return this.categoriesBeingEdited.includes(categoryId);\r\n  }\r\n\r\n  edit(category: Category): void {\r\n    this.categoryForm.addControl(\r\n      category.id,\r\n      new FormControl(category.name, Validators.required)\r\n    );\r\n    this.categoriesBeingEdited.push(category.id);\r\n  }\r\n\r\n  save(category?: Category): void {\r\n    if (category) {\r\n      // an existing category needs to be updated\r\n      const categoryToUpdate = clone(category);\r\n      categoryToUpdate.name = this.categoryForm.get(categoryToUpdate.id).value;\r\n      if (!this.validationPassed(categoryToUpdate)) {\r\n        return;\r\n      }\r\n      this.categoryService.updateCategory(categoryToUpdate).subscribe(\r\n        (updatedCategory: Category) => {\r\n          this.categories.splice(\r\n            this.categories.indexOf(category),\r\n            1,\r\n            updatedCategory\r\n          );\r\n          this.categoriesBeingEdited.splice(\r\n            this.categoriesBeingEdited.indexOf(category.id),\r\n            1\r\n          );\r\n          this.categoryForm.removeControl(category.id);\r\n          this.notification.success('Kategorie aktualisiert');\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.notification.error('Fehler beim Erstellen der neuen Kategorie');\r\n        }\r\n      );\r\n    } else {\r\n      // a new category shall be added\r\n      this.newCategory.name = this.categoryForm.get('newCategory').value;\r\n      this.newCategory.tenantId = this.tenant.id;\r\n      if (!this.validationPassed(this.newCategory)) {\r\n        return;\r\n      }\r\n      this.categoryService.createCategory(this.newCategory).subscribe(\r\n        (createdCategory: Category) => {\r\n          this.categories.push(createdCategory);\r\n          this.newCategory = new Category();\r\n          this.categoryForm.get('newCategory').reset();\r\n          this.notification.success('Neue Kategorie erstellt');\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.notification.error('Fehler beim Erstellen der neuen Kategorie');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  deleteCategory(category: Category): void {\r\n    this.notification.confirm({\r\n      title: 'Kategorie löschen?',\r\n      text: 'Möchten Sie diese Kategorie wirklich löschen?',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Löschen',\r\n      yesCallback: () => {\r\n        this.categoryService.deleteCategory(category.id).subscribe(\r\n          () => {\r\n            this.categories = reject(this.categories, { id: category.id });\r\n            this.notification.success('Kategorie gelöscht');\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            this.notification.error('Fehler beim Löschen der Kategorie');\r\n          }\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  validationPassed(category: Category): boolean {\r\n    if (category.name.length === 0) {\r\n      this.notification.success(\r\n        'Bitte vergeben Sie einen Namen für die Kategorie'\r\n      );\r\n      return false;\r\n    }\r\n    if (!this.isCategoryUnique(category)) {\r\n      this.notification.error('Diese Kategorie existiert bereits');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * checks if the name is already existing in another category\r\n   * @param category\r\n   */\r\n  isCategoryUnique(category: Category): boolean {\r\n    for (let i = 0; i < this.categories.length; i++) {\r\n      if (\r\n        this.categories[i].name.toLowerCase() === category.name.toLowerCase() &&\r\n        this.categories[i].id !== category.id\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  openIconSelection(\r\n    selectedCategory: Category,\r\n    iconSelectionModal: TemplateRef<any>\r\n  ): void {\r\n    if (\r\n      selectedCategory === this.newCategory ||\r\n      this.categoriesBeingEdited.includes(selectedCategory.id)\r\n    ) {\r\n      this.categoryBeingEdited = selectedCategory;\r\n      this.modalRef = this.modalService.show(iconSelectionModal);\r\n    }\r\n  }\r\n\r\n  selectIcon(iconClassName: string): void {\r\n    this.categoryBeingEdited.icon = iconClassName;\r\n    this.modalRef.hide();\r\n  }\r\n}\r\n","<div>\r\n  <h4>Kategorien</h4>\r\n  <p>Definieren Sie hier die Kategorien, denen Events zugeordnet werden.</p>\r\n  <form [formGroup]=\"categoryForm\">\r\n    <ul class=\"list-group\">\r\n      <li\r\n        class=\"list-group-item list-group-item-action\"\r\n        *ngFor=\"let category of categories\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-8 col-md-9 d-flex\">\r\n            <i\r\n              class=\"fas mr-2 {{ category.icon }}\"\r\n              [ngStyle]=\"{\r\n                'line-height': isBeingEdited(category.id) ? '31px' : '24px',\r\n                'color': isBeingEdited(category.id)\r\n                  ? 'var(--plevents-main-color)'\r\n                  : ''\r\n              }\"\r\n              *ngIf=\"category.icon\"\r\n              [ngClass]=\"{ clickable: isBeingEdited(category.id) }\"\r\n              (click)=\"openIconSelection(category, iconSelectionModal)\"\r\n            ></i>\r\n            <i\r\n              class=\"fas mr-2 fa-image clickable\"\r\n              [ngStyle]=\"{\r\n                'line-height': isBeingEdited(category.id) ? '31px' : '24px',\r\n                'color': isBeingEdited(category.id)\r\n                  ? 'var(--plevents-main-color)'\r\n                  : ''\r\n              }\"\r\n              *ngIf=\"!category.icon && isBeingEdited(category.id)\"\r\n              (click)=\"openIconSelection(category, iconSelectionModal)\"\r\n            ></i>\r\n            <span *ngIf=\"!isBeingEdited(category.id)\">\r\n              {{ category.name }}\r\n            </span>\r\n            <input\r\n              *ngIf=\"isBeingEdited(category.id)\"\r\n              class=\"form-control form-control-sm flex-grow-1\"\r\n              type=\"text\"\r\n              [formControlName]=\"category.id\"\r\n              [ngClass]=\"{\r\n                'is-invalid': categoryForm.controls[category.id].invalid\r\n              }\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-4 col-md-3 text-right\"\r\n            *ngIf=\"appService.hasRole(tenant.id, ROLE.OWNER)\"\r\n          >\r\n            <i\r\n              *ngIf=\"!isBeingEdited(category.id)\"\r\n              class=\"fas fa-edit clickable\"\r\n              (click)=\"edit(category)\"\r\n            ></i>\r\n            <i\r\n              *ngIf=\"!isBeingEdited(category.id)\"\r\n              class=\"fas fa-trash-alt clickable ml-4 text-danger\"\r\n              (click)=\"deleteCategory(category)\"\r\n            ></i>\r\n            <button\r\n              *ngIf=\"isBeingEdited(category.id)\"\r\n              class=\"btn btn-sm btn-outline-success\"\r\n              (click)=\"save(category)\"\r\n            >\r\n              Speichern\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li\r\n        class=\"list-group-item list-group-item-action text-center\"\r\n        *ngIf=\"!categories\"\r\n      >\r\n        <loading></loading> Kategorien werden geladen\r\n      </li>\r\n      <li\r\n        class=\"list-group-item list-group-item-action\"\r\n        *ngIf=\"appService.hasRole(tenant.id, ROLE.OWNER)\"\r\n      >\r\n        <div class=\"d-flex\">\r\n          <i\r\n            class=\"fas mr-2 clickable {{\r\n              newCategory.icon ? newCategory.icon : 'fa-icons'\r\n            }}\"\r\n            style=\"line-height: 38px\"\r\n            (click)=\"openIconSelection(newCategory, iconSelectionModal)\"\r\n          ></i>\r\n          <div class=\"flex-grow-1\">\r\n            <input\r\n              class=\"form-control w-100\"\r\n              type=\"text\"\r\n              formControlName=\"newCategory\"\r\n              placeholder=\"Neue Kategorie anlegen\"\r\n            />\r\n            <div\r\n              *ngIf=\"\r\n                categoryForm.get('newCategory').value &&\r\n                categoryForm.get('newCategory').value.length >= 20\r\n              \"\r\n              class=\"text-warning mt-1\"\r\n              style=\"font-size: small\"\r\n            >\r\n              <i class=\"fas fa-exclamation-triangle mr-1\"></i>\r\n              Der Name der Kategorie sollte für eine gute Darstellung am besten\r\n              unter 20 Zeichen lang sein\r\n            </div>\r\n          </div>\r\n          <button class=\"ml-3 btn btn-outline-success\" (click)=\"save()\">\r\n            Hinzufügen\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </form>\r\n</div>\r\n\r\n<ng-template #iconSelectionModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Icon Auswahl</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>\r\n      Wählen Sie zwischen den verfügbaren Icons aus, um Ihren Events ein\r\n      aussagekräftiges Icon hinzuzufügen.\r\n    </p>\r\n    <!-- icon selection -->\r\n    <div\r\n      class=\"iconContainer clickable\"\r\n      *ngFor=\"let iconClassName of iconClassNames\"\r\n      (click)=\"selectIcon(iconClassName)\"\r\n    >\r\n      <i class=\"fas {{ iconClassName }}\"></i>\r\n    </div>\r\n    <div class=\"alert alert-light p-2 mt-2\" style=\"background-color: #f9f9f9\">\r\n      Kein passendes Icon dabei? Einfach eine Mail an\r\n      <a href=\"mailto: stefan.strobel@s4-consulting.de\"\r\n        >stefan.strobel@s4-consulting.de</a\r\n      >\r\n      mit dem Wunsch-Icon schreiben.\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer d-block\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary float-left\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      Abbrechen\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary float-right\"\r\n      (click)=\"selectIcon(null)\"\r\n    >\r\n      Kein Icon\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Event, EventAdapter } from '../models/event';\r\nimport { EventI } from '../../../../common/event';\r\nimport { ParticipantI } from '../../../../common/participant';\r\nimport { Participant, ParticipantAdapter } from '../models/participant';\r\nimport { saveAs } from 'file-saver';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private eventAdapter: EventAdapter,\r\n    private participantAdapter: ParticipantAdapter\r\n  ) {}\r\n\r\n  /**\r\n   * get all events for a specific tenant\r\n   * @param tenantId\r\n   * @param start the start date/time of the timeframe\r\n   * @param end the end date/time of the timeframe\r\n   */\r\n  getEvents(\r\n    tenantId: string,\r\n    start?: moment.Moment,\r\n    end?: moment.Moment,\r\n    privateEvents?: boolean\r\n  ): Observable<Event[]> {\r\n    const params: any = {};\r\n    if (start) {\r\n      params.start = start.format('yyyy-MM-DD');\r\n    }\r\n    if (end) {\r\n      params.end = end.format('yyyy-MM-DD');\r\n    }\r\n    return this.http\r\n      .get(\r\n        `${environment.apiUrl}${\r\n          privateEvents ? '/secure' : ''\r\n        }/tenants/${tenantId}/events`,\r\n        { params }\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) => data.map(item => this.eventAdapter.adapt(item)))\r\n      );\r\n  }\r\n\r\n  createEvent(tenantId: string, event: EventI): Observable<Event> {\r\n    return this.http\r\n      .post(`${environment.apiUrl}/secure/tenants/${tenantId}/events`, event)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(data => this.eventAdapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  updateEvent(event: Event): Observable<Event> {\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/tenants/${event.tenantId}/events/${event.id}`,\r\n        event\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(data => this.eventAdapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  updateEventSeries(event: Event): Observable<Event> {\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/tenants/${event.tenantId}/eventSeries/${event.eventSeries.id}`,\r\n        event\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(data => this.eventAdapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  deleteEvent(tenantId: string, eventId: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/events/${eventId}`\r\n    );\r\n  }\r\n\r\n  deleteEventSeries(tenantId: string, eventSeriesId: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/eventSeries/${eventSeriesId}`\r\n    );\r\n  }\r\n\r\n  setDisabled(\r\n    tenantId: string,\r\n    id: string,\r\n    disabled: boolean\r\n  ): Observable<Event> {\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/tenants/${tenantId}/events/${id}/disabled/${disabled}`,\r\n        null\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(data => this.eventAdapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  addParticipant(participant: ParticipantI): Observable<Participant> {\r\n    return this.http\r\n      .post(\r\n        `${environment.apiUrl}/events/${participant.eventId}/participant`,\r\n        participant\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(data => this.participantAdapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  getParticipants(\r\n    tenantId: string,\r\n    eventId: string\r\n  ): Observable<Participant[]> {\r\n    return this.http\r\n      .get(\r\n        `${environment.apiUrl}/secure/tenants/${tenantId}/events/${eventId}/participants`\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) =>\r\n          data.map(item => this.participantAdapter.adapt(item))\r\n        )\r\n      );\r\n  }\r\n\r\n  deleteParticipant(\r\n    tenantId: string,\r\n    eventId: string,\r\n    participantId: number\r\n  ): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/events/${eventId}/participants/${participantId}`\r\n    );\r\n  }\r\n\r\n  downloadPdf(event: Event): void {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Accept', 'application/pdf');\r\n    this.http\r\n      .get(event.downloadLink(), {\r\n        headers: headers,\r\n        responseType: 'blob',\r\n      })\r\n      .subscribe(pdfBlob => {\r\n        const blob = new Blob([pdfBlob], { type: 'application/pdf' });\r\n        const fileName = `Teilnehmerliste ${event.displayName()} - ${event.displayDate()}.pdf`;\r\n        saveAs(blob, fileName);\r\n      });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-complete-registration',\r\n  templateUrl: './complete-registration.component.html',\r\n  styleUrls: ['./complete-registration.component.scss'],\r\n})\r\nexport class CompleteRegistrationComponent implements OnInit {\r\n  noCode: boolean = false;\r\n  activated: boolean = false;\r\n  error: boolean = false;\r\n  loggedIn: boolean = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // first of all, make sure that there is no user logged-in currently:\r\n    if (localStorage.getItem('user')) {\r\n      this.loggedIn = true;\r\n      return;\r\n    }\r\n    if (this.route.snapshot.queryParams.code) {\r\n      this.userService\r\n        .finishRegistration(this.route.snapshot.queryParams.code)\r\n        .subscribe(\r\n          () => {\r\n            this.activated = true;\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            this.error = true;\r\n          }\r\n        );\r\n    } else {\r\n      this.noCode = true;\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"mb-5\">Bestätigung Ihres Nutzerprofils</h1>\r\n<p *ngIf=\"!noCode && !activated && !error && !loggedIn\">\r\n  Wir aktivieren gerade Ihr Profil ...\r\n</p>\r\n<div class=\"alert alert-success text-center\" *ngIf=\"activated\">\r\n  <b>Ihr Profil wurde freigesschaltet!</b>\r\n  <br />\r\n  Bitte gehen Sie <a [routerLink]=\"['/login']\">zur Login-Seite</a> und loggen\r\n  sich dort ein.\r\n</div>\r\n<div class=\"alert alert-warning text-center\" *ngIf=\"noCode\">\r\n  Sie haben die Seite ohne einen gültigen Code aufgerufen.\r\n  <br />\r\n  Sie können dieses Browserfenster schließen.\r\n</div>\r\n<div class=\"alert alert-warning text-center\" *ngIf=\"error\">\r\n  Es trat leider ein Fehler auf. Versuchen Sie es in ein paar Minuten nochmals.\r\n  <br />\r\n  Falls der Fehler bestehen bleibt, wenden Sie sich bitte an den Support.\r\n</div>\r\n<div class=\"alert alert-warning text-center\" *ngIf=\"loggedIn\">\r\n  Sie sind gerade angemeldet und können daher kein neues Nutzerprofil\r\n  bestätigen.\r\n  <br />\r\n  Bitte melden Sie sich ab und rufen Sie danach diese URL nochmals auf.\r\n</div>\r\n","import { Component, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { Week } from 'src/app/models/week';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { Event } from '../../models/event';\r\nimport * as moment from 'moment';\r\nimport { filter, sortBy, each, find, reject, map } from 'lodash';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Category } from 'src/app/models/category';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { Participant } from 'src/app/models/participant';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { ROLE } from '../../../../../common/tenant-relation';\r\nimport { User } from 'src/app/models/user';\r\nimport { TenantRelation } from 'src/app/models/tenant-relation';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { EventSeriesI } from '../../../../../common/event-series';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\n\r\nexport enum VIEW {\r\n  CALENDAR,\r\n  LIST,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n  allEvents: Event[];\r\n  weeks: Week[] = new Array<Week>();\r\n  uniqueEvents: Event[] = null;\r\n  newEventSeriesForm: FormGroup;\r\n  newSingleEventForm: FormGroup;\r\n  operationOngoing: boolean = false;\r\n  newEventSeriesFormShown: boolean = false;\r\n  newSingleEventFormShown: boolean = false;\r\n  eventsOpened: boolean[];\r\n  categories: Category[];\r\n  tenantSubscription: Subscription;\r\n  tenant: Tenant = null;\r\n  modalRef: BsModalRef;\r\n  eventBeingEdited: Event = null;\r\n  editEventForm: FormGroup = new FormGroup({\r\n    name: new FormControl('', Validators.required),\r\n    date: new FormControl(null),\r\n    weekDay: new FormControl(''),\r\n    time: new FormControl('', Validators.required),\r\n    maxSeats: new FormControl('', [Validators.required, Validators.min(1)]),\r\n    categoryId: new FormControl(null),\r\n    registrationOpenFrom: new FormControl(null),\r\n  });\r\n  selectedEvent: Event = null;\r\n  participants: Participant[] = null;\r\n  ROLE = ROLE;\r\n  today = new Date();\r\n  addParticipantForm: FormGroup = new FormGroup({\r\n    firstname: new FormControl('', Validators.required),\r\n    lastname: new FormControl('', Validators.required),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    phone: new FormControl('', Validators.required),\r\n    street: new FormControl('', Validators.required),\r\n    zip: new FormControl('', Validators.required),\r\n    city: new FormControl('', Validators.required),\r\n  });\r\n  showAddParticipantForm: boolean = false;\r\n  addParticipantSuccess: string = null;\r\n  orgMembers: User[];\r\n  userIdsAllowedOnNewEvent: string[];\r\n  VIEW = VIEW;\r\n  view: VIEW = VIEW.LIST;\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private tenantService: TenantService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private categoryService: CategoryService,\r\n    private modalService: BsModalService,\r\n    public appService: AppService,\r\n    private userService: UserService,\r\n    private notification: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.eventsOpened = new Array<boolean>();\r\n    // load the tenant information and redirect in case tenant path does not exist:\r\n    this.tenantSubscription = this.tenantService\r\n      .getByPath(this.route.snapshot.params.tenantPath)\r\n      .subscribe(\r\n        () => {},\r\n        error => {\r\n          if (\r\n            error === 'Not Found' ||\r\n            (error instanceof HttpErrorResponse && error.status === 404)\r\n          ) {\r\n            this.router.navigate(['fehler', 'account-not-found']);\r\n          }\r\n        }\r\n      );\r\n    this.appService.tenant.subscribe((tenant: Tenant) => {\r\n      if (tenant && tenant != this.tenant) {\r\n        this.tenant = tenant;\r\n        this.appService.setColor(this.tenant);\r\n        this.loadAllEvents(this.tenant);\r\n        if (this.appService.hasRole(this.tenant.id, ROLE.ADMIN)) {\r\n          this.createNewEventSeriesForm();\r\n          this.createNewSingleEventForm();\r\n          this.tenantService\r\n            .getUsers(this.tenant.id)\r\n            .subscribe((tenantRelations: TenantRelation[]) => {\r\n              this.orgMembers = map(\r\n                filter(tenantRelations, tenantRelation => {\r\n                  return !tenantRelation.isAdmin() && !tenantRelation.isOwner();\r\n                }),\r\n                'user'\r\n              );\r\n            });\r\n        }\r\n      }\r\n    });\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n    this.categoryService\r\n      .getCategories(this.route.snapshot.params.tenantPath)\r\n      .subscribe(categories => {\r\n        this.categories = categories;\r\n        if (this.categories.length > 0) {\r\n          this.categories.sort();\r\n          this.categories.unshift(\r\n            new Category({\r\n              id: null,\r\n              name: '-- ohne Kategorie --',\r\n              tenantId: this.tenant.id,\r\n            })\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.appService.setColor(null);\r\n    if (this.tenantSubscription) {\r\n      this.tenantSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  currentCW(): number {\r\n    return moment().isoWeek();\r\n  }\r\n\r\n  loadAllEvents(tenant: Tenant): void {\r\n    this.uniqueEvents = null;\r\n    this.eventService\r\n      .getEvents(tenant.id, null, null, true)\r\n      .subscribe((events: Event[]) => {\r\n        this.weeks = new Array<Week>();\r\n        this.uniqueEvents = new Array<Event>();\r\n        this.allEvents = events;\r\n        this.uniqueEvents = Event.unique(this.allEvents);\r\n        const sortOrder = ['weekDay', 'time', 'name'];\r\n        this.uniqueEvents = sortBy(this.uniqueEvents, sortOrder);\r\n        // prepare the weeks, calculate the past 4 weeks until the end of the year:\r\n        const today = moment();\r\n        const weekNumberFourWeeksAgo = today\r\n          .clone()\r\n          .subtract(4, 'weeks')\r\n          .week();\r\n        const startOfWeekFourWeeksAgo = today\r\n          .clone()\r\n          .startOf('week')\r\n          .subtract(4, 'weeks');\r\n        const endOfWeekFourWeeksAgo = today\r\n          .clone()\r\n          .endOf('week')\r\n          .subtract(4, 'weeks');\r\n        for (\r\n          let kw = today.week() - 4;\r\n          kw <= moment().date(31).month(11).isoWeek();\r\n          kw++\r\n        ) {\r\n          const week = new Week(kw);\r\n          const weekStart = startOfWeekFourWeeksAgo\r\n            .clone()\r\n            .add(kw - weekNumberFourWeeksAgo, 'weeks');\r\n          const weekEnd = endOfWeekFourWeeksAgo\r\n            .clone()\r\n            .add(kw - weekNumberFourWeeksAgo, 'weeks');\r\n          // add all events for this week\r\n          const eventsInThisWeek = filter(events, (event: Event) => {\r\n            return moment(event.date).isBetween(\r\n              weekStart,\r\n              weekEnd,\r\n              undefined,\r\n              '[]'\r\n            );\r\n          });\r\n          // match the event instances in this week to their according event\r\n          // this is necessary in case in a specific week an event is not existent\r\n          week.events = new Array<Event>(this.uniqueEvents.length);\r\n          each(this.uniqueEvents, (uniqueEvent: Event, index: number) => {\r\n            week.events[index] = find(eventsInThisWeek, {\r\n              name: uniqueEvent.name,\r\n              weekDay: uniqueEvent.weekDay,\r\n              time: uniqueEvent.time,\r\n              categoryId: uniqueEvent.categoryId,\r\n            });\r\n          });\r\n          this.weeks.push(week);\r\n        }\r\n      });\r\n  }\r\n\r\n  createNewEventSeriesForm(): void {\r\n    this.newEventSeriesForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      categoryId: new FormControl(null),\r\n      fromDate: new FormControl('', Validators.required),\r\n      time: new FormControl('', Validators.required),\r\n      maxSeats: new FormControl('', [Validators.required, Validators.min(1)]),\r\n    });\r\n  }\r\n\r\n  createNewSingleEventForm(): void {\r\n    this.newSingleEventForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      categoryId: new FormControl(null),\r\n      date: new FormControl('', Validators.required),\r\n      time: new FormControl('', Validators.required),\r\n      maxSeats: new FormControl('', [Validators.required, Validators.min(1)]),\r\n      registrationOpenFrom: new FormControl(null),\r\n    });\r\n  }\r\n\r\n  addNewEventSeries(): void {\r\n    if (!this.newEventSeriesForm.valid) {\r\n      this.newEventSeriesForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.operationOngoing = true;\r\n    const m = moment(this.newEventSeriesForm.get('fromDate').value);\r\n    const time = <string>this.newEventSeriesForm.get('time').value;\r\n    m.hours(parseInt(time.split(':')[0]));\r\n    m.minutes(parseInt(time.split(':')[1]));\r\n    const event = new Event();\r\n    event.singleOccurence = false;\r\n    event.name = this.newEventSeriesForm.get('name').value;\r\n    event.categoryId = this.newEventSeriesForm.get('categoryId')\r\n      .value as string;\r\n    event.maxSeats = this.newEventSeriesForm.get('maxSeats').value;\r\n    event.date = m.toDate();\r\n    this.eventService.createEvent(this.tenant.id, event).subscribe(\r\n      (eventSeries: EventSeriesI) => {\r\n        this.notification.success('Neue Eventserie angelegt');\r\n        this.loadAllEvents(this.appService.getCurrentTenant());\r\n        this.operationOngoing = false;\r\n        this.newEventSeriesFormShown = false;\r\n        this.newEventSeriesForm.reset();\r\n        // now add all the users on the event series (if any were selected):\r\n        each(this.userIdsAllowedOnNewEvent, (userId: string) => {\r\n          this.userService\r\n            .allowAccessToEventSeries(this.tenant.id, userId, eventSeries.id)\r\n            .subscribe();\r\n        });\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.notification.error('Es trat ein Fehler auf');\r\n        this.operationOngoing = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  addNewSingleEvent(): void {\r\n    if (!this.newSingleEventForm.valid) {\r\n      this.newSingleEventForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.operationOngoing = true;\r\n    const m = moment(this.newSingleEventForm.get('date').value);\r\n    const time = <string>this.newSingleEventForm.get('time').value;\r\n    m.hours(parseInt(time.split(':')[0]));\r\n    m.minutes(parseInt(time.split(':')[1]));\r\n    const event = new Event();\r\n    event.singleOccurence = true;\r\n    event.name = this.newSingleEventForm.get('name').value;\r\n    event.categoryId = this.newSingleEventForm.get('categoryId')\r\n      .value as string;\r\n    event.maxSeats = this.newSingleEventForm.get('maxSeats').value;\r\n    event.date = m.toDate();\r\n    const startOfRegistration = moment(\r\n      this.newSingleEventForm.get('registrationOpenFrom').value\r\n    );\r\n    if (startOfRegistration) {\r\n      startOfRegistration.hours(0).minutes(0).seconds(0).milliseconds(0);\r\n      event.registrationOpenFrom = startOfRegistration.toDate();\r\n    }\r\n    this.eventService.createEvent(this.tenant.id, event).subscribe(\r\n      (createdEvent: Event) => {\r\n        this.notification.success('Neues Einzelevent angelegt');\r\n        this.loadAllEvents(this.appService.getCurrentTenant());\r\n        this.operationOngoing = false;\r\n        this.newSingleEventFormShown = false;\r\n        this.newSingleEventForm.reset();\r\n        // now add all the users on the event (if any were selected):\r\n        each(this.userIdsAllowedOnNewEvent, (userId: string) => {\r\n          this.userService\r\n            .allowAccessToEvent(this.tenant.id, userId, createdEvent.id)\r\n            .subscribe();\r\n        });\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.notification.error('Es trat ein Fehler auf');\r\n        this.operationOngoing = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  isInvalid(formControl: AbstractControl): boolean {\r\n    return formControl.invalid && formControl.touched;\r\n  }\r\n\r\n  toggleDisabled(event: Event, clickEvent?: any): void {\r\n    if (clickEvent) {\r\n      clickEvent.stopPropagation();\r\n    }\r\n    event.disabled = !event.disabled;\r\n    // update it on server side, too\r\n    this.eventService\r\n      .setDisabled(this.tenant.id, event.id, event.disabled)\r\n      .subscribe();\r\n  }\r\n\r\n  deleteEventSeries(uniqueEventSeriesIndex: number): void {\r\n    const eventToDelete = this.uniqueEvents[uniqueEventSeriesIndex];\r\n    if (eventToDelete.singleOccurence) {\r\n      this.notification.confirm({\r\n        title: 'Event löschen?',\r\n        text:\r\n          'Wollen Sie wirklich dieses Event löschen? Alle Daten gehen unwiderbringlich verloren?',\r\n        yesButtonClass: 'btn-danger',\r\n        yesButtonText: 'Löschen',\r\n        yesCallback: () => {\r\n          this.operationOngoing = true;\r\n          this.eventService\r\n            .deleteEvent(this.tenant.id, eventToDelete.id)\r\n            .subscribe(\r\n              () => {\r\n                this.notification.success('Event gelöscht');\r\n                this.loadAllEvents(this.appService.getCurrentTenant());\r\n                this.operationOngoing = false;\r\n              },\r\n              error => {\r\n                console.error(error);\r\n                this.notification.error(\r\n                  'Es trat ein Fehler auf, Event wurde nicht gelöscht'\r\n                );\r\n                this.operationOngoing = false;\r\n              }\r\n            );\r\n        },\r\n      });\r\n    } else {\r\n      this.notification.confirm({\r\n        title: 'Künftige Events löschen?',\r\n        text:\r\n          'Wollen Sie alle KÜNFTIGEN Events in dieser Spalte wirklich löschen? Alle Daten dieser Events gehen unwiderbringlich verloren!',\r\n        yesButtonClass: 'btn-danger',\r\n        yesButtonText: 'Löschen',\r\n        yesCallback: () => {\r\n          this.operationOngoing = true;\r\n          this.eventService\r\n            .deleteEventSeries(this.tenant.id, eventToDelete.eventSeries.id)\r\n            .subscribe(\r\n              () => {\r\n                this.notification.success('Zukünftige Serienevents gelöscht');\r\n                this.loadAllEvents(this.appService.getCurrentTenant());\r\n                this.operationOngoing = false;\r\n              },\r\n              error => {\r\n                this.notification.error(\r\n                  'Es trat ein Fehler auf, die Eventserie wurde nicht gelöscht'\r\n                );\r\n                this.operationOngoing = false;\r\n              }\r\n            );\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  downloadPdf(clickEvent: any, event: Event): void {\r\n    clickEvent.stopPropagation();\r\n    this.eventService.downloadPdf(event);\r\n  }\r\n\r\n  /**\r\n   * search the events array and find the one event that is a series event of the given unique event\r\n   * @param events\r\n   * @param uniqueEvent\r\n   */\r\n  searchEventByUniqueEvent(events: Event[], uniqueEvent: Event): Event {\r\n    return find(events, {\r\n      name: uniqueEvent.name,\r\n      weekDay: uniqueEvent.weekDay,\r\n      time: uniqueEvent.time,\r\n    });\r\n  }\r\n\r\n  categoryName(categoryId: string): string {\r\n    if (this.categoryById(categoryId)) {\r\n      return this.categoryById(categoryId).name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  categoryById(categoryId: string): Category {\r\n    return find(this.categories, { id: categoryId });\r\n  }\r\n\r\n  editSeriesEvent(uniqueEvent: Event, template: TemplateRef<any>) {\r\n    this.newEventSeriesFormShown = false;\r\n    this.newSingleEventFormShown = false;\r\n    this.modalRef = this.modalService.show(template);\r\n    this.eventBeingEdited = this.lastEventOfSeries(uniqueEvent);\r\n    this.editEventForm.get('name').setValue(this.eventBeingEdited.name);\r\n    this.editEventForm.get('weekDay').setValue(this.eventBeingEdited.weekDay);\r\n    this.editEventForm\r\n      .get('date')\r\n      .setValue(moment(this.eventBeingEdited.date).format('yyyy-MM-DD'));\r\n    this.editEventForm\r\n      .get('time')\r\n      .setValue(moment(this.eventBeingEdited.date).format('HH:mm'));\r\n    const optionalCategory = find(this.categories, {\r\n      id: this.eventBeingEdited.categoryId,\r\n    });\r\n    if (optionalCategory) {\r\n      this.editEventForm.get('categoryId').setValue(optionalCategory.id);\r\n    }\r\n    this.editEventForm.get('maxSeats').setValue(this.eventBeingEdited.maxSeats);\r\n    if (this.eventBeingEdited.singleOccurence) {\r\n      this.editEventForm\r\n        .get('registrationOpenFrom')\r\n        .setValue(\r\n          moment(this.eventBeingEdited.registrationOpenFrom).format(\r\n            'yyyy-MM-DD'\r\n          )\r\n        );\r\n      this.editEventForm.get('date').setValidators(Validators.required);\r\n      this.editEventForm.get('weekDay').setValidators(null);\r\n    } else {\r\n      this.editEventForm.get('weekDay').setValidators(Validators.required);\r\n      this.editEventForm.get('date').setValidators(null);\r\n    }\r\n  }\r\n\r\n  updateEvents(): void {\r\n    if (this.editEventForm.invalid) {\r\n      this.notification.error('Bitte erst alle Felder korrekt ausfüllen');\r\n      return;\r\n    }\r\n    this.operationOngoing = true;\r\n    const updatedEventData: any = {\r\n      name: this.editEventForm.get('name').value,\r\n      maxSeats: this.editEventForm.get('maxSeats').value,\r\n      categoryId: this.editEventForm.get('categoryId').value as string,\r\n      tenantId: this.tenant.id,\r\n    };\r\n    // the date is being constructed out of weekday and time\r\n    const time = <string>this.editEventForm.get('time').value;\r\n    if (this.eventBeingEdited.singleOccurence) {\r\n      // the date is being constructed out of weekday and time\r\n      updatedEventData.date = moment(this.editEventForm.get('date').value)\r\n        .hours(parseInt(time.split(':')[0]))\r\n        .minutes(parseInt(time.split(':')[1]))\r\n        .toDate();\r\n      const startOfRegistration = moment(\r\n        this.editEventForm.get('registrationOpenFrom').value\r\n      );\r\n      if (startOfRegistration) {\r\n        startOfRegistration.hours(0).minutes(0).seconds(0).milliseconds(0);\r\n        updatedEventData.registrationOpenFrom = startOfRegistration.toDate();\r\n      }\r\n      updatedEventData.id = this.eventBeingEdited.id;\r\n      this.eventService.updateEvent(updatedEventData).subscribe(\r\n        () => {\r\n          this.operationOngoing = false;\r\n          this.notification.success('Eventdaten aktualisiert');\r\n          this.modalRef.hide();\r\n          this.loadAllEvents(this.appService.getCurrentTenant());\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.operationOngoing = false;\r\n          this.notification.error('Es trat ein Fehler auf');\r\n        }\r\n      );\r\n    } else {\r\n      // the date is being constructed out of weekday and time\r\n      updatedEventData.date = moment(this.eventBeingEdited.date)\r\n        .isoWeekday(this.editEventForm.get('weekDay').value)\r\n        .hours(parseInt(time.split(':')[0]))\r\n        .minutes(parseInt(time.split(':')[1]))\r\n        .toDate();\r\n      updatedEventData.eventSeries = this.eventBeingEdited.eventSeries;\r\n      this.eventService.updateEventSeries(updatedEventData).subscribe(\r\n        () => {\r\n          this.notification.success('Alle künftigen Events aktualisiert');\r\n          this.modalRef.hide();\r\n          this.loadAllEvents(this.appService.getCurrentTenant());\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.notification.error('Es trat ein Fehler auf');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  eventNotinPast(): boolean {\r\n    return !this.selectedEvent.isInPast();\r\n  }\r\n\r\n  showEventParticipants(event: Event, template: TemplateRef<any>): void {\r\n    this.selectedEvent = event;\r\n    this.participants = null;\r\n    this.showAddParticipantForm = false;\r\n    this.addParticipantSuccess = null;\r\n    this.addParticipantForm.reset();\r\n    this.eventService\r\n      .getParticipants(this.tenant.id, event.id)\r\n      .subscribe(participants => {\r\n        this.participants = participants;\r\n      });\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-xl' });\r\n  }\r\n\r\n  deleteParticipant(participant: Participant): void {\r\n    this.notification.confirm({\r\n      title: 'Teilnehmer entfernen?',\r\n      text: 'Möchten Sie diesen Teilnehmer wirklich von der Liste entfernen?',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Entfernen',\r\n      yesCallback: () => {\r\n        this.eventService\r\n          .deleteParticipant(\r\n            this.tenant.id,\r\n            this.selectedEvent.id,\r\n            participant.id\r\n          )\r\n          .subscribe(() => {\r\n            this.notification.success('Teilnehmer von Aktivität entfernt');\r\n            this.participants = reject(this.participants, {\r\n              id: participant.id,\r\n            });\r\n            this.selectedEvent.takenSeats -= 1;\r\n          });\r\n      },\r\n    });\r\n  }\r\n\r\n  addParticipant(): void {\r\n    if (this.addParticipantForm.invalid) {\r\n      this.addParticipantForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.operationOngoing = true;\r\n    const participant = new Participant();\r\n    participant.firstname = this.addParticipantForm.get('firstname').value;\r\n    participant.lastname = this.addParticipantForm.get('lastname').value;\r\n    participant.email = this.addParticipantForm.get('email').value;\r\n    participant.phone = this.addParticipantForm.get('phone').value;\r\n    participant.street = this.addParticipantForm.get('street').value;\r\n    participant.zip = this.addParticipantForm.get('zip').value;\r\n    participant.city = this.addParticipantForm.get('city').value;\r\n    participant.eventId = this.selectedEvent.id;\r\n    this.eventService.addParticipant(participant).subscribe(\r\n      (createdParticipant: Participant) => {\r\n        this.addParticipantForm.reset();\r\n        this.addParticipantSuccess =\r\n          'Teilnehmer ' +\r\n          participant.firstname +\r\n          ' ' +\r\n          participant.lastname +\r\n          ' zur Veranstaltung hinzugefügt';\r\n        this.participants.push(createdParticipant);\r\n        this.operationOngoing = false;\r\n        this.selectedEvent.takenSeats++;\r\n      },\r\n      error => {\r\n        this.notification.error('Es trat leider ein Fehler auf');\r\n        this.operationOngoing = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * this function will traverse all events and return the last event of its respective series. if it is a single event, the event itself is being returned\r\n   * @param uniqueEvent\r\n   */\r\n  lastEventOfSeries(uniqueEvent: Event): Event {\r\n    if (uniqueEvent.singleOccurence) {\r\n      return uniqueEvent;\r\n    }\r\n    const eventsInRow = filter(this.allEvents, (event: Event) => {\r\n      return (\r\n        uniqueEvent.name === event.name &&\r\n        uniqueEvent.weekDay === event.weekDay &&\r\n        uniqueEvent.categoryId === event.categoryId &&\r\n        uniqueEvent.time === event.time\r\n      );\r\n    });\r\n    // now determine the last happening\r\n    let lastEvent = eventsInRow[0];\r\n    each(eventsInRow, event => {\r\n      if (moment(event.date).isAfter(moment(lastEvent.date))) {\r\n        lastEvent = event;\r\n      }\r\n    });\r\n    return lastEvent;\r\n  }\r\n\r\n  showNewSingleEventForm(): void {\r\n    this.newSingleEventFormShown = true;\r\n    this.userIdsAllowedOnNewEvent = new Array<string>();\r\n  }\r\n\r\n  showEventSeriesForm(): void {\r\n    this.newEventSeriesFormShown = true;\r\n    this.userIdsAllowedOnNewEvent = new Array<string>();\r\n  }\r\n\r\n  toggleUserOnNewEvent(user: User): void {\r\n    if (this.userIdsAllowedOnNewEvent.includes(user.id)) {\r\n      this.userIdsAllowedOnNewEvent = reject(\r\n        this.userIdsAllowedOnNewEvent,\r\n        id => id === user.id\r\n      );\r\n    } else {\r\n      this.userIdsAllowedOnNewEvent.push(user.id);\r\n    }\r\n  }\r\n}\r\n","<h2>Übersicht über alle anstehenden Events</h2>\r\n<!-- notification in case tenant is not active -->\r\n<div\r\n  class=\"alert alert-warning d-flex flex-row\"\r\n  *ngIf=\"tenant && !tenant.active\"\r\n>\r\n  <div style=\"width: 30px\">\r\n    <i class=\"fas fa-exclamation-triangle\"></i>\r\n  </div>\r\n  <div>\r\n    Diese Organisation ist derzeit noch <b>nicht</b> freigeschaltet. Events sind\r\n    daher noch nicht öffentlich verfübar. Bitte kontaktieren Sie den Support für\r\n    Unterstützung:\r\n    <a href=\"mailto:stefan.strobel@s4-consulting.de\"\r\n      >stefan.strobel@s4-consulting.de</a\r\n    >\r\n  </div>\r\n</div>\r\n\r\n<!-- action buttons to create new events or change the view -->\r\n<div class=\"row\" *ngIf=\"tenant && appService.hasRole(tenant.id, ROLE.ADMIN)\">\r\n  <div class=\"col-12 col-md-6 col-lg-4\">\r\n    <div class=\"btn-group btn-block mb-3\" role=\"group\">\r\n      <button\r\n        class=\"w-50 btn\"\r\n        [ngClass]=\"{\r\n          'btn-outline-success': view !== VIEW.LIST,\r\n          'btn-success': view === VIEW.LIST\r\n        }\"\r\n        (click)=\"view = VIEW.LIST\"\r\n      >\r\n        <i class=\"fas fa-list mr-2\"></i>\r\n        Liste\r\n      </button>\r\n      <button\r\n        class=\"w-50 btn\"\r\n        [ngClass]=\"{\r\n          'btn-outline-success': view !== VIEW.CALENDAR,\r\n          'btn-success': view === VIEW.CALENDAR\r\n        }\"\r\n        (click)=\"view = VIEW.CALENDAR\"\r\n      >\r\n        <i class=\"fas fa-calendar-alt mr-2\"></i>\r\n        Kalender\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <!--<div class=\"flex-grow-1\"></div>-->\r\n  <div class=\"col-12 col-md-6 col-lg-4 offset-lg-4\">\r\n    <div\r\n      class=\"btn-group btn-block\"\r\n      role=\"group\"\r\n      *ngIf=\"!newSingleEventFormShown && !newEventSeriesFormShown\"\r\n    >\r\n      <button\r\n        class=\"w-50 btn btn-outline-success\"\r\n        (click)=\"showEventSeriesForm()\"\r\n      >\r\n        Neues Serienevent\r\n      </button>\r\n      <button\r\n        class=\"w-50 btn btn-outline-success\"\r\n        (click)=\"showNewSingleEventForm()\"\r\n      >\r\n        Neues Einzelevent\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- form to create a new event series -->\r\n<div\r\n  class=\"newEventContainer\"\r\n  *ngIf=\"newEventSeriesForm && newEventSeriesFormShown\"\r\n>\r\n  <h5>Daten für neues Reihenevent bis Ende dieses Jahres:</h5>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"newEventSeriesFormShown = false\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <p>\r\n    Legen Sie hier die Daten für ein neues Serienevent bis zum Ende dieses\r\n    Jahres fest. Die Terminserie wiederholt sich jede Woche ab dem angegebenen\r\n    Startdatum.\r\n  </p>\r\n  <form [formGroup]=\"newEventSeriesForm\" (ngSubmit)=\"addNewEventSeries()\">\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col-12 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newEventSeriesForm.controls.name) }\"\r\n      >\r\n        <label for=\"name\">Event-Name</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          formControlName=\"name\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newEventSeriesForm.controls.fromDate) }\"\r\n      >\r\n        <label for=\"fromDate\">Starttermin</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"fromDate\"\r\n          type=\"date\"\r\n          formControlName=\"fromDate\"\r\n          min=\"{{ today | date: 'yyyy-MM-dd' }}\"\r\n        />\r\n      </div>\r\n      <div\r\n        *ngIf=\"categories && categories.length > 0\"\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{\r\n          invalid: isInvalid(newEventSeriesForm.controls.categoryId)\r\n        }\"\r\n      >\r\n        <label>Kategorie</label>\r\n        <br />\r\n        <select class=\"form-control\" formControlName=\"categoryId\">\r\n          <option *ngFor=\"let category of categories\" [ngValue]=\"category.id\">\r\n            {{ category.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newEventSeriesForm.controls.time) }\"\r\n      >\r\n        <label for=\"name\">Startzeit</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"time\"\r\n          type=\"time\"\r\n          formControlName=\"time\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newEventSeriesForm.controls.maxSeats) }\"\r\n      >\r\n        <label for=\"maxSeats\">max. Teilnehmer</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"maxSeats\"\r\n          type=\"number\"\r\n          formControlName=\"maxSeats\"\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n      <div class=\"col-6 col-md-4\" *ngIf=\"orgMembers && orgMembers.length > 0\">\r\n        <!-- the list of users with role \"leader\" that have access to this event -->\r\n        <label>Nutzer mit Zugriff auf Teilnehmerdaten</label>\r\n        <div class=\"allowedMembersBox\">\r\n          <div\r\n            class=\"clickable\"\r\n            *ngFor=\"let user of orgMembers\"\r\n            [ngClass]=\"{\r\n              'text-secondary': !userIdsAllowedOnNewEvent.includes(user.id)\r\n            }\"\r\n            (click)=\"toggleUserOnNewEvent(user)\"\r\n          >\r\n            <i\r\n              class=\"fas mr-1\"\r\n              [ngClass]=\"{\r\n                'fa-check-circle': userIdsAllowedOnNewEvent.includes(user.id),\r\n                'fa-times-circle': !userIdsAllowedOnNewEvent.includes(user.id)\r\n              }\"\r\n            ></i>\r\n            {{ user.name }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-4\">\r\n        <button\r\n          class=\"btn btn-block btn-outline-success\"\r\n          type=\"submit\"\r\n          style=\"margin-top: 32px\"\r\n          [disabled]=\"operationOngoing\"\r\n        >\r\n          <loading *ngIf=\"operationOngoing\" textClass=\"text-success\"></loading>\r\n          Eventserie erstellen\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<!-- form to create a new single event -->\r\n<div\r\n  class=\"newEventContainer\"\r\n  *ngIf=\"newSingleEventForm && newSingleEventFormShown\"\r\n>\r\n  <h5>Daten für neues Einzelevent:</h5>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"newSingleEventFormShown = false\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <p>\r\n    Legen Sie hier die Daten für ein neues, einzelnes Event fest. Der Termin ist\r\n    einmalig und findet am angegebenen Tag zur angegebenen Uhrzeit statt.\r\n  </p>\r\n  <form [formGroup]=\"newSingleEventForm\" (ngSubmit)=\"addNewSingleEvent()\">\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col-12 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newSingleEventForm.controls.name) }\"\r\n      >\r\n        <label for=\"name\">Event-Name *</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          formControlName=\"name\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newSingleEventForm.controls.date) }\"\r\n      >\r\n        <label for=\"date\">Termin *</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"date\"\r\n          type=\"date\"\r\n          formControlName=\"date\"\r\n          min=\"{{ today | date: 'yyyy-MM-dd' }}\"\r\n        />\r\n      </div>\r\n      <div\r\n        *ngIf=\"categories && categories.length > 0\"\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{\r\n          invalid: isInvalid(newSingleEventForm.controls.categoryId)\r\n        }\"\r\n      >\r\n        <label>Kategorie</label>\r\n        <br />\r\n        <select class=\"form-control\" formControlName=\"categoryId\">\r\n          <option *ngFor=\"let category of categories\" [ngValue]=\"category.id\">\r\n            {{ category.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newSingleEventForm.controls.time) }\"\r\n      >\r\n        <label for=\"name\">Startzeit *</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"time\"\r\n          type=\"time\"\r\n          formControlName=\"time\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid(newSingleEventForm.controls.maxSeats) }\"\r\n      >\r\n        <label for=\"maxSeats\">max. Teilnehmer *</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"maxSeats\"\r\n          type=\"number\"\r\n          formControlName=\"maxSeats\"\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{\r\n          invalid: isInvalid(newSingleEventForm.controls.registrationOpenFrom)\r\n        }\"\r\n      >\r\n        <label for=\"registrationOpenFrom\">Anmeldung möglich ab</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"registrationOpenFrom\"\r\n          type=\"date\"\r\n          formControlName=\"registrationOpenFrom\"\r\n          min=\"{{ today | date: 'yyyy-MM-dd' }}\"\r\n        />\r\n      </div>\r\n      <div class=\"col-6 col-md-4\" *ngIf=\"orgMembers && orgMembers.length > 0\">\r\n        <!-- the list of users with role \"leader\" that have access to this event -->\r\n        <label>Nutzer mit Zugriff auf Teilnehmerdaten</label>\r\n        <div class=\"allowedMembersBox\">\r\n          <div\r\n            class=\"clickable\"\r\n            *ngFor=\"let user of orgMembers\"\r\n            [ngClass]=\"{\r\n              'text-secondary': !userIdsAllowedOnNewEvent.includes(user.id)\r\n            }\"\r\n            (click)=\"toggleUserOnNewEvent(user)\"\r\n          >\r\n            <i\r\n              class=\"fas mr-1\"\r\n              [ngClass]=\"{\r\n                'fa-check-circle': userIdsAllowedOnNewEvent.includes(user.id),\r\n                'fa-times-circle': !userIdsAllowedOnNewEvent.includes(user.id)\r\n              }\"\r\n            ></i>\r\n            {{ user.name }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-4\">\r\n        <button\r\n          class=\"btn btn-block btn-outline-success\"\r\n          type=\"submit\"\r\n          style=\"margin-top: 32px\"\r\n          [disabled]=\"operationOngoing\"\r\n        >\r\n          <loading *ngIf=\"operationOngoing\" textClass=\"text-success\"></loading>\r\n          Event erstellen\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<!-- calendar view -->\r\n<div *ngIf=\"allEvents && view === VIEW.CALENDAR\">\r\n  <p>\r\n    <i class=\"fas mr-1 fa-info-circle\"></i> In der Kalenderansicht ist es nicht\r\n    möglich, Termine zu editieren oder löschen. Verwenden Sie hierzu bitte die\r\n    Listenansicht.\r\n  </p>\r\n  <calendar\r\n    [events]=\"allEvents\"\r\n    [tenant]=\"tenant\"\r\n    (eventClicked)=\"showEventParticipants($event, showParticipantsModal)\"\r\n    (statusToggled)=\"toggleDisabled($event)\"\r\n  ></calendar>\r\n</div>\r\n\r\n<!-- display on wide screens -->\r\n<div\r\n  class=\"w-100 d-none d-xl-block mt-3\"\r\n  style=\"overflow-x: auto\"\r\n  *ngIf=\"view === VIEW.LIST\"\r\n>\r\n  <table class=\"w-100\" *ngIf=\"uniqueEvents\">\r\n    <thead>\r\n      <tr>\r\n        <th style=\"width: 100px\">KW</th>\r\n        <th\r\n          style=\"min-width: 140px; width: 300px; text-align: center\"\r\n          *ngFor=\"let uniqueEvent of uniqueEvents\"\r\n        >\r\n          <h4>{{ uniqueEvent.displayName() }}</h4>\r\n          {{ uniqueEvent.displayTime() }}\r\n          <span\r\n            class=\"badge badge-plevents ml-2\"\r\n            *ngIf=\"uniqueEvent.categoryId\"\r\n          >\r\n            <i\r\n              class=\"fas mr-1 {{ categoryById(uniqueEvent.categoryId).icon }}\"\r\n              *ngIf=\"categoryById(uniqueEvent.categoryId).icon\"\r\n            ></i\r\n            >{{ categoryName(uniqueEvent.categoryId) }}</span\r\n          >\r\n        </th>\r\n      </tr>\r\n      <tr *ngIf=\"appService.hasRole(tenant.id, ROLE.ADMIN)\">\r\n        <th></th>\r\n        <th *ngFor=\"let uniqueEvent of uniqueEvents; let i = index\" class=\"p-2\">\r\n          <!-- only allow to change/delete events that are not in the past -->\r\n          <div class=\"row\" *ngIf=\"!lastEventOfSeries(uniqueEvent).isInPast()\">\r\n            <div\r\n              class=\"col-md-12\"\r\n              [ngClass]=\"{\r\n                'col-6': appService.hasRole(tenant.id, ROLE.OWNER),\r\n                'col-xl-6': appService.hasRole(tenant.id, ROLE.OWNER)\r\n              }\"\r\n            >\r\n              <button\r\n                class=\"btn btn-sm btn-block btn-outline-success\"\r\n                (click)=\"editSeriesEvent(uniqueEvent, editSeriesEventModal)\"\r\n                [disabled]=\"operationOngoing\"\r\n              >\r\n                <i class=\"fas mr-1 fa-edit\"></i>Ändern\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6 col-md-12 col-xl-6\">\r\n              <button\r\n                *ngIf=\"appService.hasRole(tenant.id, ROLE.OWNER)\"\r\n                class=\"btn btn-sm btn-block btn-outline-danger\"\r\n                (click)=\"deleteEventSeries(i)\"\r\n                [disabled]=\"operationOngoing\"\r\n              >\r\n                <i class=\"fas mr-1 fa-trash-alt\"></i>Löschen\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let week of weeks\">\r\n        <td [ngClass]=\"{ currentCW: week.number === currentCW() }\">\r\n          {{ week.number }}\r\n          <small *ngIf=\"week.number === currentCW()\"\r\n            ><br />aktuelle Woche</small\r\n          >\r\n        </td>\r\n        <td\r\n          *ngFor=\"let event of week.events\"\r\n          class=\"greyedOut\"\r\n          [ngClass]=\"{\r\n            'happening': event,\r\n            'unavailable': event && event.takenSeats >= event.maxSeats,\r\n            'disabled': event && event.disabled,\r\n            'empty': event && event.takenSeats === 0,\r\n            'has-passed': event && event.isInPast()\r\n          }\"\r\n        >\r\n          <div\r\n            *ngIf=\"event\"\r\n            style=\"position: relative\"\r\n            [ngClass]=\"{\r\n              clickable:\r\n                event &&\r\n                (appService.hasRole(tenant.id, ROLE.ADMIN) ||\r\n                  appService.getCurrentUser().hasAccessToEvent(event))\r\n            }\"\r\n            (click)=\"showEventParticipants(event, showParticipantsModal)\"\r\n          >\r\n            {{ event.displayDate() }}<br />\r\n            <small>{{ event.takenSeats }} / {{ event.maxSeats }} </small\r\n            ><i\r\n              *ngIf=\"\r\n                appService.hasRole(tenant.id, ROLE.ADMIN) ||\r\n                appService.getCurrentUser().hasAccessToEvent(event)\r\n              \"\r\n              class=\"fas fa-file-pdf actionableIcon\"\r\n              (click)=\"downloadPdf($event, event)\"\r\n              title=\"Download Teilnehmerliste\"\r\n            ></i>\r\n            <small\r\n              class=\"stateToggler\"\r\n              [ngClass]=\"{ clickable: !event.isInPast() }\"\r\n              (click)=\"event.isInPast() || toggleDisabled(event, $event)\"\r\n            >\r\n              <i *ngIf=\"!event.disabled\">aktiv</i>\r\n              <i *ngIf=\"event.disabled\">inaktiv</i>\r\n            </small>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<!-- display on small screens -->\r\n<div class=\"d-xl-none mt-3\" *ngIf=\"uniqueEvents && view === VIEW.LIST\">\r\n  <div\r\n    class=\"card w-100 mb-3\"\r\n    *ngFor=\"let uniqueEvent of uniqueEvents; let i = index\"\r\n  >\r\n    <div class=\"card-header\">\r\n      <h4>{{ uniqueEvent.displayName() }}</h4>\r\n      {{ uniqueEvent.displayTime() }}\r\n      <span\r\n        class=\"badge badge-plevents float-right\"\r\n        *ngIf=\"uniqueEvent.categoryId\"\r\n      >\r\n        <i\r\n          class=\"fas mr-1 {{ categoryById(uniqueEvent.categoryId).icon }}\"\r\n          *ngIf=\"categoryById(uniqueEvent.categoryId).icon\"\r\n        ></i\r\n        >{{ categoryName(uniqueEvent.categoryId) }}</span\r\n      >\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <button\r\n        class=\"btn btn-block btn-outline-secondary\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        [attr.data-target]=\"'#events-collapser-' + i\"\r\n        (click)=\"eventsOpened[i] = !eventsOpened[i]\"\r\n      >\r\n        <i class=\"fas fa-angle-down\" *ngIf=\"!eventsOpened[i]\"></i>\r\n        <i class=\"fas fa-angle-up\" *ngIf=\"eventsOpened[i]\"></i>\r\n        Events anzeigen\r\n      </button>\r\n      <div class=\"collapse\" [attr.id]=\"'events-collapser-' + i\">\r\n        <table class=\"w-100 mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th style=\"width: 30%\">KW</th>\r\n              <th style=\"width: 70%; text-align: center\">Event</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let week of weeks\">\r\n              <td [ngClass]=\"{ currentCW: week.number === currentCW() }\">\r\n                {{ week.number }}\r\n                <small *ngIf=\"week.number === currentCW()\"\r\n                  ><br />aktuelle Woche</small\r\n                >\r\n              </td>\r\n              <td\r\n                *ngFor=\"\r\n                  let event of [\r\n                    searchEventByUniqueEvent(week.events, uniqueEvent)\r\n                  ]\r\n                \"\r\n                class=\"greyedOut\"\r\n                [ngClass]=\"{\r\n                  'happening': event,\r\n                  'unavailable': event && event.takenSeats >= event.maxSeats,\r\n                  'disabled': event && event.disabled,\r\n                  'empty': event && event.takenSeats === 0,\r\n                  'has-passed': event && event.isInPast()\r\n                }\"\r\n              >\r\n                <div\r\n                  *ngIf=\"event\"\r\n                  [ngClass]=\"{\r\n                    disabled: event.disabled,\r\n                    clickable:\r\n                      event &&\r\n                      (appService.hasRole(tenant.id, ROLE.ADMIN) ||\r\n                        appService.getCurrentUser().hasAccessToEvent(event))\r\n                  }\"\r\n                  style=\"position: relative\"\r\n                  (click)=\"showEventParticipants(event, showParticipantsModal)\"\r\n                >\r\n                  {{ event.displayDate() }}<br />\r\n                  <small>{{ event.takenSeats }} / {{ event.maxSeats }} </small\r\n                  ><i\r\n                    *ngIf=\"\r\n                      appService.hasRole(tenant.id, ROLE.ADMIN) ||\r\n                      appService.getCurrentUser().hasAccessToEvent(event)\r\n                    \"\r\n                    class=\"fas fa-file-pdf actionableIcon\"\r\n                    (click)=\"downloadPdf($event, event)\"\r\n                    title=\"Download Teilnehmerliste\"\r\n                  ></i>\r\n                  <small\r\n                    class=\"stateToggler\"\r\n                    [ngClass]=\"{ clickable: !event.isInPast() }\"\r\n                    (click)=\"event.isInPast() || toggleDisabled(event, $event)\"\r\n                  >\r\n                    <i *ngIf=\"!event.disabled\">aktiv</i>\r\n                    <i *ngIf=\"event.disabled\">inaktiv</i>\r\n                  </small>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <!-- only allow to change/delete events that are not in the past -->\r\n      <div class=\"row mt-2\" *ngIf=\"!lastEventOfSeries(uniqueEvent).isInPast()\">\r\n        <div\r\n          class=\"col-md-12\"\r\n          [ngClass]=\"{\r\n            'col-6': appService.hasRole(tenant.id, ROLE.OWNER),\r\n            'col-xl-6': appService.hasRole(tenant.id, ROLE.OWNER)\r\n          }\"\r\n        >\r\n          <button\r\n            class=\"btn btn-sm btn-block btn-outline-success\"\r\n            (click)=\"editSeriesEvent(uniqueEvent, editSeriesEventModal)\"\r\n            [disabled]=\"operationOngoing\"\r\n          >\r\n            <i class=\"fas mr-1 fa-edit\"></i>Ändern\r\n          </button>\r\n        </div>\r\n        <div class=\"col-6 col-md-12 col-xl-6\">\r\n          <button\r\n            *ngIf=\"appService.hasRole(tenant.id, ROLE.OWNER)\"\r\n            class=\"btn btn-sm btn-block btn-outline-danger\"\r\n            (click)=\"deleteEventSeries(i)\"\r\n            [disabled]=\"operationOngoing\"\r\n          >\r\n            <i class=\"fas mr-1 fa-trash-alt\"></i>Löschen\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- loading message -->\r\n<div\r\n  class=\"alert alert-secondary text-center\"\r\n  style=\"margin-top: 100px\"\r\n  *ngIf=\"!uniqueEvents\"\r\n>\r\n  <loading></loading>\r\n  Daten werden geladen...\r\n</div>\r\n\r\n<!-- modal to edit events -->\r\n<ng-template #editSeriesEventModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Event bearbeiten</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>\r\n      Ändern Sie hier den Titel des Events, den Tag sowie die Uhrzeit beliebig\r\n      ab.\r\n    </p>\r\n    <p *ngIf=\"!eventBeingEdited.singleOccurence\">\r\n      Diese Änderung wirkt sich\r\n      <b>nur auf alle in der Zukunft liegenden</b> Events aus.\r\n    </p>\r\n    <form [formGroup]=\"editEventForm\">\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"col-12 form-group\"\r\n          [ngClass]=\"{ invalid: isInvalid(editEventForm.controls.name) }\"\r\n        >\r\n          <label for=\"editEventName\">Event-Name</label>\r\n          <br />\r\n          <input\r\n            class=\"form-control\"\r\n            id=\"editEventName\"\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n          />\r\n        </div>\r\n        <div\r\n          class=\"col-12 form-group\"\r\n          *ngIf=\"!eventBeingEdited.singleOccurence\"\r\n        >\r\n          <label>Wochentag</label>\r\n          <br />\r\n          <div class=\"btn-group w-100\" btnRadioGroup formControlName=\"weekDay\">\r\n            <label class=\"btn btn-success\" [btnRadio]=\"1\">Mo</label>\r\n            <label class=\"btn btn-success\" [btnRadio]=\"2\">Di</label>\r\n            <label class=\"btn btn-success\" [btnRadio]=\"3\">Mi</label>\r\n            <label class=\"btn btn-success\" [btnRadio]=\"4\">Do</label>\r\n            <label class=\"btn btn-success\" [btnRadio]=\"5\">Fr</label>\r\n            <label class=\"btn btn-success\" [btnRadio]=\"6\">Sa</label>\r\n            <label class=\"btn btn-success\" [btnRadio]=\"7\">So</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 form-group\" *ngIf=\"eventBeingEdited.singleOccurence\">\r\n          <label for=\"date\">Datum</label>\r\n          <br />\r\n          <input\r\n            class=\"form-control\"\r\n            id=\"date\"\r\n            type=\"date\"\r\n            formControlName=\"date\"\r\n            min=\"{{ today | date: 'yyyy-MM-dd' }}\"\r\n          />\r\n        </div>\r\n        <div\r\n          *ngIf=\"categories && categories.length > 0\"\r\n          class=\"col-12 form-group\"\r\n          [ngClass]=\"{ invalid: isInvalid(editEventForm.controls.categoryId) }\"\r\n        >\r\n          <label>Kategorie</label>\r\n          <br />\r\n          <select class=\"form-control\" formControlName=\"categoryId\">\r\n            <option *ngFor=\"let category of categories\" [ngValue]=\"category.id\">\r\n              {{ category.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div\r\n          class=\"col-12 form-group\"\r\n          [ngClass]=\"{ invalid: isInvalid(editEventForm.controls.time) }\"\r\n        >\r\n          <label for=\"name\">Startzeit</label>\r\n          <br />\r\n          <input\r\n            class=\"form-control\"\r\n            id=\"time\"\r\n            type=\"time\"\r\n            formControlName=\"time\"\r\n          />\r\n        </div>\r\n        <div\r\n          class=\"col-12 form-group\"\r\n          [ngClass]=\"{ invalid: isInvalid(editEventForm.controls.maxSeats) }\"\r\n        >\r\n          <label for=\"maxSeats\">max. Teilnehmer</label>\r\n          <br />\r\n          <input\r\n            class=\"form-control\"\r\n            id=\"maxSeats\"\r\n            type=\"number\"\r\n            formControlName=\"maxSeats\"\r\n          />\r\n        </div>\r\n        <div\r\n          *ngIf=\"eventBeingEdited.singleOccurence\"\r\n          class=\"col-12 form-group\"\r\n          [ngClass]=\"{\r\n            invalid: isInvalid(editEventForm.controls.registrationOpenFrom)\r\n          }\"\r\n        >\r\n          <label for=\"registrationOpenFrom\">Anmeldung möglich ab</label>\r\n          <br />\r\n          <input\r\n            class=\"form-control\"\r\n            id=\"registrationOpenFrom\"\r\n            type=\"date\"\r\n            formControlName=\"registrationOpenFrom\"\r\n            min=\"{{ today | date: 'yyyy-MM-dd' }}\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      Abbrechen\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-success\"\r\n      (click)=\"updateEvents()\"\r\n      [disabled]=\"operationOngoing\"\r\n    >\r\n      <loading *ngIf=\"operationOngoing\" textClass=\"text-success\"></loading>\r\n      Speichern\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- modal to display and edit participants -->\r\n<ng-template #showParticipantsModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Teilnehmer</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>\r\n      Nachfolgend sind alle bisher angemeldeten Teilnehmer zu\r\n      <b>{{ selectedEvent.name }}</b> am\r\n      <b>{{ selectedEvent.displayDate() }}</b> um\r\n      <b>{{ selectedEvent.displayTime(false) }} Uhr</b>\r\n      aufgeführt:\r\n    </p>\r\n    <ul class=\"list-group\" *ngIf=\"participants && participants.length > 0\">\r\n      <li\r\n        class=\"list-group-item sg-hoverable-list-item\"\r\n        *ngFor=\"let participant of participants\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-9\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-lg-6 col-xl-3\">\r\n                {{ participant.firstname + ' ' + participant.lastname }}\r\n              </div>\r\n              <div class=\"col-12 col-lg-6 col-xl-3\">\r\n                {{ participant.street }}<br />\r\n                {{ participant.zip }}, {{ participant.city }}\r\n              </div>\r\n              <div class=\"col-12 col-lg-6 col-xl-3\">\r\n                {{ participant.email }}\r\n              </div>\r\n              <div class=\"col-12 col-lg-6 col-xl-3\">\r\n                {{ participant.phone }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger\"\r\n              (click)=\"deleteParticipant(participant)\"\r\n              *ngIf=\"eventNotinPast()\"\r\n            >\r\n              <i class=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <div\r\n      class=\"alert alert-secondary\"\r\n      *ngIf=\"participants && participants.length === 0\"\r\n    >\r\n      Noch keine Teilnehmer zu dieser Aktivität.\r\n    </div>\r\n    <small *ngIf=\"!participants\">Teilnehmer werden geladen...</small>\r\n    <div class=\"alert alert-success mt-3 mb-1\" *ngIf=\"addParticipantSuccess\">\r\n      {{ addParticipantSuccess }}\r\n    </div>\r\n    <div *ngIf=\"eventNotinPast()\">\r\n      <form\r\n        [formGroup]=\"addParticipantForm\"\r\n        *ngIf=\"showAddParticipantForm\"\r\n        (ngSubmit)=\"addParticipant()\"\r\n      >\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('firstname') }\"\r\n          >\r\n            <label for=\"firstname\">Vorname</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Vorname des Teilnehmers\"\r\n              formControlName=\"firstname\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('lastname') }\"\r\n          >\r\n            <label for=\"lastname\">Nachname</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nachname des Teilnehmers\"\r\n              formControlName=\"lastname\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('email') }\"\r\n          >\r\n            <label for=\"email\">Email</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Kontakt-Email Adresse\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('phone') }\"\r\n          >\r\n            <label for=\"phone\">Telefonnummer</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"phone\"\r\n              type=\"phone\"\r\n              placeholder=\"Telefonnr für Rückfragen\"\r\n              formControlName=\"phone\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('street') }\"\r\n          >\r\n            <label for=\"street\">Adresse</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"street\"\r\n              type=\"text\"\r\n              placeholder=\"Straße & Hausnummer\"\r\n              formControlName=\"street\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6 col-md-4\" [ngClass]=\"{ invalid: isInvalid('zip') }\">\r\n            <label for=\"zip\">PLZ</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"zip\"\r\n              type=\"text\"\r\n              placeholder=\"Postleitzahl\"\r\n              formControlName=\"zip\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('city') }\"\r\n          >\r\n            <label for=\"city\">Ort</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"city\"\r\n              type=\"text\"\r\n              placeholder=\"Wohnort\"\r\n              formControlName=\"city\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6 col-md-4 offset-md-4\">\r\n            <button\r\n              class=\"btn btn-block btn-success\"\r\n              type=\"submit\"\r\n              style=\"margin-top: 32px\"\r\n              [disabled]=\"operationOngoing\"\r\n            >\r\n              <loading\r\n                *ngIf=\"operationOngoing\"\r\n                textClass=\"text-success\"\r\n              ></loading>\r\n              Zum Event hinzufügen\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"text-right mt-2\" *ngIf=\"tenant && tenant.active\">\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"!showAddParticipantForm\"\r\n          class=\"btn btn-sm btn-outline-success\"\r\n          (click)=\"showAddParticipantForm = true\"\r\n        >\r\n          Neuen Teilnehmer erfassen\r\n        </button>\r\n      </div>\r\n      <div\r\n        class=\"alert alert-warning d-flex flex-row\"\r\n        *ngIf=\"tenant && !tenant.active\"\r\n      >\r\n        <div style=\"width: 30px\">\r\n          <i class=\"fas fa-exclamation-triangle\"></i>\r\n        </div>\r\n        <div>\r\n          Diese Organisation ist derzeit noch <b>nicht</b> freigeschaltet.\r\n          Teilnehmer können daher noch nicht erfasst werden. Bitte kontaktieren\r\n          Sie den Support für Unterstützung:\r\n          <a href=\"mailto:stefan.strobel@s4-consulting.de\"\r\n            >stefan.strobel@s4-consulting.de</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary\"\r\n      (click)=\"modalRef.hide()\"\r\n    >\r\n      Schließen\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss'],\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n  @Input()\r\n  textClass: string = '';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"spinner-border {{ textClass }}\" role=\"status\">\r\n  <span class=\"sr-only\"></span>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\n\r\n@Component({\r\n  selector: 'app-password-reset',\r\n  templateUrl: './password-reset.component.html',\r\n  styleUrls: ['./password-reset.component.scss'],\r\n})\r\nexport class PasswordResetComponent implements OnInit, OnDestroy {\r\n  private userSubscription: Subscription;\r\n  error: string;\r\n  loading: boolean = false;\r\n  submitted: boolean = false;\r\n  passwordForm: FormGroup = new FormGroup({\r\n    password: new FormControl('', Validators.required),\r\n  });\r\n  noCode: boolean = false;\r\n  passwordSet: boolean = false;\r\n  ROUTES = ROUTES;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private appService: AppService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userSubscription = this.appService.user.subscribe(user => {\r\n      if (user) {\r\n        this.router.navigate([`/${ROUTES.PROFILE}`]);\r\n      }\r\n    });\r\n    if (!this.route.snapshot.queryParams.code) {\r\n      this.noCode = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.noCode) {\r\n      return;\r\n    }\r\n    if (this.passwordForm.invalid) {\r\n      this.passwordForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.userService\r\n      .resetPassword(\r\n        this.route.snapshot.queryParams.code,\r\n        this.passwordForm.get('password').value\r\n      )\r\n      .subscribe(\r\n        () => {\r\n          this.passwordSet = true;\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.error =\r\n            'Es trat ein technischer Fehler auf. Bitte versuchen Sie es später erneut.';\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 col-md-8 offset-md-2 col-xl-4 offset-xl-4\">\r\n    <div class=\"card\">\r\n      <h4 class=\"card-header\">Passwort-Rücksetzung</h4>\r\n      <div class=\"card-body\">\r\n        <form\r\n          [formGroup]=\"passwordForm\"\r\n          (ngSubmit)=\"onSubmit()\"\r\n          *ngIf=\"!passwordSet\"\r\n        >\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Neues Passwort vergeben *</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              formControlName=\"password\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  passwordForm.get('password').invalid &&\r\n                  passwordForm.get('password').touched\r\n              }\"\r\n            />\r\n            <div\r\n              *ngIf=\"\r\n                passwordForm.get('password').errors &&\r\n                passwordForm.get('password').touched\r\n              \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              Bitte ein neues, gültiges Passwort eingeben\r\n            </div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <button\r\n              [disabled]=\"loading || noCode\"\r\n              class=\"btn btn-success\"\r\n              style=\"margin-top: 32px\"\r\n            >\r\n              Neues Passwort setzen\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger text-center mt-3 mb-0\">\r\n          {{ error }}\r\n        </div>\r\n        <div *ngIf=\"noCode\" class=\"alert alert-warning text-center mt-3 mb-0\">\r\n          Sie haben diese Seite ohne Code aufgerufen. Sie gelangen\r\n          <a [routerLink]=\"['/' + ROUTES.LOGIN]\">zurück zur Loginseite</a>.\r\n        </div>\r\n        <div\r\n          *ngIf=\"passwordSet\"\r\n          class=\"alert alert-success text-center mt-3 mb-0\"\r\n        >\r\n          Das neue Passwort wurde gespeichert. Bitte gehen Sie\r\n          <a [routerLink]=\"['/' + ROUTES.LOGIN]\">zur Loginseite</a> und melden\r\n          Sie sich an.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserAdapter, User } from '../models/user';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserI } from '../../../../common/user';\r\nimport { ROLE } from '../../../../common/tenant-relation';\r\nimport { Invitation, InvitationAdapter } from '../models/invitation';\r\nimport { EventRelation, EventRelationAdapter } from '../models/event-relation';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userAdapter: UserAdapter,\r\n    private invitationAdapter: InvitationAdapter,\r\n    private eventRelationAdapter: EventRelationAdapter\r\n  ) {}\r\n\r\n  register(user: UserI, tenantPath?: string): Observable<User> {\r\n    const payload = Object.assign({}, user) as any;\r\n    if (tenantPath) {\r\n      payload.tenantPath = tenantPath;\r\n    }\r\n    return this.http.post(`${environment.apiUrl}/profile`, payload).pipe(\r\n      // Adapt the raw item\r\n      map(item => this.userAdapter.adapt(item))\r\n    );\r\n  }\r\n\r\n  finishRegistration(code: string): Observable<any> {\r\n    return this.http.post(\r\n      `${environment.apiUrl}/profile/activate/${code}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  removeFromTenant(tenantId: string, userId: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}`\r\n    );\r\n  }\r\n\r\n  setRole(tenantId: string, userId: string, role: ROLE): Observable<User> {\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}/role/${role}`,\r\n        null\r\n      )\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.userAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  activate(tenantId: string, userId: string): Observable<User> {\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}/active/true`,\r\n        null\r\n      )\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.userAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  deactivate(tenantId: string, userId: string): Observable<User> {\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}/active/false`,\r\n        null\r\n      )\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.userAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  getProfile(): Observable<User> {\r\n    return this.http.get(`${environment.apiUrl}/secure/profile`).pipe(\r\n      // Adapt the raw item\r\n      map(item => this.userAdapter.adapt(item))\r\n    );\r\n  }\r\n\r\n  updateProfile(user: User): Observable<User> {\r\n    return this.http.put(`${environment.apiUrl}/secure/profile`, user).pipe(\r\n      // Adapt the raw item\r\n      map(item => this.userAdapter.adapt(item))\r\n    );\r\n  }\r\n\r\n  updatePassword(oldPassword: string, newPassword: string): Observable<any> {\r\n    return this.http.put(`${environment.apiUrl}/secure/profile/password`, {\r\n      oldPassword,\r\n      newPassword,\r\n    });\r\n  }\r\n\r\n  initiatePasswordReset(email: string): Observable<any> {\r\n    return this.http.post(`${environment.apiUrl}/forgotten-password`, {\r\n      email,\r\n    });\r\n  }\r\n\r\n  resetPassword(code: string, password: string): Observable<any> {\r\n    return this.http.post(`${environment.apiUrl}/forgotten-password/${code}`, {\r\n      password,\r\n    });\r\n  }\r\n\r\n  deleteProfile(): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}/secure/profile`);\r\n  }\r\n\r\n  getPendingInvitations(): Observable<Invitation[]> {\r\n    return this.http.get(`${environment.apiUrl}/secure/invitations`).pipe(\r\n      // Adapt the raw items\r\n      map((data: any[]) => data.map(item => this.invitationAdapter.adapt(item)))\r\n    );\r\n  }\r\n\r\n  declineInvitation(tenantId: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/invitations/${tenantId}`\r\n    );\r\n  }\r\n\r\n  acceptInvitation(invitationId: string): Observable<any> {\r\n    return this.http.post(\r\n      `${environment.apiUrl}/secure/invitations/${invitationId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  allowAccessToEvent(\r\n    tenantId: string,\r\n    userId: string,\r\n    eventId: string\r\n  ): Observable<EventRelation> {\r\n    return this.http\r\n      .post(\r\n        `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}/event/${eventId}`,\r\n        null\r\n      )\r\n      .pipe(map(item => this.eventRelationAdapter.adapt(item)));\r\n  }\r\n\r\n  denyAccessToEvent(\r\n    tenantId: string,\r\n    userId: string,\r\n    eventId: string\r\n  ): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}/event/${eventId}`\r\n    );\r\n  }\r\n\r\n  allowAccessToEventSeries(\r\n    tenantId: string,\r\n    userId: string,\r\n    eventSeriesId: string\r\n  ): Observable<EventRelation> {\r\n    return this.http\r\n      .post(\r\n        `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}/eventSeries/${eventSeriesId}`,\r\n        null\r\n      )\r\n      .pipe(map(item => this.eventRelationAdapter.adapt(item)));\r\n  }\r\n\r\n  denyAccessToEventSeries(\r\n    tenantId: string,\r\n    userId: string,\r\n    eventSeriesId: string\r\n  ): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.apiUrl}/secure/tenants/${tenantId}/users/${userId}/eventSeries/${eventSeriesId}`\r\n    );\r\n  }\r\n\r\n  loadEventsWithAccessTo(): Observable<EventRelation[]> {\r\n    return this.http.get(`${environment.apiUrl}/secure/event-relations`).pipe(\r\n      // Adapt the raw items\r\n      map((data: any[]) =>\r\n        data.map(item => this.eventRelationAdapter.adapt(item))\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { reject } from 'lodash';\r\nimport { Invitation } from 'src/app/models/invitation';\r\nimport { TenantRelation } from 'src/app/models/tenant-relation';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\n\r\n@Component({\r\n  selector: 'app-my-accounts',\r\n  templateUrl: './my-accounts.component.html',\r\n  styleUrls: ['./my-accounts.component.scss'],\r\n})\r\nexport class MyAccountsComponent implements OnInit {\r\n  tenantRelations: TenantRelation[] = null;\r\n  invitations: Invitation[] = null;\r\n  ROUTES = ROUTES;\r\n\r\n  constructor(\r\n    private tenantService: TenantService,\r\n    private userService: UserService,\r\n    private appService: AppService,\r\n    private notification: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadTenantsAndInvitations();\r\n  }\r\n\r\n  loadTenantsAndInvitations(): void {\r\n    this.tenantRelations = null;\r\n    this.invitations = null;\r\n    this.tenantService\r\n      .getAll()\r\n      .subscribe((tenantRelations: TenantRelation[]) => {\r\n        this.tenantRelations = tenantRelations;\r\n      });\r\n    this.userService\r\n      .getPendingInvitations()\r\n      .subscribe((invitations: Invitation[]) => {\r\n        this.invitations = invitations;\r\n      });\r\n  }\r\n\r\n  detach(tenantRelation: TenantRelation): void {\r\n    this.notification.confirm({\r\n      title: 'Von Organisation trennen?',\r\n      text: 'Möchten Sie sich wirklich von dieser Organisation trennen?',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Ja',\r\n      yesCallback: () => {\r\n        this.userService\r\n          .removeFromTenant(tenantRelation.tenantId, tenantRelation.userId)\r\n          .subscribe(\r\n            () => {\r\n              this.notification.success(\r\n                'Sie haben sich von Organisation \"' +\r\n                  tenantRelation.tenant.name +\r\n                  '\" getrennt'\r\n              );\r\n              if (\r\n                this.appService.getCurrentTenant() &&\r\n                this.appService.getCurrentTenant().id ===\r\n                  tenantRelation.tenantId\r\n              ) {\r\n                this.appService.setCurrentTenant(null);\r\n              }\r\n              this.tenantRelations = reject(\r\n                this.tenantRelations,\r\n                tenantRelation\r\n              );\r\n            },\r\n            error => {\r\n              if (error === 'Conflict') {\r\n                this.notification.success(\r\n                  'Sie sind der einzige Administrator für diese Organisation und können sich daher nicht von ihr trennen'\r\n                );\r\n              } else {\r\n                this.notification.error('Es trat ein Fehler auf');\r\n              }\r\n            }\r\n          );\r\n      },\r\n    });\r\n  }\r\n\r\n  join(invitation: Invitation): void {\r\n    this.userService.acceptInvitation(invitation.id).subscribe(\r\n      (tenantRelation: TenantRelation) => {\r\n        this.loadTenantsAndInvitations();\r\n        this.notification.success('Accout beigetreten');\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.notification.error('Es trat ein Fehler auf');\r\n      }\r\n    );\r\n  }\r\n\r\n  decline(invitation: Invitation): void {\r\n    this.notification.confirm({\r\n      title: 'Einladung ablehnen?',\r\n      text: 'Möchten Sie die Einladung wirklich ablehnen?',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Ja',\r\n      yesCallback: () => {\r\n        this.userService.declineInvitation(invitation.tenantId).subscribe(\r\n          () => {\r\n            this.notification.success('Einladung abgelehnt');\r\n            this.invitations = reject(this.invitations, invitation);\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            this.notification.error('Es trat ein Fehler auf');\r\n          }\r\n        );\r\n      },\r\n    });\r\n  }\r\n}\r\n","<h2>Meine Organisationen</h2>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <p>\r\n      Behalten Sie den Überblick über die mit Ihnen verbundenen Organisation.\r\n    </p>\r\n    <p class=\"float-left\">\r\n      Die folgende Übersicht listet alle Organisationen auf, denen Sie\r\n      zugeordnet sind.\r\n    </p>\r\n  </div>\r\n  <div class=\"col-12 col-lg-6\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <a\r\n              class=\"btn float-right btn-sm btn-outline-success mb-2\"\r\n              [routerLink]=\"['/' + ROUTES.REGISTER_TENANT]\"\r\n            >\r\n              Neue Organisation anlegen\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <ul\r\n          class=\"list-group mt-3\"\r\n          *ngIf=\"\r\n            (tenantRelations && tenantRelations.length > 0) ||\r\n            (invitations && invitations.length > 0)\r\n          \"\r\n        >\r\n          <li\r\n            class=\"list-group-item sg-hoverable-list-item\"\r\n            *ngFor=\"let tenantRelation of tenantRelations\"\r\n          >\r\n            <i\r\n              class=\"fas fa-power-off mr-2\"\r\n              [ngClass]=\"{\r\n                'text-success': tenantRelation.tenant.active,\r\n                'text-secondary': !tenantRelation.tenant.active\r\n              }\"\r\n              title=\"{{\r\n                tenantRelation.tenant.active\r\n                  ? 'Organisation ist aktiv'\r\n                  : 'Organisation ist inaktiv'\r\n              }}\"\r\n            ></i>\r\n            <a\r\n              *ngIf=\"tenantRelation.active\"\r\n              [routerLink]=\"[\r\n                '/' + ROUTES.TENANT_PREFIX,\r\n                tenantRelation.tenant.path,\r\n                tenantRelation.isAdmin()\r\n                  ? ROUTES.TENANT_MANAGEMENT\r\n                  : ROUTES.TENANT_PLANNER\r\n              ]\"\r\n              >{{ tenantRelation.tenant.name }}<br /><small\r\n                >/{{ tenantRelation.tenant.path }}</small\r\n              ></a\r\n            >\r\n            <span *ngIf=\"!tenantRelation.active\"\r\n              >{{ tenantRelation.tenant.name }}<br /><small\r\n                >/{{ tenantRelation.tenant.path }}</small\r\n              ></span\r\n            >\r\n            <button\r\n              class=\"float-right btn btn-sm ml-2 btn-outline-danger\"\r\n              (click)=\"detach(tenantRelation)\"\r\n            >\r\n              von Organisation trennen\r\n            </button>\r\n            <span\r\n              class=\"badge badge-warning mt-2 float-right\"\r\n              *ngIf=\"!tenantRelation.active\"\r\n            >\r\n              noch nicht zugelassen\r\n            </span>\r\n            <span\r\n              class=\"badge mt-2 float-right\"\r\n              *ngIf=\"tenantRelation.active\"\r\n              [ngClass]=\"{\r\n                'badge-success':\r\n                  tenantRelation.isAdmin() && !tenantRelation.isOwner(),\r\n                'badge-primary': tenantRelation.isOwner(),\r\n                'badge-secondary':\r\n                  !tenantRelation.isAdmin() && !tenantRelation.isOwner()\r\n              }\"\r\n            >\r\n              <span *ngIf=\"tenantRelation.isOwner()\"\r\n                ><i class=\"fas fa-crown\"></i> Owner</span\r\n              >\r\n              <span\r\n                *ngIf=\"tenantRelation.isAdmin() && !tenantRelation.isOwner()\"\r\n                >Admin</span\r\n              >\r\n              <span\r\n                *ngIf=\"!tenantRelation.isAdmin() && !tenantRelation.isOwner()\"\r\n                >Leiter</span\r\n              >\r\n            </span>\r\n          </li>\r\n          <li\r\n            class=\"list-group-item sg-hoverable-list-item\"\r\n            *ngFor=\"let invitation of invitations\"\r\n          >\r\n            {{ invitation.tenant.name }}<br /><small\r\n              >/{{ invitation.tenant.path }}</small\r\n            >\r\n            <button\r\n              class=\"float-right btn btn-sm ml-2 btn-outline-danger\"\r\n              (click)=\"decline(invitation)\"\r\n            >\r\n              Einladung ablehnen\r\n            </button>\r\n            <button\r\n              class=\"float-right btn btn-sm ml-2 btn-outline-success\"\r\n              (click)=\"join(invitation)\"\r\n            >\r\n              Organisation beitreten\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <div\r\n          class=\"alert alert-secondary\"\r\n          *ngIf=\"\r\n            tenantRelations &&\r\n            tenantRelations.length === 0 &&\r\n            invitations &&\r\n            invitations.length === 0\r\n          \"\r\n        >\r\n          Sie sind noch keiner Organisation zugeordnet. Möchten Sie einen\r\n          <a [routerLink]=\"['/' + ROUTES.REGISTER_TENANT]\"\r\n            >neue Organisation erstellen</a\r\n          >?\r\n        </div>\r\n        <div class=\"alert alert-light\" *ngIf=\"!tenantRelations\">\r\n          <loading></loading>\r\n          Organisationen werden geladen ...\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ROUTES } from '../../../../../common/frontend.routes';\r\nimport Viewer from 'viewerjs';\r\n\r\n@Component({\r\n  selector: 'app-intro',\r\n  templateUrl: './intro.component.html',\r\n  styleUrls: ['./intro.component.scss'],\r\n})\r\nexport class IntroComponent implements OnInit {\r\n  ROUTES = ROUTES;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    const gallery = new Viewer(document.getElementById('imageGallery'), {\r\n      toolbar: false,\r\n      movable: false,\r\n    });\r\n  }\r\n\r\n  scrollToElement(elementId: string): void {\r\n    document.getElementById(elementId).scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'start',\r\n      inline: 'nearest',\r\n    });\r\n  }\r\n\r\n  showImage(imageID: string): void {\r\n    const viewer = new Viewer(document.getElementById(imageID), {\r\n      inline: false,\r\n      navbar: false,\r\n      toolbar: false,\r\n    });\r\n  }\r\n}\r\n","<h1>Willkommen bei <span class=\"highlighted\">plevents</span></h1>\r\n\r\n<a class=\"jump-to\" (click)=\"scrollToElement('about')\"\r\n  >Über <span class=\"highlighted\">plevents</span></a\r\n>\r\n<a class=\"jump-to\" (click)=\"scrollToElement('benefits')\">Vorteile</a>\r\n<a class=\"jump-to\" (click)=\"scrollToElement('howitworks')\">Funktionsweise</a>\r\n<a class=\"jump-to\" (click)=\"scrollToElement('demo')\">Demo</a>\r\n<a class=\"jump-to\" (click)=\"scrollToElement('price')\">Preis</a>\r\n<a class=\"jump-to\" (click)=\"scrollToElement('contract')\">Vertragslaufzeit</a>\r\n<a class=\"jump-to\" (click)=\"scrollToElement('faq')\">Häufige Fragen</a>\r\n<hr />\r\n<h2 id=\"about\">Über <span class=\"highlighted\">plevents</span></h2>\r\n<p>\r\n  Mit <span class=\"highlighted\">plevents</span> lassen sich Teilnehmer bei\r\n  Veranstaltungen kinderleicht verwalten.\r\n  <span class=\"highlighted\">plevents</span> stellt hierfür eine Plattform\r\n  bereit, über die Sie Events veröffentlichen, zu denen sich dann Teilnehmer\r\n  anmelden können.\r\n</p>\r\n<p>\r\n  Aufgrund der aktuellen Corona-Lage müssen dabei bestimmte Regelungen\r\n  eingehalten werden. <span class=\"highlighted\">plevents</span> unterstützt Sie\r\n  hier. Teilnehmer müssen bei der Anmeldung ihren Namen sowie Adress- und\r\n  Kontaktdaten hinterlegen. Diese Daten werden sicher gespeichert und\r\n  DSGVO-konform nach 4 Wochen automatisch gelöscht. Nur die für die\r\n  Verantstaltung verantwortlichen Personen haben Zugriff auf die Daten.\r\n</p>\r\n<p>\r\n  <b\r\n    >Damit findet <span class=\"highlighted\">plevents</span> eine gute Balance\r\n    zwischen lästiger Datenerfassung auf der einen und Sorge um Datenschutz auf\r\n    der anderen Seite.</b\r\n  >\r\n</p>\r\n<a [routerLink]=\"['/' + ROUTES.REGISTER_USER]\" class=\"btn btn-success\">\r\n  <i class=\"fas fa-chevron-right\" style=\"color: inherit\"></i>\r\n  Jetzt kostenlos registrieren und alle Funktionen testen\r\n</a>\r\n<hr />\r\n<h2 id=\"benefits\">Vorteile</h2>\r\n<p>\r\n  <span class=\"highlighted\">plevents</span> wurde speziell entwickelt, um\r\n  Anmelde- und Registrierprozesse für Events abzubilden. Der Fokus liegt dabei\r\n  auf sich wiederholenden, regelmäßig stattfindenen Events wie z.B. ein\r\n  wöchentlicher Volleyball-Kurs. <span class=\"highlighted\">plevents</span>\r\n  eignet sich aber auch hervorragend für die Verwaltung von kleinen und großen\r\n  Einzelevents:\r\n</p>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 col-lg-8 offset-lg-2\">\r\n    <ul class=\"no-bullets\">\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex\">\r\n            <i class=\"flex-grow-1 fas fa-lock fa-3x\"></i>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <h6>Datenschutz</h6>\r\n            <p>\r\n              In Zeiten digitaler Datenkraken ist es wichtiger denn je,\r\n              persönliche Daten zu schützen.\r\n            </p>\r\n            <p>\r\n              Ein Grundsatz von <span class=\"highlighted\">plevents</span> daher:\r\n              Sichere Datenspeicherung und garantierte Datenlöschung nach\r\n              DSGVO-Standard. Eine Weitergabe oder sonstige Verarbeitung der\r\n              personenbezogenen Daten findet <b>nicht</b> statt.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex\">\r\n            <i class=\"flex-grow-1 fas fa-lightbulb fa-3x\"></i>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <h6>Einfachheit</h6>\r\n            <p>\r\n              Die Prozesse von\r\n              <span class=\"highlighted\">plevents</span> verfolgen ein Ziel:\r\n              Einfachheit. Daher ist es sehr einfach, ein Einzelevent oder eine\r\n              Eventserie anzulegen. Und genauso einfach ist es, sich als\r\n              Teilnehmer zu einem Event anzumelden.\r\n              <span class=\"highlighted\">plevents</span>.de aufrufen, Event\r\n              wählen, Teilnehmerdaten eintragen, fertig!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex\">\r\n            <i class=\"flex-grow-1 fas fa-euro-sign fa-3x\"></i>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <h6>Preis</h6>\r\n            <p>\r\n              <span class=\"highlighted\">plevents</span> bietet viel - und das zu\r\n              einem sehr niedrigen Preis. Die Monatsgebühr liegt bei lediglich\r\n              15€ zzgl. gesetzlicher Mehrwertsteuer. Somit kostet\r\n              <span class=\"highlighted\">plevents</span> gerade einmal\r\n              <b>50 ct pro Tag</b>.\r\n            </p>\r\n            <p>\r\n              <b>Und das Beste:</b> Für Vereine und kirchliche Organisationen\r\n              können die Kosten für\r\n              <span class=\"highlighted\">plevents</span> (nach Prüfung) nochmals\r\n              deutlich sinken. Informieren Sie sich vollkommen unverbindlich,\r\n              eine Mail an\r\n              <a href=\"mailto:stefan.strobel@s4-consulting.de\"\r\n                >stefan.strobel@s4-consulting.de</a\r\n              >\r\n              genügt.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex\">\r\n            <i class=\"flex-grow-1 fas fa-calendar-alt fa-3x\"></i>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <h6>Anwendungsmöglichkeiten</h6>\r\n            <p>\r\n              Mit <span class=\"highlighted\">plevents</span> kann man vielerlei\r\n              Arten von Events verwalten. Dies fängt bei einer wöchentlichen\r\n              Veranstaltung im Verein an, geht über einmalige Events wie\r\n              Konzerte bis hin zur Erfassung von Restaurant-Besuchern.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex\">\r\n            <i class=\"flex-grow-1 fas fa-tools fa-3x\"></i>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <h6>Anpassbarkeit</h6>\r\n            <p>\r\n              Bei <span class=\"highlighted\">plevents</span> sind Events einer\r\n              Organisation zugeordnet. Eine Organisation bezeichnet einen\r\n              Verein, eine soziale Einrichtung oder ein Unternehmen. Alle Events\r\n              einer Organisation sind über eine eindeutige URL aufrufbar. Und\r\n              Sie können die URL selbst bestimmen!\r\n            </p>\r\n            <p>\r\n              Sollten Sie also Events für den Tennis Club Musterhausen verwalten\r\n              wollen, können Sie die URL\r\n              https://plevents.de/o/tennis-club-musterhausen festlegen -\r\n              vorausgesetzt, Ihnen ist noch niemand zuvorgekommen.\r\n            </p>\r\n            <p>\r\n              Neben einer schön lesbaren URL können Sie außerdem Ihr Logo\r\n              hinterlegen und sogar die Schriftfarbe anpassen, damit das\r\n              Erscheinungsbild perfekt zu Ihrer Organisation passt.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex\">\r\n            <i class=\"flex-grow-1 fas fa-universal-access fa-3x\"></i>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <h6>Vielfalt</h6>\r\n            <p>\r\n              Sie sind in mehreren Vereinen aktiv und möchten dort jeweils\r\n              Termine verwalten? Kein Problem. Bei\r\n              <span class=\"highlighted\">plevents</span> können Sie mit Ihrem\r\n              persönlichen Nutzerprofil mehrere Organisationen verwalten.\r\n            </p>\r\n            <p>\r\n              Sie können zudem weitere Mitglieder nominieren, um bei der Planung\r\n              und Durchführung der Events zu helfen. Das verteilt die Last auf\r\n              mehrere Schultern und Sie können dieselbe Anwendung für\r\n              verschiedene Vereine, Unternehmen oder Organisationen verwenden.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex\">\r\n            <i class=\"flex-grow-1 fas fa-smile-beam fa-3x\"></i>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <h6>Weniger Stress</h6>\r\n            <p>\r\n              Die Teilnehmer können sich selbst zu den Events anmelden,\r\n              zeitaufwändige Telefonanrufe oder Anmelde-Emails gehören damit der\r\n              Vergangenheit an.\r\n            </p>\r\n            <p>\r\n              Aber auch als Teilnehmer wird das Leben einfacher. Dank\r\n              Vorbefüllung kann die Anmeldung zum nächsten Event in\r\n              Sekundenschnelle erfolgen.\r\n            </p>\r\n            <p>\r\n              Und aufgrund der digitalen Funktionsweise gehört lästiger\r\n              Papierkram der Vergangenheit an!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<hr />\r\n<h2 id=\"howitworks\">Funktionsweise</h2>\r\n<p>\r\n  Die Verwendung von <span class=\"highlighted\">plevents</span> ist denkbar\r\n  einfach. Das Erstellen eines Events oder auch eines Serienevents bis\r\n  Jahresende dauert in der Regel 2 Minuten. Die Anmeldung als Teilnehmer ist\r\n  nach Auswahl der passenden Veranstaltung und Eingabe der persönlichen Daten\r\n  ebenfalls innerhalb von wenigen Momenten erledigt:\r\n</p>\r\n<div class=\"row\">\r\n  <div class=\"col-12 col-lg-8 offset-lg-2\">\r\n    <ul class=\"no-bullets\">\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex bold\">\r\n            <h4 class=\"flex-grow-1\">Schritt 1</h4>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <p>\r\n              In der Verwaltung von\r\n              <span class=\"highlighted\">plevents</span> legen Sie ein neues\r\n              Event an. Entweder als Einzelveranstaltung oder als Serienevent.\r\n              Serienevents finden wöchentlich zur gleichen Uhrzeit statt.\r\n            </p>\r\n            <p>\r\n              Sie legen für das Event ein (Start-)Datum, eine Uhrzeit, die\r\n              maximale Teilnehmerzahl und einen aussagekräftigen Namen fest.\r\n            </p>\r\n            <p><b>Das wars!</b> Das Event ist sofort freigeschaltet.</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex bold\">\r\n            <h4 class=\"flex-grow-1\">Schritt 2</h4>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <p>\r\n              Teilnehmer können sich online selbst anmelden. Dabei wird die von\r\n              Ihnen gesetzte maximale Teilnehmerzahl berücksichtigt.\r\n            </p>\r\n            <p>\r\n              Bei Serienevents zeigt\r\n              <span class=\"highlighted\">plevents</span> nur die Veranstaltungen\r\n              in der aktuellen und nächsten Woche. Das dient der\r\n              Übersichtlichkeit und der Aktualität der Daten.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex bold\">\r\n            <h4 class=\"flex-grow-1\">Schritt 3</h4>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <p>\r\n              Dieser Schritt ist optional. Im Vorfeld oder Nachgang des Events\r\n              können Sie die Teilnehmerliste online einsehen oder als PDF\r\n              herunterladen.\r\n            </p>\r\n            <p>\r\n              Damit können Sie z.B. die Teilnehmer vor Ort abhaken oder - auch\r\n              wenn das niemand hofft - nach einem positiven Corona-Fall die\r\n              anderen Teilnehmer verständigen.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"row\">\r\n          <div class=\"col-3 text-center align-items-center d-flex bold\">\r\n            <h4 class=\"flex-grow-1\">Schritt 4</h4>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <p>Hier müssen Sie nichts weiter tun.</p>\r\n            <p>\r\n              <span class=\"highlighted\">plevents</span> wird automatisch 4\r\n              Wochen nach der Veranstaltung alle Teilnehmerdaten automatisch\r\n              löschen. DSGVO-konform - aber einfach.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<hr />\r\n<h2 id=\"demo\">Demo</h2>\r\n<p>\r\n  Sie können sich gerne das Frontend für Teilnehmer anschauen. Unter\r\n  <a href=\"https://plevents.de/o/demo\" target=\"_blank\"\r\n    >https://plevents.de/o/demo</a\r\n  >\r\n  sehen Sie einige Test-Events. Dort können Sie erleben, wie einfach die\r\n  Registrierung als Teilnehmer zu einer Veranstaltung ist.\r\n</p>\r\n<p>\r\n  Auf den folgenden Screenshots können Sie zudem die Verwaltungsansicht\r\n  kennenlernen. Hier planen Sie Events, verwalten Teilnehmerlisten und können\r\n  IhrE Organisation verwalten. Dies inkludiert die Definition von Kategorien für\r\n  eine bessere Organisation sowie die Nominierung von weiteren Nutzern als\r\n  Administratoren oder Veranstaltungsleiter.\r\n</p>\r\n<div>\r\n  <ul id=\"imageGallery\">\r\n    <li>\r\n      <img src=\"assets/images/profile.png\" alt=\"Profildaten verwalten\" />\r\n      <br />\r\n      <label>Profildaten verwalten</label>\r\n    </li>\r\n    <li>\r\n      <img\r\n        src=\"assets/images/myorgs.png\"\r\n        alt=\"Übersicht über verbundene Organisationen\"\r\n      />\r\n      <br />\r\n      <label>Übersicht über verbundene Organisationen</label>\r\n    </li>\r\n    <li>\r\n      <img\r\n        src=\"assets/images/management.png\"\r\n        alt=\"Verwaltung einer Organisation\"\r\n      />\r\n      <br />\r\n      <label>Verwaltung einer Organisation</label>\r\n    </li>\r\n    <li>\r\n      <img\r\n        src=\"assets/images/eventplanner.png\"\r\n        alt=\"Planung der Veranstaltungen\"\r\n      />\r\n      <br />\r\n      <label>Planung der Veranstaltungen</label>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<hr />\r\n<h2 id=\"price\">Preis</h2>\r\n<p>\r\n  Es gibt natürlich bereits Programme am Markt, welche sich um das Thema\r\n  Event-Management und Teilnehmerverwaltung kümmern.\r\n  <span class=\"highlighted\">plevents</span> eignet sich besonders für die\r\n  Anwendungsfälle, in denen keine komplizierte Buchung mit Bezahlvorgängen\r\n  involviert ist.\r\n</p>\r\n<p>\r\n  Die Grundessenz von <span class=\"highlighted\">plevents</span> ist Einfachheit.\r\n  Das hört auch beim Preis nicht auf. Ein Produkt - ein Preis. Profitieren Sie\r\n  von eher sehr niedrigen und flexiblen Gebühr ohne versteckte Folgekosten oder\r\n  Vertragsfallen.\r\n</p>\r\n<div class=\"row\">\r\n  <div\r\n    class=\"col-12 col-md-10 offset-md-1 col-lg-6 offset-lg-0 col-xl-4 offset-xl-1\"\r\n  >\r\n    <div class=\"card highlight-card mb-3\">\r\n      <div class=\"card-header text-center\">\r\n        <h2>pauschal: 15 € / Monat</h2>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">Volle Transparenz beim Preis</h5>\r\n        <p class=\"card-text\">\r\n          Sie können flexibel Monatlizenzen kaufen, dabei fällt noch die jeweils\r\n          gesetzliche Mehrwertsteuer an. Ein langer Vertrag wird nicht\r\n          abgeschlossen, Sie entscheiden selbst, wie lange Sie\r\n          <span class=\"highlighted\">plevents</span> nutzen möchten.\r\n        </p>\r\n        <a [routerLink]=\"['/' + ROUTES.REGISTER_USER]\" class=\"btn btn-success\"\r\n          >Jetzt kostenlos testen</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"col-12 col-md-10 offset-md-1 col-lg-6 offset-lg-0 col-xl-4 offset-xl-2\"\r\n  >\r\n    <div class=\"card highlight-card mb-3\">\r\n      <div class=\"card-header text-center\">\r\n        <h2>Für Vereine & Kirchen</h2>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">Preis auf Anfrage</h5>\r\n        <p class=\"card-text\">\r\n          Für kirchliche Organisationen und Vereine gibt es unter Umständen eine\r\n          reduzierte Gebühr. Informieren Sie sich unverbindlich per Email bei\r\n          <a href=\"mailto:stefan.strobel@s4-consulting.de\"\r\n            >stefan.strobel@s4-consulting.de</a\r\n          >\r\n        </p>\r\n        <a [routerLink]=\"['/' + ROUTES.REGISTER_USER]\" class=\"btn btn-success\"\r\n          >Jetzt kostenlos testen</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<hr />\r\n<h2 id=\"contract\">Vertragslaufzeit</h2>\r\n<p>\r\n  Sollten Sie sich entscheiden,\r\n  <span class=\"highlighted\">plevents</span> einzusetzen, müssen Sie Ihre\r\n  Organisation aktivieren. Dies geschieht durch einen Bestellvorgang einer\r\n  Lizenz. Diese läuft jeweils einen Monat und verlängert sich automatisch um\r\n  einen weiteren Monat. Sie können jederzeit zum Ende des lizenzierten Monats\r\n  kündigen.\r\n</p>\r\n<p>\r\n  Wenn Sie wider Erwarten nicht zufrieden sein sollten, können Sie den Vertrag\r\n  jederzeit beenden oder auslaufen lassen. Ein Vertrag verlängert sich\r\n  automatisch um einen weiteren Monat, wenn Sie nicht vor Monatsende.\r\n</p>\r\n<p>Pro angebrochenen Kalenderonat wird die monatliche Nutzungsgebühr fällig.</p>\r\n\r\n<hr />\r\n<h2 id=\"faq\">Häufige Fragen</h2>\r\n<div class=\"accordion\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h2 class=\"mb-0\">\r\n        <button\r\n          class=\"btn btn-link btn-block text-left\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#faq1\"\r\n        >\r\n          Für wen ist <span class=\"highlighted\">plevents</span> gedacht?\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"faq1\" class=\"collapse multi-collapse\">\r\n      <div class=\"card-body\">\r\n        <span class=\"highlighted\">plevents</span> ist die ideale\r\n        Registrier-Plattform für Vereine, Organisationen und Unternehmen für\r\n        Veranstaltungen, zu denen sich die Teilnehmer im Vorfeld anmelden sollen\r\n        oder bei denen die Teilnehmer aufgrund der aktuellen Corona-Verordnung\r\n        ihre Adress- und Kontaktdaten hinterlegen müssen.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h2 class=\"mb-0\">\r\n        <button\r\n          class=\"btn btn-link btn-block text-left\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#faq2\"\r\n        >\r\n          Kann ich Events mit einer Bezahlfunktion anlegen?\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"faq2\" class=\"collapse multi-collapse\">\r\n      <div class=\"card-body\">\r\n        Zum aktuellen Zeitpunkt nein.\r\n        <span class=\"highlighted\">plevents</span> ist für eine einfache und\r\n        schnelle Anmeldung zu Veranstaltungen konzipiert. Die Einbindung einer\r\n        Bezahlfunktion würde zu viel Komplexität in den Registrierungsprozess\r\n        bringen.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h2 class=\"mb-0\">\r\n        <button\r\n          class=\"btn btn-link btn-block text-left collapsed\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#faq3\"\r\n        >\r\n          Welche Daten werden erfasst?\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"faq3\" class=\"collapse multi-collapse\">\r\n      <div class=\"card-body\">\r\n        Wenn Sie <span class=\"highlighted\">plevents</span> für Ihre Organisation\r\n        einsetzen möchten, registrieren Sie sich mit Ihrer Email-Adresse sowie\r\n        Ihrem Namen. Zusätzlich können Sie ein Logo Ihrer Organisation\r\n        hinterlegen sowie die Farbwahl setzen.\r\n        <span class=\"highlighted\">plevents</span> speichert zudem alle\r\n        relevanten Informationen zu Events, diese bestehen u.a. aus:\r\n        <ul>\r\n          <li>Veranstaltungsname</li>\r\n          <li>Datum / Wochentag</li>\r\n          <li>Uhrzeit</li>\r\n          <li>maximale Teilnehmerzahl</li>\r\n        </ul>\r\n        Von den Teilnehmern werden bei einer Registrierung zudem folgende\r\n        personenbezogene Daten erhoben:\r\n        <ul>\r\n          <li>Vorname</li>\r\n          <li>Nachname</li>\r\n          <li>Adresse</li>\r\n          <li>Email</li>\r\n          <li>Telefonnummer</li>\r\n        </ul>\r\n        Alle Daten werden sicher auf Servern in einem deutschen Rechenzentrum\r\n        gespeichert. Es erfolgt ausdrücklich <b>keine</b> weitere\r\n        Datenverarbeitung oder -weitergabe.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h2 class=\"mb-0\">\r\n        <button\r\n          class=\"btn btn-link btn-block text-left collapsed\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#faq4\"\r\n        >\r\n          Was kostet <span class=\"highlighted\">plevents</span>?\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"faq4\" class=\"collapse multi-collapse\">\r\n      <div class=\"card-body\">\r\n        <span class=\"highlighted\">plevents</span> kostet pro Monat 15€ netto\r\n        zzgl. gesetzlicher Mehrwertsteuer. Für Vereine und kirchliche\r\n        Organisationen ist <span class=\"highlighted\">plevents</span> kann es\r\n        nach Absprache einen reduzierten Preis geben.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h2 class=\"mb-0\">\r\n        <button\r\n          class=\"btn btn-link btn-block text-left collapsed\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#faq5\"\r\n        >\r\n          Kann ich <span class=\"highlighted\">plevents</span> testen?\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"faq5\" class=\"collapse multi-collapse\">\r\n      <div class=\"card-body\">\r\n        Ja, Sie können sich jederzeit ein kostenloses Nutzerprofil erstellen und\r\n        eine Test-Organisation einrichten. Somit lernen Sie alle Funktionen von\r\n        <span class=\"highlighted\">plevents</span> kennen und können dann\r\n        entscheiden, ob Sie es weiterhin einsetzen möchten.\r\n        <br />\r\n        <a [routerLink]=\"['/' + ROUTES.REGISTER_USER]\" class=\"btn btn-success\">\r\n          <i class=\"fas fa-chevron-right\" style=\"color: inherit\"></i>\r\n          Jetzt kostenlos registrieren und alle Funktionen testen\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h2 class=\"mb-0\">\r\n        <button\r\n          class=\"btn btn-link btn-block text-left collapsed\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#faq6\"\r\n        >\r\n          Wie sind Vertragslaufzeit und Kündigung geregelt?\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"faq6\" class=\"collapse multi-collapse\">\r\n      <div class=\"card-body\">\r\n        <span class=\"highlighted\">plevents</span> ist nicht nur günstig, sondern\r\n        auch fair. Daher gilt:\r\n        <ul>\r\n          <li>\r\n            <b>monatliche Vertragslaufzeit</b> - kein langfristiges Risiko\r\n          </li>\r\n          <li><b>jederzeit kündbar</b> - bis 2 Tage zum Monatsende</li>\r\n        </ul>\r\n        <br />\r\n        <a [routerLink]=\"['/' + ROUTES.REGISTER_USER]\" class=\"btn btn-success\">\r\n          <i class=\"fas fa-chevron-right\" style=\"color: inherit\"></i>\r\n          Jetzt kostenlos registrieren und alle Funktionen testen\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { Tenant, TenantAdapter } from './tenant';\r\n\r\nexport class Invitation {\r\n  id: string;\r\n  email: string;\r\n  tenantId: string;\r\n  tenant: Tenant;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InvitationAdapter implements Adapter<Invitation> {\r\n  constructor(private tenantAdapter: TenantAdapter) {}\r\n  adapt(item: any): Invitation {\r\n    const invitation = new Invitation();\r\n    invitation.id = item.id;\r\n    invitation.email = item.email;\r\n    invitation.tenantId = item.tenantId;\r\n    if (item.tenant) {\r\n      invitation.tenant = this.tenantAdapter.adapt(item.tenant);\r\n    }\r\n    return invitation;\r\n  }\r\n}\r\n","import { LoginComponent } from './views/login/login.component';\r\nimport { DashboardComponent } from './views/dashboard/dashboard.component';\r\nimport { BasicAuthInterceptor } from './helpers/basic-auth.interceptor';\r\nimport { ErrorInterceptor } from './helpers/error.interceptor';\r\nimport { AuthGuard } from './helpers/auth.guard';\r\nimport { EventsComponent } from './views/events/events.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TenantComponent } from './views/tenant/tenant.component';\r\nimport { ErrorComponent } from './views/error/error.component';\r\nimport { RegistrationComponent } from './views/registration/registration.component';\r\nimport { TenantRegistrationComponent } from './views/tenant-registration/tenant-registration.component';\r\nimport { ImprintComponent } from './views/imprint/imprint.component';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\nimport { LegalComponent } from './views/legal/legal.component';\r\nimport { TenantGuard } from './helpers/tenant.guard';\r\nimport { ROLE } from '../../../common/tenant-relation';\r\nimport { CompleteRegistrationComponent } from './views/complete-registration/complete-registration.component';\r\nimport { PasswordResetComponent } from './views/password-reset/password-reset.component';\r\nimport { PasswordForgottenComponent } from './views/password-forgotten/password-forgotten.component';\r\nimport { ROUTES } from '../../../common/frontend.routes';\r\nimport { IntroComponent } from './views/intro/intro.component';\r\nimport { MyAccountsComponent } from './views/my-accounts/my-accounts.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ROUTES.HOME,\r\n    component: IntroComponent,\r\n  },\r\n  {\r\n    path: ROUTES.LOGIN,\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: ROUTES.REGISTER_TENANT,\r\n    component: TenantRegistrationComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: ROUTES.PASSWORD_FORGOTTEN,\r\n    component: PasswordForgottenComponent,\r\n  },\r\n  {\r\n    path: ROUTES.PASSWORD_RESET,\r\n    component: PasswordResetComponent,\r\n  },\r\n  {\r\n    path: ROUTES.REGISTER_USER,\r\n    component: RegistrationComponent,\r\n  },\r\n  {\r\n    path: 'fehler/:errortype',\r\n    component: ErrorComponent,\r\n  },\r\n  {\r\n    path: ROUTES.IMPRINT,\r\n    component: ImprintComponent,\r\n  },\r\n  {\r\n    path: ROUTES.LEGAL,\r\n    component: LegalComponent,\r\n  },\r\n  {\r\n    path: ROUTES.REGISTER_USER_FINISH,\r\n    component: CompleteRegistrationComponent,\r\n  },\r\n  {\r\n    path: ROUTES.MY_TENANTS,\r\n    component: MyAccountsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: ROUTES.PROFILE,\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'o/:tenantPath',\r\n    children: [\r\n      {\r\n        path: ROUTES.LOGIN,\r\n        component: LoginComponent,\r\n      },\r\n      {\r\n        path: ROUTES.TENANT_PLANNER,\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard, TenantGuard],\r\n      },\r\n      {\r\n        path: ROUTES.TENANT_MANAGEMENT,\r\n        component: TenantComponent,\r\n        canActivate: [AuthGuard, TenantGuard],\r\n        data: { role: ROLE.ADMIN },\r\n      },\r\n      {\r\n        path: ROUTES.TENANT_EVENTS,\r\n        component: EventsComponent,\r\n      },\r\n      {\r\n        path: ROUTES.REGISTER_USER,\r\n        component: RegistrationComponent,\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: ROUTES.TENANT_EVENTS,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ROUTES.HOME,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { clone } from 'lodash';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: User = null;\r\n  nameForm: FormGroup = new FormGroup({\r\n    name: new FormControl('', Validators.required),\r\n  });\r\n  passwordForm: FormGroup = new FormGroup({\r\n    oldPassword: new FormControl('', Validators.required),\r\n    newPassword: new FormControl('', Validators.required),\r\n  });\r\n  operationOngoing = {\r\n    nameChange: false,\r\n    passwordChange: false,\r\n    accountDeletion: false,\r\n  };\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthenticationService,\r\n    private notification: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getProfile().subscribe((user: User) => {\r\n      this.user = user;\r\n      this.authService.update(this.user);\r\n      this.nameForm.get('name').setValue(this.user.name);\r\n    });\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    if (this.nameForm.contains(formControlName)) {\r\n      return (\r\n        this.nameForm.get(formControlName).invalid &&\r\n        this.nameForm.get(formControlName).touched\r\n      );\r\n    }\r\n    if (this.passwordForm.contains(formControlName)) {\r\n      return (\r\n        this.passwordForm.get(formControlName).invalid &&\r\n        this.passwordForm.get(formControlName).touched\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  updateName(): void {\r\n    if (this.nameForm.invalid) {\r\n      this.nameForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.operationOngoing.nameChange = true;\r\n    const updatePayload = clone(this.user);\r\n    updatePayload.name = this.nameForm.get('name').value;\r\n    this.userService.updateProfile(updatePayload).subscribe(\r\n      (updatedUser: User) => {\r\n        this.user = updatedUser;\r\n        this.authService.update(this.user);\r\n        this.notification.success('Name geändert');\r\n        this.operationOngoing.nameChange = false;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.notification.error('Es trat ein Fehler auf');\r\n        this.operationOngoing.nameChange = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  changePassword(): void {\r\n    if (this.passwordForm.invalid) {\r\n      this.passwordForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.operationOngoing.passwordChange = true;\r\n    this.userService\r\n      .updatePassword(\r\n        this.passwordForm.get('oldPassword').value,\r\n        this.passwordForm.get('newPassword').value\r\n      )\r\n      .subscribe(\r\n        () => {\r\n          this.notification.success('Passwort geändert');\r\n          this.authService.update(\r\n            this.user,\r\n            this.passwordForm.get('newPassword').value\r\n          );\r\n          this.operationOngoing.passwordChange = false;\r\n          this.passwordForm.reset();\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.notification.error('Es trat ein Fehler auf');\r\n          this.operationOngoing.passwordChange = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteProfile(): void {\r\n    this.notification.confirm({\r\n      title: 'Account löschen?',\r\n      text:\r\n        'Möchten Sie wirklich Ihr persönliches Profil löschen? Alle Daten werden sofort gelöscht. Diese Aktion kann nicht rückgängig gemacht werden!',\r\n      yesButtonClass: 'btn-danger',\r\n      yesButtonText: 'Löschen',\r\n      yesCallback: () => {\r\n        this.operationOngoing.accountDeletion = true;\r\n        this.userService.deleteProfile().subscribe(\r\n          () => {\r\n            this.notification.success('Ihr Profil wurde gelöscht');\r\n            this.authService.logout();\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            this.notification.error('Es trat ein Fehler auf');\r\n            this.operationOngoing.accountDeletion = false;\r\n          }\r\n        );\r\n      },\r\n    });\r\n  }\r\n}\r\n","<h2>Profilverwaltung</h2>\r\n<p>\r\n  Verwalten Sie hier Ihren Namen, ändern Sie das Passwort oder löschen Sie Ihr\r\n  Nutzerprofil.\r\n</p>\r\n\r\n<hr />\r\n\r\n<!-- two-column layout -->\r\n<div class=\"row\">\r\n  <div class=\"col-12 col-lg-6 col-xl-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h4>Name</h4>\r\n        <p>\r\n          Ihr Name wird in der Navigationsleiste angezeigt und ist auch in der\r\n          Verwaltung der Organisationen für alle anderen Administratoren\r\n          sichtbar. Ihr Name wird allerdings nicht auf öffentlich zugänglichen\r\n          Seiten angezeigt.\r\n        </p>\r\n        <form [formGroup]=\"nameForm\" *ngIf=\"user\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\" [ngClass]=\"{ invalid: isInvalid('name') }\">\r\n              <label for=\"name\">Name *</label>\r\n              <br />\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                formControlName=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 text-right mt-3\">\r\n              <button\r\n                class=\"btn btn-outline-success\"\r\n                (click)=\"updateName()\"\r\n                [disabled]=\"operationOngoing.nameChange\"\r\n              >\r\n                <loading\r\n                  *ngIf=\"operationOngoing.nameChange\"\r\n                  textClass=\"text-success\"\r\n                ></loading>\r\n                Speichern\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"text-center\">\r\n          <loading *ngIf=\"!user\"></loading>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 mt-5 mb-5\">\r\n        <h4>Passwort</h4>\r\n        <p>\r\n          Ändern Sie hier, falls gewünscht, Ihr Passwort. Vergeben Sie dazu ein\r\n          neues Passwort und bestätigen Sie die Änderung durch Eingabe Ihres\r\n          bisherigen / aktuellen Passworts.\r\n        </p>\r\n        <form [formGroup]=\"passwordForm\" *ngIf=\"user\">\r\n          <div class=\"row\">\r\n            <div\r\n              class=\"col-12 col-md-6\"\r\n              [ngClass]=\"{ invalid: isInvalid('oldPassword') }\"\r\n            >\r\n              <label for=\"oldPassword\">Altes Passwort *</label>\r\n              <br />\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"oldPassword\"\r\n                type=\"password\"\r\n                formControlName=\"oldPassword\"\r\n              />\r\n            </div>\r\n            <div\r\n              class=\"col-12 col-md-6\"\r\n              [ngClass]=\"{ invalid: isInvalid('newPassword') }\"\r\n            >\r\n              <label for=\"newPassword\">Neues Passwort *</label>\r\n              <br />\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"newPassword\"\r\n                type=\"password\"\r\n                formControlName=\"newPassword\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 text-right mt-3\">\r\n              <button\r\n                class=\"btn btn-outline-success\"\r\n                (click)=\"changePassword()\"\r\n                [disabled]=\"operationOngoing.passwordChange\"\r\n              >\r\n                <loading\r\n                  *ngIf=\"operationOngoing.passwordChange\"\r\n                  textClass=\"text-success\"\r\n                ></loading>\r\n                Passwort ändern\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"text-center\">\r\n          <loading *ngIf=\"!user\"></loading>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 col-lg-6 col-xl-5 offset-xl-2\">\r\n    <h4>Löschung</h4>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        Falls Sie Ihr persönliches Profil nicht mehr benötigen, können Sie hier\r\n        jegliche personenbezogene Daten löschen. Hierzu gehören:\r\n        <ul>\r\n          <li>Ihr Name</li>\r\n          <li>Ihre Email-Adresse</li>\r\n          <li>alle Verbindungen zu plevents Organisationen</li>\r\n        </ul>\r\n        Die Löschung erfolgt sofort und kann <b>nicht</b> rückgängig gemacht\r\n        werden!\r\n      </div>\r\n      <div class=\"col-12 text-right\" *ngIf=\"user\">\r\n        <button\r\n          class=\"btn btn-outline-danger\"\r\n          (click)=\"deleteProfile()\"\r\n          [disabled]=\"operationOngoing.accountDeletion\"\r\n        >\r\n          <loading\r\n            *ngIf=\"operationOngoing.accountDeletion\"\r\n            textClass=\"text-danger\"\r\n          ></loading>\r\n          Mein Profil löschen\r\n        </button>\r\n      </div>\r\n      <div class=\"col-12 text-center\">\r\n        <loading *ngIf=\"!user\"></loading>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Event } from './event';\r\n\r\nexport class Week {\r\n  number: number;\r\n  startOfWeek: moment.Moment;\r\n  endOfWeek: moment.Moment;\r\n  events: Event[] = new Array<Event>();\r\n\r\n  constructor(number: number) {\r\n    this.number = number;\r\n  }\r\n}\r\n","import { ParticipantI } from '../../../../common/participant';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\n\r\nexport class Participant implements ParticipantI {\r\n  id?: number;\r\n  email: string;\r\n  phone: string;\r\n  firstname: string;\r\n  lastname: string;\r\n  name: string;\r\n  street: string;\r\n  zip: string;\r\n  city: string;\r\n  eventId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ParticipantAdapter implements Adapter<Participant> {\r\n  adapt(item: any): Participant {\r\n    const participant = new Participant();\r\n    participant.id = item.id;\r\n    participant.firstname = item.firstname;\r\n    participant.lastname = item.lastname;\r\n    participant.name = item.name;\r\n    participant.email = item.email;\r\n    participant.phone = item.phone;\r\n    participant.street = item.street;\r\n    participant.zip = item.zip;\r\n    participant.city = item.city;\r\n    participant.eventId = item.eventId;\r\n    return participant;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}