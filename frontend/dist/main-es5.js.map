{"version":3,"sources":["webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/emails/emails.component.ts","webpack:///src/app/components/emails/emails.component.html","webpack:///src/app/components/error/error.component.ts","webpack:///src/app/components/error/error.component.html","webpack:///src/app/components/events/events.component.ts","webpack:///src/app/components/events/events.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/registration/registration.component.ts","webpack:///src/app/components/registration/registration.component.html","webpack:///src/app/components/tenant-registration/tenant-registration.component.ts","webpack:///src/app/components/tenant-registration/tenant-registration.component.html","webpack:///src/app/components/tenant/tenant.component.ts","webpack:///src/app/components/tenant/tenant.component.html","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/helpers/basic-auth.interceptor.ts","webpack:///src/app/helpers/error.interceptor.ts","webpack:///src/app/models/email.ts","webpack:///src/app/models/event.ts","webpack:///src/app/models/participant.ts","webpack:///src/app/models/tenant.ts","webpack:///src/app/models/user.ts","webpack:///src/app/models/week.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/email.service.ts","webpack:///src/app/services/event.service.ts","webpack:///src/app/services/tenant.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","webpackEmptyAsyncContext","Promise","then","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","provide","useClass","multi","forRoot","imports","providers","AppComponent","authenticationService","tenantService","tenant","navbarLogo","currentTenant","subscribe","logo","userValue","name","logout","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","DashboardComponent","eventService","route","router","weeks","Array","uniqueEvents","timeColumns","time","events","match","event","displayTime","getByPath","snapshot","params","tenantPath","error","status","navigate","loadAllEvents","load","createNewEventForm","isoWeek","getEvents","allEvents","unique","push","today","startOfCurrentWeek","clone","startOf","endOfCurrentWeek","endOf","kw","week","weekStart","weekEnd","subtract","add","date","isBetween","undefined","newEventForm","required","fromDate","maxSeats","valid","markAllAsTouched","m","get","value","hours","parseInt","split","minutes","currentWeek","observables","cw","targetClass","toDate","createEvent","currentTenantValue","formControlName","invalid","touched","disabled","setDisabled","uniqueEventSeriesIndex","confirm","eventToDelete","eventsToDelete","weekDay","deleteEvent","downloadPdf","addNewEvent","EmailsComponent","emailService","emails","getEmails","newEmailForm","email","deleteEmail","mail","createEmail","address","reset","addEmail","ErrorComponent","type","errortype","errorTitle","errorMessage","EventsComponent","eventsInTimeframe","selectedEvent","successfullyRegistered","classOptions","selectedClass","consentText","createRegisterForm","loadEvents","length","registerForm","contains","addControl","removeControl","eventsInNextWeek","join","sort","unshift","className","markAsUntouched","indexOf","start","end","phone","street","zip","city","free","takenSeats","participant","eventId","addParticipant","LoginComponent","loading","submitted","returnUrl","queryParams","loginForm","username","password","login","data","onSubmit","RegistrationComponent","success","registrationForm","user","addUser","createdUser","active","TenantRegistrationComponent","currentSubscription","pathCheck","pathTaken","maxLength","pattern","checkPath","tenantToCreate","create","TenantComponent","authService","userService","users","logoValidationError","console","log","tenantForm","tenantSubscription","setValue","getUsers","unsubscribe","activate","activatedUser","index","splice","updatedTenant","pathChanged","update","alert","desiredNewPath","newLogo","newLogoFile","target","files","kiloBytes","Math","round","size","fileSize","toFixed","myReader","FileReader","onloadend","result","readAsDataURL","document","getElementById","click","selectNewLogo","setNewLogo","updateTenant","deleteTenant","AuthGuard","state","url","providedIn","BasicAuthInterceptor","request","next","isLoggedIn","authdata","isApiUrl","startsWith","apiUrl","setHeaders","Authorization","handle","ErrorInterceptor","pipe","err","message","statusText","Email","EmailAdapter","item","Event","format","now","isAfter","identicalEvent","uniqueEvent","EventAdapter","isoWeekday","Participant","ParticipantAdapter","Tenant","TenantAdapter","sanitizer","t","bypassSecurityTrustResourceUrl","User","UserAdapter","u","tenantId","Week","number","AuthenticationService","http","userSubject","JSON","parse","localStorage","getItem","asObservable","post","loggedInUser","window","btoa","setItem","stringify","removeItem","EmailService","adapter","adapt","EventService","participantAdapter","put","headers","set","downloadLink","responseType","pdfBlob","blob","Blob","TenantService","tenantAdapter","userAdapter","checkPathSubscription","currentTenantSubject","pathToCheck","checkResultReference","potentiallyExistingTenant","UserService","userId","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,UAAIA,GAAG,GAAG;AACT,gBAAQ,oCADC;AAET,mBAAW,oCAFF;AAGT,gBAAQ,oCAHC;AAIT,mBAAW,uCAJF;AAKT,sBAAc,uCALL;AAMT,mBAAW,uCANF;AAOT,sBAAc,uCAPL;AAQT,mBAAW,uCARF;AAST,sBAAc,uCATL;AAUT,mBAAW,uCAVF;AAWT,sBAAc,uCAXL;AAYT,mBAAW,uCAZF;AAaT,sBAAc,uCAbL;AAcT,mBAAW,uCAdF;AAeT,sBAAc,uCAfL;AAgBT,mBAAW,oCAhBF;AAiBT,gBAAQ,oCAjBC;AAkBT,mBAAW,oCAlBF;AAmBT,gBAAQ,oCAnBC;AAoBT,mBAAW,oCApBF;AAqBT,gBAAQ,oCArBC;AAsBT,mBAAW,oCAtBF;AAuBT,gBAAQ,oCAvBC;AAwBT,mBAAW,oCAxBF;AAyBT,gBAAQ,oCAzBC;AA0BT,mBAAW,oCA1BF;AA2BT,gBAAQ,oCA3BC;AA4BT,mBAAW,oCA5BF;AA6BT,gBAAQ,oCA7BC;AA8BT,mBAAW,oCA9BF;AA+BT,gBAAQ,oCA/BC;AAgCT,mBAAW,oCAhCF;AAiCT,gBAAQ,oCAjCC;AAkCT,mBAAW,oCAlCF;AAmCT,gBAAQ,oCAnCC;AAoCT,mBAAW,oCApCF;AAqCT,gBAAQ,oCArCC;AAsCT,mBAAW,oCAtCF;AAuCT,gBAAQ,oCAvCC;AAwCT,mBAAW,oCAxCF;AAyCT,gBAAQ,oCAzCC;AA0CT,mBAAW,oCA1CF;AA2CT,gBAAQ,oCA3CC;AA4CT,mBAAW,uCA5CF;AA6CT,sBAAc,uCA7CL;AA8CT,mBAAW,uCA9CF;AA+CT,sBAAc,uCA/CL;AAgDT,mBAAW,oCAhDF;AAiDT,gBAAQ,oCAjDC;AAkDT,mBAAW,oCAlDF;AAmDT,gBAAQ,oCAnDC;AAoDT,mBAAW,oCApDF;AAqDT,mBAAW,uCArDF;AAsDT,sBAAc,uCAtDL;AAuDT,mBAAW,uCAvDF;AAwDT,sBAAc,uCAxDL;AAyDT,mBAAW,uCAzDF;AA0DT,sBAAc,uCA1DL;AA2DT,mBAAW,uCA3DF;AA4DT,sBAAc,uCA5DL;AA6DT,mBAAW,uCA7DF;AA8DT,sBAAc,uCA9DL;AA+DT,mBAAW,uCA/DF;AAgET,sBAAc,uCAhEL;AAiET,mBAAW,uCAjEF;AAkET,sBAAc,uCAlEL;AAmET,mBAAW,uCAnEF;AAoET,sBAAc,uCApEL;AAqET,gBAAQ,oCArEC;AAsET,mBAAW,oCAtEF;AAuET,gBAAQ,oCAvEC;AAwET,mBAAW,uCAxEF;AAyET,sBAAc,uCAzEL;AA0ET,mBAAW,uCA1EF;AA2ET,sBAAc,uCA3EL;AA4ET,mBAAW,oCA5EF;AA6ET,gBAAQ,oCA7EC;AA8ET,mBAAW,oCA9EF;AA+ET,gBAAQ,oCA/EC;AAgFT,mBAAW,oCAhFF;AAiFT,gBAAQ,oCAjFC;AAkFT,mBAAW,oCAlFF;AAmFT,gBAAQ,oCAnFC;AAoFT,mBAAW,oCApFF;AAqFT,iBAAS,qCArFA;AAsFT,oBAAY,qCAtFH;AAuFT,gBAAQ,oCAvFC;AAwFT,mBAAW,oCAxFF;AAyFT,gBAAQ,oCAzFC;AA0FT,mBAAW,uCA1FF;AA2FT,sBAAc,uCA3FL;AA4FT,mBAAW,uCA5FF;AA6FT,sBAAc,uCA7FL;AA8FT,mBAAW,oCA9FF;AA+FT,gBAAQ,oCA/FC;AAgGT,mBAAW,oCAhGF;AAiGT,gBAAQ,oCAjGC;AAkGT,mBAAW,oCAlGF;AAmGT,gBAAQ,oCAnGC;AAoGT,mBAAW,oCApGF;AAqGT,gBAAQ,oCArGC;AAsGT,mBAAW,oCAtGF;AAuGT,sBAAc,0CAvGL;AAwGT,yBAAiB,0CAxGR;AAyGT,sBAAc,0CAzGL;AA0GT,yBAAiB,0CA1GR;AA2GT,gBAAQ,oCA3GC;AA4GT,mBAAW,oCA5GF;AA6GT,gBAAQ,oCA7GC;AA8GT,mBAAW,oCA9GF;AA+GT,gBAAQ,oCA/GC;AAgHT,mBAAW,oCAhHF;AAiHT,gBAAQ,oCAjHC;AAkHT,mBAAW,oCAlHF;AAmHT,gBAAQ,oCAnHC;AAoHT,mBAAW,oCApHF;AAqHT,mBAAW,uCArHF;AAsHT,sBAAc,uCAtHL;AAuHT,gBAAQ,oCAvHC;AAwHT,mBAAW,oCAxHF;AAyHT,gBAAQ,oCAzHC;AA0HT,mBAAW,oCA1HF;AA2HT,gBAAQ,oCA3HC;AA4HT,mBAAW,uCA5HF;AA6HT,sBAAc,uCA7HL;AA8HT,mBAAW,oCA9HF;AA+HT,gBAAQ,oCA/HC;AAgIT,mBAAW,oCAhIF;AAiIT,gBAAQ,oCAjIC;AAkIT,mBAAW,oCAlIF;AAmIT,gBAAQ,oCAnIC;AAoIT,mBAAW,oCApIF;AAqIT,gBAAQ,oCArIC;AAsIT,mBAAW,oCAtIF;AAuIT,gBAAQ,oCAvIC;AAwIT,mBAAW,oCAxIF;AAyIT,gBAAQ,oCAzIC;AA0IT,mBAAW,oCA1IF;AA2IT,gBAAQ,oCA3IC;AA4IT,mBAAW,oCA5IF;AA6IT,gBAAQ,oCA7IC;AA8IT,mBAAW,oCA9IF;AA+IT,gBAAQ,oCA/IC;AAgJT,mBAAW,oCAhJF;AAiJT,gBAAQ,oCAjJC;AAkJT,mBAAW,oCAlJF;AAmJT,gBAAQ,oCAnJC;AAoJT,mBAAW,oCApJF;AAqJT,gBAAQ,oCArJC;AAsJT,mBAAW,oCAtJF;AAuJT,gBAAQ,oCAvJC;AAwJT,mBAAW,oCAxJF;AAyJT,gBAAQ,oCAzJC;AA0JT,mBAAW,oCA1JF;AA2JT,gBAAQ,oCA3JC;AA4JT,mBAAW,oCA5JF;AA6JT,gBAAQ,oCA7JC;AA8JT,mBAAW,oCA9JF;AA+JT,gBAAQ,oCA/JC;AAgKT,mBAAW,oCAhKF;AAiKT,gBAAQ,oCAjKC;AAkKT,mBAAW,oCAlKF;AAmKT,gBAAQ,oCAnKC;AAoKT,mBAAW,oCApKF;AAqKT,gBAAQ,oCArKC;AAsKT,mBAAW,uCAtKF;AAuKT,sBAAc,uCAvKL;AAwKT,mBAAW,oCAxKF;AAyKT,gBAAQ,oCAzKC;AA0KT,mBAAW,oCA1KF;AA2KT,gBAAQ,oCA3KC;AA4KT,mBAAW,oCA5KF;AA6KT,gBAAQ,oCA7KC;AA8KT,mBAAW,oCA9KF;AA+KT,gBAAQ,oCA/KC;AAgLT,mBAAW,oCAhLF;AAiLT,gBAAQ,oCAjLC;AAkLT,mBAAW,uCAlLF;AAmLT,sBAAc,uCAnLL;AAoLT,mBAAW,oCApLF;AAqLT,gBAAQ,oCArLC;AAsLT,mBAAW,oCAtLF;AAuLT,oBAAY,wCAvLH;AAwLT,uBAAe,wCAxLN;AAyLT,mBAAW,uCAzLF;AA0LT,sBAAc,uCA1LL;AA2LT,gBAAQ,oCA3LC;AA4LT,mBAAW,oCA5LF;AA6LT,gBAAQ,oCA7LC;AA8LT,mBAAW,uCA9LF;AA+LT,sBAAc,uCA/LL;AAgMT,mBAAW,oCAhMF;AAiMT,gBAAQ,oCAjMC;AAkMT,mBAAW,oCAlMF;AAmMT,gBAAQ,oCAnMC;AAoMT,mBAAW,oCApMF;AAqMT,gBAAQ,oCArMC;AAsMT,mBAAW,oCAtMF;AAuMT,gBAAQ,oCAvMC;AAwMT,mBAAW,oCAxMF;AAyMT,gBAAQ,oCAzMC;AA0MT,mBAAW,oCA1MF;AA2MT,gBAAQ,oCA3MC;AA4MT,mBAAW,oCA5MF;AA6MT,gBAAQ,oCA7MC;AA8MT,mBAAW,oCA9MF;AA+MT,gBAAQ,oCA/MC;AAgNT,mBAAW,oCAhNF;AAiNT,gBAAQ,oCAjNC;AAkNT,qBAAa,yCAlNJ;AAmNT,wBAAgB,yCAnNP;AAoNT,mBAAW,oCApNF;AAqNT,gBAAQ,oCArNC;AAsNT,mBAAW,oCAtNF;AAuNT,gBAAQ,oCAvNC;AAwNT,mBAAW,oCAxNF;AAyNT,gBAAQ,oCAzNC;AA0NT,mBAAW,oCA1NF;AA2NT,gBAAQ,oCA3NC;AA4NT,mBAAW,oCA5NF;AA6NT,gBAAQ,oCA7NC;AA8NT,mBAAW,oCA9NF;AA+NT,iBAAS,qCA/NA;AAgOT,oBAAY,qCAhOH;AAiOT,gBAAQ,oCAjOC;AAkOT,mBAAW,oCAlOF;AAmOT,gBAAQ,oCAnOC;AAoOT,mBAAW,oCApOF;AAqOT,gBAAQ,oCArOC;AAsOT,mBAAW,oCAtOF;AAuOT,mBAAW,uCAvOF;AAwOT,sBAAc,uCAxOL;AAyOT,iBAAS,qCAzOA;AA0OT,oBAAY,qCA1OH;AA2OT,gBAAQ,oCA3OC;AA4OT,mBAAW,oCA5OF;AA6OT,iBAAS,qCA7OA;AA8OT,oBAAY,qCA9OH;AA+OT,iBAAS,qCA/OA;AAgPT,sBAAc,0CAhPL;AAiPT,yBAAiB,0CAjPR;AAkPT,oBAAY,qCAlPH;AAmPT,mBAAW,uCAnPF;AAoPT,sBAAc,uCApPL;AAqPT,gBAAQ,oCArPC;AAsPT,mBAAW,oCAtPF;AAuPT,gBAAQ,oCAvPC;AAwPT,mBAAW,oCAxPF;AAyPT,gBAAQ,oCAzPC;AA0PT,qBAAa,yCA1PJ;AA2PT,wBAAgB,yCA3PP;AA4PT,mBAAW,oCA5PF;AA6PT,gBAAQ,oCA7PC;AA8PT,mBAAW,oCA9PF;AA+PT,sBAAc,0CA/PL;AAgQT,yBAAiB,0CAhQR;AAiQT,gBAAQ,oCAjQC;AAkQT,mBAAW,oCAlQF;AAmQT,mBAAW,uCAnQF;AAoQT,sBAAc,uCApQL;AAqQT,mBAAW,uCArQF;AAsQT,sBAAc,uCAtQL;AAuQT,mBAAW,uCAvQF;AAwQT,sBAAc,uCAxQL;AAyQT,mBAAW,uCAzQF;AA0QT,sBAAc;AA1QL,OAAV;;AA8QA,eAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC5B,YAAIC,EAAE,GAAGC,qBAAqB,CAACF,GAAD,CAA9B;AACA,eAAOG,mBAAmB,CAACF,EAAD,CAA1B;AACA;;AACD,eAASC,qBAAT,CAA+BF,GAA/B,EAAoC;AACnC,YAAG,CAACG,mBAAmB,CAACC,CAApB,CAAsBN,GAAtB,EAA2BE,GAA3B,CAAJ,EAAqC;AACpC,cAAIK,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBN,GAAzB,GAA+B,GAAzC,CAAR;AACAK,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA;;AACD,eAAOP,GAAG,CAACE,GAAD,CAAV;AACA;;AACDD,oBAAc,CAACS,IAAf,GAAsB,SAASC,kBAAT,GAA8B;AACnD,eAAOC,MAAM,CAACF,IAAP,CAAYV,GAAZ,CAAP;AACA,OAFD;;AAGAC,oBAAc,CAACY,OAAf,GAAyBT,qBAAzB;AACAU,YAAM,CAACC,OAAP,GAAiBd,cAAjB;AACAA,oBAAc,CAACE,EAAf,GAAoB,wDAApB;;;;;;;;;;;;;;AC/RA,eAASa,wBAAT,CAAkCd,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOe,OAAO,CAACJ,OAAR,GAAkBK,IAAlB,CAAuB,YAAW;AACxC,cAAIX,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBN,GAAzB,GAA+B,GAAzC,CAAR;AACAK,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDS,8BAAwB,CAACN,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAM,8BAAwB,CAACH,OAAzB,GAAmCG,wBAAnC;AACAF,YAAM,CAACC,OAAP,GAAiBC,wBAAjB;AACAA,8BAAwB,CAACb,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcA,UAAMgB,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,eADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,mBADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,aADR;AAEEE,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,OADR;AAEEC,mBAAS,EAAE;AAFb,SADQ,EAKR;AACED,cAAI,EAAE,WADR;AAEEC,mBAAS,EAAE,4FAFb;AAGEE,qBAAW,EAAE,CAAC,6DAAD;AAHf,SALQ,EAUR;AACEH,cAAI,EAAE,YADR;AAEEC,mBAAS,EAAE,mFAFb;AAGEE,qBAAW,EAAE,CAAC,6DAAD;AAHf,SAVQ,EAeR;AACEH,cAAI,EAAE,QADR;AAEEC,mBAAS,EAAE;AAFb,SAfQ,EAmBR;AACED,cAAI,EAAE,eADR;AAEEC,mBAAS,EAAE;AAFb,SAnBQ,EAuBR;AACED,cAAI,EAAE,IADR;AAEEI,oBAAU,EAAE;AAFd,SAvBQ;AAFZ,OATqB,EAwCrB;AACEJ,YAAI,EAAE,IADR;AAEEI,kBAAU,EAAE;AAFd,OAxCqB,CAAvB;;UAsDaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,mBALhB,CACT;AAAEC,iBAAO,EAAE,sEAAX;AAA8BC,kBAAQ,EAAE,oFAAxC;AAA8DC,eAAK,EAAE;AAArE,SADS,EAET;AAAEF,iBAAO,EAAE,sEAAX;AAA8BC,kBAAQ,EAAE,2EAAxC;AAA0DC,eAAK,EAAE;AAAjE,SAFS,C;AAGV,kBALQ,CAAC,6DAAaC,OAAb,CAAqBV,MAArB,CAAD,CAKR,EAJS,4DAIT;;;;4HAEUM,gB,EAAgB;AAAA;AAAA,oBANjB,4DAMiB;AAAA,S;AANL,O;;;;;wEAMXA,gB,EAAgB;gBAR5B,sDAQ4B;iBARnB;AACRK,mBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBV,MAArB,CAAD,CADD;AAERJ,mBAAO,EAAE,CAAC,4DAAD,CAFD;AAGRgB,qBAAS,EAAE,CACT;AAAEL,qBAAO,EAAE,sEAAX;AAA8BC,sBAAQ,EAAE,oFAAxC;AAA8DC,mBAAK,EAAE;AAArE,aADS,EAET;AAAEF,qBAAO,EAAE,sEAAX;AAA8BC,sBAAQ,EAAE,2EAAxC;AAA0DC,mBAAK,EAAE;AAAjE,aAFS;AAHH,W;AAQmB,U;;;;;;;;;;;;;;;;;;ACpE7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACCE;;AAKE;;AACF;;;;;;AAHE;;AAEK;;AAAA;;;;;;AAEP;;AAUE;;AACF;;;;;;;;;;AAEA;;AACE;;AACE;;AAIG;;AAAK;;AAEV;;AACF;;;;;;AALM;;AAAA;;;;;;;;;;;;;;AAYJ;;AACE;;AACE;;AAIG;;AAAM;;AAEX;;AACA;;AACE;;AAIG;;AAAS;;AAEd;;AACA;;AACE;;AAIG;;AAAU;;AAEf;;AAOF;;;;;;AA3BM;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;;;;;;;AAeN;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AA9CF;;AAKE;;AAgCA;;AACE;;AAAqB;;AAAG;;AAAgB;;AAC1C;;AACA;;AAOF;;;;;;AA1CiC;;AAAA;;AAiCL;;AAAA;;AAIxB;;AAAA;;;;UD/DOI,Y;AAMX,8BACUC,qBADV,EAEUC,aAFV,EAEsC;AAAA;;AAD5B,eAAAD,qBAAA,GAAAA,qBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AALV,eAAAC,MAAA,GAAiB,IAAjB;AACA,eAAAC,UAAA,GAAqB,mCAArB;AAME,wDAAc,IAAd;AACD;;;;qCAEO;AAAA;;AACN,iBAAKF,aAAL,CAAmBG,aAAnB,CAAiCC,SAAjC,CAA2C,UAACH,MAAD,EAAoB;AAC7D,kBAAIA,MAAJ,EAAY;AACV,qBAAI,CAACA,MAAL,GAAcA,MAAd;;AACA,oBAAI,KAAI,CAACA,MAAL,CAAYI,IAAhB,EAAsB;AACpB,uBAAI,CAACH,UAAL,GAAkB,KAAI,CAACD,MAAL,CAAYI,IAA9B;AACD;AACF;AACF,aAPD;AAQD;;;uCAES;AACR,mBAAO,KAAKN,qBAAL,CAA2BO,SAA3B,KAAyC,IAAhD;AACD;;;qCAEO;AACN,mBAAO,KAAKP,qBAAL,CAA2BO,SAA3B,CAAqCC,IAA5C;AACD;;;mCAEK;AACJ,iBAAKR,qBAAL,CAA2BS,MAA3B;AACD;;;;;;;yBAlCUV,Y,EAAY,uJ,EAAA,uI;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,iB;AAAA,e;AAAA,2/C;AAAA;AAAA;ACXzB;;AACE;;AAOA;;AAaA;;AAWA;;AAgDF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAIF;;AACA;;AACE;;AAAO;;AAA0B;;AAAQ;;AAAM;;AAC/C;;AACG;;AAA4C;;AAEjD;;AACF;;;;AAnGI;;AAAA;;AAaA;;AAAA;;AAK6B;;AAAA;;AAc7B;;AAAA;;;;;;;;;wEDxBSA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTW,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAsCaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,CAOI;;;;4HAGFA,S,EAAS;AAAA,yBApBlB,2DAoBkB,EAnBlB,gFAmBkB,EAlBlB,4FAkBkB,EAjBlB,mFAiBkB,EAhBlB,mFAgBkB,EAflB,oFAekB,EAdlB,sGAckB,EAblB,0HAakB,EAZlB,iFAYkB;AAZJ,oBAGd,uEAHc,EAId,oEAJc,EAKd,qEALc,EAMd,0DANc,EAOd,kEAPc;AAYI,S;AALC,O;;;;;wEAKVA,S,EAAS;gBAtBrB,sDAsBqB;iBAtBZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,4FAHY,EAIZ,mFAJY,EAKZ,mFALY,EAMZ,oFANY,EAOZ,sGAPY,EAQZ,0HARY,EASZ,iFATY,CADN;AAYRjB,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,CAZD;AAmBRC,qBAAS,EAAE,EAnBH;AAoBRiB,qBAAS,EAAE,CAAC,2DAAD;AApBH,W;AAsBY,U;;;;;;;;;;;;;;;;;;ACtCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+EM;;AAIE;;AACA;;AACA;;AACF;;;;;;AAHE;;AAAA;;AAEA;;AAAA;;;;;;AAQA;;AAA2C;;AAAM;;AAAc;;;;;;AAqC3D;;AAAgD;;AAAK;;;;;;AACrD;;AAA+C;;AAAO;;;;;;;;;;;;;;AAnB1D;;AAKE;;AAA8C;;AAC9C;;AACG;;AACyC;;AAC3C;;AAEC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAED;;AACD;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACA;;AACF;;AACF;;;;;;;;;;AAnBE;;AAGA;;AAAA;;AAEG;;AAAA;;AAWE;;AAAA;;AACA;;AAAA;;;;;;;;;;;;;AApCT;;AAiBE;;AAsBF;;;;;;;;;;AA/BE;;AAUE;;AAAA;;;;;;;;;;;;AAvBN;;AACE;;AACE;;AACA;;AACF;;AACA;;AAwCF;;;;;;;;AA5CM;;AAAA;;AACF;;AAAA;;AACO;;AAAA;;AAiBP;;AAAA;;;;;;;;AA4BF;;AACE;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;;;;;;;;;UD/HOC,kB;AAOX,oCACUC,YADV,EAEUhB,aAFV,EAGUiB,KAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd,eAAAF,YAAA,GAAAA,YAAA;AACA,eAAAhB,aAAA,GAAAA,aAAA;AACA,eAAAiB,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AATV,eAAAC,KAAA,GAAgB,IAAIC,KAAJ,EAAhB;AACA,eAAAC,YAAA,GAAwB,IAAID,KAAJ,EAAxB;AACA,eAAAE,WAAA,GAAwB,IAAIF,KAAJ,EAAxB;AAQI;;;;kCAEIG,I,EAAcC,M,EAAe;AACnC,gBAAMC,KAAK,GAAG,oDAAKD,MAAL,EAAa,UAACE,KAAD,EAAkB;AAC3C,qBAAOA,KAAK,CAACC,WAAN,OAAwBJ,IAA/B;AACD,aAFa,CAAd;AAGA,mBAAOE,KAAP;AACD;;;qCAEU;AAAA;;AACT;AACA,iBAAKzB,aAAL,CACG4B,SADH,CACa,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UADxC,EAEG3B,SAFH,CAEa,IAFb,EAEmB,UAAA4B,KAAK,EAAI;AACxB,kBACEA,KAAK,KAAK,WAAV,IACCA,KAAK,YAAY,uEAAjB,IAAsCA,KAAK,CAACC,MAAN,KAAiB,GAF1D,EAGE;AACA,sBAAI,CAACf,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,QAAD,EAAW,mBAAX,CAArB;AACD;AACF,aATH;AAUA,iBAAKlC,aAAL,CAAmBG,aAAnB,CAAiCC,SAAjC,CAA2C,UAACH,MAAD,EAAoB;AAC7D,kBAAIA,MAAJ,EAAY;AACV,sBAAI,CAACkC,aAAL,CAAmBlC,MAAnB;AACD;AACF,aAJD;AAKA,iBAAKD,aAAL,CAAmBoC,IAAnB,CAAwB,KAAKnB,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UAAnD;AACA,iBAAKM,kBAAL;AACD;;;sCAEQ;AACP,mBAAO,mCAAM,GAAGC,OAAT,EAAP;AACD;;;wCAEarC,M,EAAc;AAAA;;AAC1B,iBAAKkB,KAAL,GAAa,IAAIC,KAAJ,EAAb;AACA,iBAAKC,YAAL,GAAoB,IAAID,KAAJ,EAApB;AACA,iBAAKE,WAAL,GAAmB,IAAIF,KAAJ,EAAnB;AACA,iBAAKJ,YAAL,CAAkBuB,SAAlB,CAA4BtC,MAAM,CAAChC,EAAnC,EAAuCmC,SAAvC,CAAiD,UAACoB,MAAD,EAAqB;AACpE,oBAAI,CAACgB,SAAL,GAAiBhB,MAAjB;AACA,oBAAI,CAACH,YAAL,GAAoB,oDAAMoB,MAAN,CAAa,MAAI,CAACD,SAAlB,CAApB;AACA,oBAAI,CAACnB,YAAL,GAAoB,sDAAO,MAAI,CAACA,YAAZ,EAA0B,CAAC,SAAD,EAAY,MAAZ,CAA1B,CAApB;AACA,kEAAK,MAAI,CAACA,YAAV,EAAwB,UAACK,KAAD,EAAkB;AACxC,sBAAI,CAACJ,WAAL,CAAiBoB,IAAjB,CAAsBhB,KAAK,CAACC,WAAN,EAAtB;AACD,eAFD,EAJoE,CAOpE;;AACA,kBAAMgB,KAAK,GAAG,mCAAM,EAApB;AACA,kBAAMC,kBAAkB,GAAGD,KAAK,CAACE,KAAN,GAAcC,OAAd,CAAsB,MAAtB,CAA3B;AACA,kBAAMC,gBAAgB,GAAGJ,KAAK,CAACE,KAAN,GAAcG,KAAd,CAAoB,MAApB,CAAzB;;AAVoE,yCAW3DC,EAX2D;AAYlE,oBAAMC,IAAI,GAAG,IAAI,wDAAJ,CAASD,EAAT,CAAb;AACA,oBAAIE,SAAc,SAAlB;AAAA,oBAAoBC,OAAY,SAAhC;;AACA,oBAAIH,EAAE,GAAGN,KAAK,CAACO,IAAN,EAAT,EAAuB;AACrBC,2BAAS,GAAGP,kBAAkB,CAC3BC,KADS,GAETQ,QAFS,CAEAV,KAAK,CAACO,IAAN,KAAeD,EAFf,EAEmB,OAFnB,CAAZ;AAGAG,yBAAO,GAAGL,gBAAgB,CACvBF,KADO,GAEPQ,QAFO,CAEEV,KAAK,CAACO,IAAN,KAAeD,EAFjB,EAEqB,OAFrB,CAAV;AAGD,iBAPD,MAOO;AACLE,2BAAS,GAAGP,kBAAkB,CAC3BC,KADS,GAETS,GAFS,CAELL,EAAE,GAAGN,KAAK,CAACO,IAAN,EAFA,EAEc,OAFd,CAAZ;AAGAE,yBAAO,GAAGL,gBAAgB,CAACF,KAAjB,GAAyBS,GAAzB,CAA6BL,EAAE,GAAGN,KAAK,CAACO,IAAN,EAAlC,EAAgD,OAAhD,CAAV;AACD,iBA1BiE,CA2BlE;;;AACAA,oBAAI,CAAC1B,MAAL,GAAc,sDAAOA,MAAP,EAAe,UAACE,KAAD,EAAkB;AAC7C,yBAAO,mCAAM,CAACA,KAAK,CAAC6B,IAAP,CAAN,CAAmBC,SAAnB,CACLL,SADK,EAELC,OAFK,EAGLK,SAHK,EAIL,IAJK,CAAP;AAMD,iBAPa,CAAd;;AAQA,sBAAI,CAACtC,KAAL,CAAWuB,IAAX,CAAgBQ,IAAhB;AApCkE;;AAWpE,mBAAK,IAAID,EAAE,GAAGN,KAAK,CAACO,IAAN,KAAe,CAA7B,EAAgCD,EAAE,IAAI,EAAtC,EAA0CA,EAAE,EAA5C,EAAgD;AAAA,sBAAvCA,EAAuC;AA0B/C;AACF,aAtCD;AAuCD;;;+CAEiB;AAChB,iBAAKS,YAAL,GAAoB,IAAI,wDAAJ,CAAc;AAChCnD,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWoD,QAA/B,CAD0B;AAEhC,uBAAO,IAAI,0DAAJ,CAAgB,EAAhB,CAFyB;AAGhCC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,QAA/B,CAHsB;AAIhCpC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWoC,QAA/B,CAJ0B;AAKhCE,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,QAA/B;AALsB,aAAd,CAApB;AAOD;;;wCAEU;AAAA;;AACT,gBAAI,CAAC,KAAKD,YAAL,CAAkBI,KAAvB,EAA8B;AAC5B,mBAAKJ,YAAL,CAAkBK,gBAAlB;AACA;AACD;;AACD,gBAAMC,CAAC,GAAG,mCAAM,CAAC,KAAKN,YAAL,CAAkBO,GAAlB,CAAsB,UAAtB,EAAkCC,KAAnC,CAAhB;AACA,gBAAM3C,IAAI,GAAW,KAAKmC,YAAL,CAAkBO,GAAlB,CAAsB,MAAtB,EAA8BC,KAAnD;AACAF,aAAC,CAACG,KAAF,CAAQC,QAAQ,CAAC7C,IAAI,CAAC8C,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAhB;AACAL,aAAC,CAACM,OAAF,CAAUF,QAAQ,CAAC7C,IAAI,CAAC8C,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAlB;AACA,gBAAME,WAAW,GAAGP,CAAC,CAACd,IAAF,EAApB,CATS,CAUT;;AACA,gBAAMsB,WAAW,GAAG,EAApB;;AACA,iBAAK,IAAIC,EAAE,GAAGF,WAAd,EAA2BE,EAAE,IAAI,EAAjC,EAAqCA,EAAE,EAAvC,EAA2C;AACzC,kBAAM/C,MAAK,GAAG,IAAI,mDAAJ,EAAd;;AACAA,oBAAK,CAACnB,IAAN,GAAa,KAAKmD,YAAL,CAAkBO,GAAlB,CAAsB,MAAtB,EAA8BC,KAA3C;AACAxC,oBAAK,CAACgD,WAAN,GAAoB,KAAKhB,YAAL,CAAkBO,GAAlB,CAAsB,OAAtB,EAA+BC,KAAnD;AACAxC,oBAAK,CAACmC,QAAN,GAAiB,KAAKH,YAAL,CAAkBO,GAAlB,CAAsB,UAAtB,EAAkCC,KAAnD;AACAxC,oBAAK,CAAC6B,IAAN,GAAaS,CAAC,CAACW,MAAF,EAAb;AACAH,yBAAW,CAAC9B,IAAZ,CAAiB,KAAK1B,YAAL,CAAkB4D,WAAlB,CAA8BlD,MAA9B,CAAjB,EANyC,CAOzC;;AACAsC,eAAC,CAACV,GAAF,CAAM,CAAN,EAAS,OAAT;AACD;;AACD,kEAASkB,WAAT,EAAsBpE,SAAtB,CAAgC,YAAM;AACpC,oBAAI,CAAC+B,aAAL,CAAmB,MAAI,CAACnC,aAAL,CAAmB6E,kBAAtC;AACD,aAFD;AAGD;;;oCAESC,e,EAAuB;AAC/B,mBACE,KAAKpB,YAAL,CAAkBO,GAAlB,CAAsBa,eAAtB,EAAuCC,OAAvC,IACA,KAAKrB,YAAL,CAAkBO,GAAlB,CAAsBa,eAAtB,EAAuCE,OAFzC;AAID;;;yCAEctD,K,EAAY;AACzBA,iBAAK,CAACuD,QAAN,GAAiB,CAACvD,KAAK,CAACuD,QAAxB,CADyB,CAEzB;;AACA,iBAAKjE,YAAL,CAAkBkE,WAAlB,CAA8BxD,KAAK,CAACzD,EAApC,EAAwCyD,KAAK,CAACuD,QAA9C,EAAwD7E,SAAxD;AACD;;;4CAEiB+E,sB,EAA8B;AAAA;;AAC9C,gBACEC,OAAO,CACL,oHADK,CADT,EAIE;AACA,kBAAMC,aAAa,GAAG,KAAKhE,YAAL,CAAkB8D,sBAAlB,CAAtB,CADA,CAEA;;AACA,kBAAMG,cAAc,GAAG,sDAAO,KAAK9C,SAAZ,EAAuB,UAACd,KAAD,EAAkB;AAC9D,uBACEA,KAAK,CAACnB,IAAN,KAAe8E,aAAa,CAAC9E,IAA7B,IACAmB,KAAK,CAAC6D,OAAN,KAAkBF,aAAa,CAACE,OADhC,IAEA7D,KAAK,CAACH,IAAN,KAAe8D,aAAa,CAAC9D,IAH/B;AAKD,eANsB,CAAvB;AAOA,kBAAMiD,WAAW,GAAG,EAApB;AACA,kEAAKc,cAAL,EAAqB,UAAC5D,KAAD,EAAkB;AACrC8C,2BAAW,CAAC9B,IAAZ,CAAiB,MAAI,CAAC1B,YAAL,CAAkBwE,WAAlB,CAA8B9D,KAAK,CAACzD,EAApC,CAAjB;AACD,eAFD;AAGA,oEAASuG,WAAT,EAAsBpE,SAAtB,CAAgC,YAAM;AACpC,sBAAI,CAAC+B,aAAL,CAAmB,MAAI,CAACnC,aAAL,CAAmB6E,kBAAtC;AACD,eAFD;AAGD;AACF;;;sCAEWnD,K,EAAY;AACtB,iBAAKV,YAAL,CAAkByE,WAAlB,CAA8B/D,KAA9B;AACD;;;;;;;yBAxKUX,kB,EAAkB,4I,EAAA,8I,EAAA,+H,EAAA,uH;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,gB;AAAA,mmD;AAAA;AAAA;AClB/B;;AAAI;;AAAsC;;AAE1C;;AACE;;AAAI;;AAA8C;;AAClD;;AAAiC;AAAA,qBAAY,IAAA2E,WAAA,EAAZ;AAAyB,aAAzB;;AAC/B;;AACE;;AACE;;AAAkB;;AAAU;;AAC5B;;AACA;;AAMF;;AACA;;AAIE;;AAAsB;;AAAgB;;AACtC;;AACA;;AAMF;;AACA;;AACE;;AAAyB;;AAAU;;AACnC;;AACA;;AAMF;;AACA;;AACE;;AAAkB;;AAAS;;AAC3B;;AACA;;AAMF;;AACA;;AAIE;;AAAsB;;AAAe;;AACrC;;AACA;;AAMF;;AACA;;AACE;;AAKE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAyB;;AAAE;;AAC3B;;AAQF;;AACF;;AACA;;AACE;;AA8CA;;AACE;;AACA;;AAQF;;AACF;;AACF;;;;AAhJQ;;AAAA;;AAE0B;;AAAA;;AAY1B;;AAAA;;AAW2B;;AAAA;;AAUD;;AAAA;;AAY1B;;AAAA;;AA8BA;;AAAA;;AASA;;AAAA;;AAgDE;;AAAA;;;;;;;;;wEDxHG3E,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTN,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACF;;;;;;AAVI;;AAAA;;;;UDGSgF,e;AAIX,iCAAoBC,YAApB,EAAgD;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AAHpB,eAAAC,MAAA,GAAkB,IAAIzE,KAAJ,EAAlB;AAGkD;;;;qCAEvC;AAAA;;AACT,iBAAKwE,YAAL,CAAkBE,SAAlB,GAA8B1F,SAA9B,CAAwC,UAACyF,MAAD,EAAY;AAClD,oBAAI,CAACA,MAAL,GAAcA,MAAd;AACD,aAFD;AAGA,iBAAKE,YAAL,GAAoB,IAAI,wDAAJ,CAAc;AAChCC,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWrC,QAAZ,EAAsB,0DAAWqC,KAAjC,CAApB;AADyB,aAAd,CAApB;AAGD;;;kCAEM/H,E,EAAU;AAAA;;AACf,iBAAK2H,YAAL,CAAkBK,WAAlB,CAA8BhI,EAA9B,EAAkCmC,SAAlC,CAA4C,YAAM;AAChD,oBAAI,CAACyF,MAAL,GAAc,sDAAO,MAAI,CAACA,MAAZ,EAAoB;AAAE5H,kBAAE,EAAEA;AAAN,eAApB,CAAd;AACD,aAFD;AAGD;;;qCAEO;AAAA;;AACN,gBAAI,KAAK8H,YAAL,CAAkBjC,KAAtB,EAA6B;AAC3B,kBAAMoC,IAAI,GAAG,KAAKH,YAAL,CAAkB9B,GAAlB,CAAsB,OAAtB,EAA+BC,KAA5C;AACA,mBAAK0B,YAAL,CAAkBO,WAAlB,CAA8BD,IAA9B,EAAoC9F,SAApC,CAA8C,UAAC4F,KAAD,EAAkB;AAC9D;AACA,oBAAI,oDAAK,MAAI,CAACH,MAAV,EAAkB;AAAEO,yBAAO,EAAEF;AAAX,iBAAlB,MAAyCzC,SAA7C,EAAwD;AACtD,wBAAI,CAACoC,MAAL,CAAYnD,IAAZ,CAAiBsD,KAAjB;AACD;;AACD,sBAAI,CAACD,YAAL,CAAkBM,KAAlB;AACD,eAND;AAOD;AACF;;;;;;;yBAhCUV,e,EAAe,4I;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,4W;AAAA;AAAA;ACX5B;;AAAI;;AAAmB;;AACvB;;AACE;;AAEF;;AAEA;;AAaA;;AACA;;AAA6C;AAAA,qBAAY,IAAAW,QAAA,EAAZ;AAAsB,aAAtB;;AAC3C;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;;;AAvBK;;AAAA;;AAca;;AAAA;;;;;;;;;wEDTLX,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTlF,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa4F,c;AAIX,gCAAoBtF,KAApB,EAA2C;AAAA;;AAAvB,eAAAA,KAAA,GAAAA,KAAA;AAAyB;;;;qCAElC;AACT;AACA,gBAAMuF,IAAI,GAAG,KAAKvF,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2B2E,SAAxC;;AACA,gBAAID,IAAI,KAAK,mBAAb,EAAkC;AAChC,mBAAKE,UAAL,GAAkB,eAAlB;AACA,mBAAKC,YAAL,GAAoB,qCAApB;AACD,aAHD,MAGO;AACL,mBAAKD,UAAL,GAAkB,QAAlB;AACA,mBAAKC,YAAL,GAAoB,+BAApB;AACD;AACF;;;;;;;yBAhBUJ,c,EAAc,+H;AAAA,O;;;cAAdA,c;AAAc,8B;AAAA,gB;AAAA,e;AAAA,8D;AAAA;AAAA;ACR3B;;AAAI;;AAAc;;AAClB;;AACE;;AACF;;;;AAHI;;AAAA;;AAEF;;AAAA;;;;;;;;wEDMWA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT9F,oBAAQ,EAAE,OADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOQ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;AAPV;;AACE;;AAAM;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACE;;AAAyB;;AAA0B;;AACnD;;AACE;;AAAQ;;AAAuB;;AAC/B;;AAGF;;AACF;;AACF;;AACF;;;;;;AANgB;;AAAA;;;;;;;;;;;;AA0BR;;AAKE;;AACA;;AACA;;AACF;;;;;;;;AAPE;;AAIA;;AAAA;;AAEA;;AAAA;;;;;;AA4BI;;AAOG;;AAAoD;;;;;;;;AAApD;;AAAA;;;;;;AAEH;;AAUG;;AAAoD;;;;;;;;AAApD;;AAAA;;;;;;AAEH;;AAOG;;AAAU;;;;;;AA7Bf;;AACE;;AASA;;AAYA;;AASF;;;;;;;;AA7BI;;AAAA;;AASA;;AAAA;;AAYA;;AAAA;;;;;;AASJ;;AACE;;AACG;;AAAiB;;AAEtB;;;;;;;;;;;;;;;;AAvDF;;AAUE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAA8C;;AAC9C;;AACG;;AAEH;;AACA;;AACA;;AACA;;AAgCA;;AAKF;;;;;;;;AArDE;;AASA;;AAAA;;AAEG;;AAAA;;AAKG;;AAAA;;AAgCA;;AAAA;;;;;;AApDV;;AACE;;AAyDF;;;;;;;;AAxDI;;AAAA;;;;;;AAJN;;AACE;;AAAgC;;AAAiC;;AACjE;;AA2DF;;;;;;AA5DkC;;AAAA;;AAC5B;;AAAA;;;;;;;;;;;;AAoKF;;AAUE;;AAOA;;AAIG;;AAAiB;;AAEtB;;;;;;AApBE;;AAkBG;;AAAA;;;;;;;;AA1Nf;;AAOE;;AACE;;AAA2B;;AAAG;;AAAY;;AAAK;;AACjD;;AACA;;AACE;;AACE;;AACE;;AAIE;;AACF;;AACA;;AASF;;AACF;;AACA;;AACE;;AA8DF;;AACF;;AAEA;;AACE;;AAIE;;AACF;;AAEA;;AAOE;;AACF;;AACA;;AAME;;AAAI;;AAAsB;;AAC1B;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AACE;;AAIE;;AAAkB;;AAAoB;;AACtC;;AACA;;AAMF;;AACA;;AAIE;;AAAmB;;AAAK;;AACxB;;AACA;;AAMF;;AACA;;AAIE;;AAAmB;;AAAa;;AAChC;;AACA;;AAMF;;AACA;;AAIE;;AAAoB;;AAAmB;;AACvC;;AACA;;AAMF;;AACA;;AACE;;AAAiB;;AAAG;;AACpB;;AACA;;AAMF;;AACA;;AAIE;;AAAkB;;AAAG;;AACrB;;AACA;;AAMF;;AACA;;AAwBA;;AACE;;AAKE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA5NU;;AAAA;;AAQA;;AAAA;;AASA;;AAAA;;AAiEsB;;AAAA;;AAE1B;;AAAA;;AAOA;;AAAA;;AASA;;AAAA;;AAMM;;AAAA;;AAIA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAW0B;;AAAA;;AAY1B;;AAAA;;AAaA;;AAAA;;;;;;AAqCZ;;AACE;;AAA4B;;AAAG;;AAAwB;;AAAK;;AAC5D;;AACA;;AACA;;AAEF;;;;;;AALiC;;AAAA;;;;UDzOpBiG,e;AAWX,iCACU5F,YADV,EAEUhB,aAFV,EAGUiB,KAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd,eAAAF,YAAA,GAAAA,YAAA;AACA,eAAAhB,aAAA,GAAAA,aAAA;AACA,eAAAiB,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAdV,eAAAgC,IAAA,GAAa,IAAb;AACA,eAAA2D,iBAAA,GAA6B,IAAIzF,KAAJ,EAA7B;AACA,eAAAE,WAAA,GAAwB,IAAIF,KAAJ,EAAxB;AAEA,eAAA0F,aAAA,GAAuB,IAAvB;AACA,eAAAC,sBAAA,GAAyB,KAAzB;AACA,eAAAC,YAAA,GAAyB,IAAzB;AACA,eAAAC,aAAA,GAAwB,IAAxB;AACA,eAAAC,WAAA,GAAsB,IAAtB;AAOI;;;;qCAEO;AAAA;;AACT;AACA,iBAAKlH,aAAL,CACG4B,SADH,CACa,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UADxC,EAEG3B,SAFH,CAEa,IAFb,EAEmB,UAAA4B,KAAK,EAAI;AACxB,kBACEA,KAAK,KAAK,WAAV,IACCA,KAAK,YAAY,sEAAjB,IAAsCA,KAAK,CAACC,MAAN,KAAiB,GAF1D,EAGE;AACA,sBAAI,CAACf,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,QAAD,EAAW,mBAAX,CAArB;AACD;AACF,aATH;AAUA,iBAAKiF,kBAAL;AACA,iBAAKnH,aAAL,CAAmBoC,IAAnB,CAAwB,KAAKnB,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UAAnD;AACA,iBAAK/B,aAAL,CAAmBG,aAAnB,CAAiCC,SAAjC,CAA2C,UAACH,MAAD,EAAoB;AAC7D,kBAAIA,MAAJ,EAAY;AACV,sBAAI,CAACmH,UAAL;;AACA,sBAAI,CAACF,WAAL,GAAmBjH,MAAM,CAACiH,WAA1B;;AACA,oBAAI,MAAI,CAACA,WAAL,IAAoB,MAAI,CAACA,WAAL,CAAiBG,MAAjB,GAA0B,CAAlD,EAAqD;AACnD;AACA,sBAAI,CAAC,MAAI,CAACC,YAAL,CAAkBC,QAAlB,CAA2B,SAA3B,CAAL,EAA4C;AAC1C,0BAAI,CAACD,YAAL,CAAkBE,UAAlB,CACE,SADF,EAEE,IAAI,0DAAJ,CAAgB,KAAhB,EAAuB,0DAAW7D,QAAlC,CAFF;AAID;AACF,iBARD,MAQO;AACL,wBAAI,CAAC2D,YAAL,CAAkBG,aAAlB,CAAgC,SAAhC;AACD;AACF;AACF,aAhBD;AAiBD;;;kCAEOlG,I,EAAcC,M,EAAe;AACnC,gBAAMC,KAAK,GAAG,oDAAKD,MAAL,EAAa,UAACE,KAAD,EAAkB;AAC3C,qBAAOA,KAAK,CAACC,WAAN,OAAwBJ,IAA/B;AACD,aAFa,CAAd;AAGA,mBAAOE,KAAP;AACD;;;uCAES;AAAA;;AACR,iBAAKH,WAAL,GAAmB,IAAIF,KAAJ,EAAnB;AACA,iBAAKJ,YAAL,CACGuB,SADH,CACa,KAAKvC,aAAL,CAAmB6E,kBAAnB,CAAsC5G,EADnD,EAEGmC,SAFH,CAEa,UAACoB,MAAD,EAAqB;AAAA;;AAC9B;AACAA,oBAAM,GAAG,sDAAOA,MAAP,EAAe;AAAEyD,wBAAQ,EAAE;AAAZ,eAAf,CAAT;AACA,qBAAI,CAAC4B,iBAAL,GAAyB,OAAI,CAACa,gBAAL,CAAsBlG,MAAtB,CAAzB,CAH8B,CAI9B;;AACA,qBAAI,CAACwF,YAAL,GAAoB,IAAI5F,KAAJ,EAApB;;AACA,6CAAI,CAAC4F,YAAL,EAAkBtE,IAAlB,gDACK,sDACD,oDACE,mDAAI,OAAI,CAACmE,iBAAT,EAA4B,aAA5B,EAA2Cc,IAA3C,CAAgD,GAAhD,EAAqDtD,KAArD,CAA2D,GAA3D,CADF,CADC,EAID,UAACK,WAAD;AAAA,uBACEA,WAAW,KAAK,IAAhB,IACAA,WAAW,CAAC2C,MAAZ,GAAqB,CADrB,IAEA3C,WAAW,KAAK,MAHlB;AAAA,eAJC,CADL,GAN8B,CAiB9B;;;AACA,qBAAI,CAACsC,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBY,IAAlB,EAApB,CAlB8B,CAmB9B;;AACA,qBAAI,CAACZ,YAAL,CAAkBa,OAAlB,CAA0B,MAA1B;;AACA,qBAAI,CAAC3E,IAAL,GAAY,IAAI,wDAAJ,CAAS,mCAAM,GAAGZ,OAAT,EAAT,CAAZ;AACD,aAxBH;AAyBD;;;sCAEWwF,S,EAAiB;AAAA;;AAC3B,iBAAKb,aAAL,GAAqBa,SAArB;AACA,iBAAKhB,aAAL,GAAqB,IAArB;AACA,iBAAKQ,YAAL,CAAkBS,eAAlB;AACA,iBAAK7E,IAAL,CAAU1B,MAAV,GACE,sDAAO,KAAKqF,iBAAZ,EAA+B,UAACnF,KAAD,EAAkB;AAC/C,kBAAIoG,SAAS,KAAK,MAAlB,EAA0B;AACxB,uBAAO,IAAP;AACD;;AACD,qBAAOpG,KAAK,CAACgD,WAAN,CAAkBL,KAAlB,CAAwB,GAAxB,EAA6B2D,OAA7B,CAAqCF,SAArC,KAAmD,CAA1D;AACD,aALD,CADF;AAQA,iBAAK5E,IAAL,CAAU1B,MAAV,GAAmB,sDAAO,KAAK0B,IAAL,CAAU1B,MAAjB,EAAyB,CAAC,SAAD,EAAY,MAAZ,CAAzB,CAAnB;AACA,iBAAKF,WAAL,GAAmB,EAAnB;AACA,gEAAK,KAAK4B,IAAL,CAAU1B,MAAf,EAAuB,UAACE,KAAD,EAAkB;AACvC,qBAAI,CAACJ,WAAL,CAAiBoB,IAAjB,CAAsBhB,KAAK,CAACC,WAAN,EAAtB;AACD,aAFD;AAGD;;;2CAEgBH,M,EAAe;AAC9B,gBAAMmB,KAAK,GAAG,mCAAM,EAApB;AACA,gBAAMsF,KAAK,GAAGtF,KAAK,CAACE,KAAN,GAAcC,OAAd,CAAsB,MAAtB,EAA8BQ,GAA9B,CAAkC,CAAlC,EAAqC,MAArC,CAAd;AACA,gBAAM4E,GAAG,GAAGvF,KAAK,CAACE,KAAN,GAAcG,KAAd,CAAoB,MAApB,EAA4BM,GAA5B,CAAgC,CAAhC,EAAmC,MAAnC,CAAZ;AACA,mBAAO,sDAAO9B,MAAP,EAAe,UAACE,KAAD,EAAkB;AACtC,qBAAO,mCAAM,CAACA,KAAK,CAAC6B,IAAP,CAAN,CAAmBC,SAAnB,CAA6ByE,KAA7B,EAAoCC,GAApC,EAAyCzE,SAAzC,EAAoD,IAApD,CAAP;AACD,aAFM,CAAP;AAGD;;;+CAEiB;AAChB,iBAAK6D,YAAL,GAAoB,IAAI,wDAAJ,CAAc;AAChC/G,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWoD,QAA/B,CAD0B;AAEhCqC,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWrC,QAAZ,EAAsB,0DAAWqC,KAAjC,CAApB,CAFyB;AAGhCmC,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWxE,QAA/B,CAHyB;AAIhCyE,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWzE,QAA/B,CAJwB;AAKhC0E,iBAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW1E,QAA/B,CAL2B;AAMhC2E,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW3E,QAA/B;AAN0B,aAAd,CAApB;AAQD;;;6CAEkBjC,K,EAAY;AAC7B,gBAAM6G,IAAI,GAAG7G,KAAK,CAACmC,QAAN,GAAiBnC,KAAK,CAAC8G,UAApC;;AACA,gBAAID,IAAI,GAAG,CAAX,EAAc;AACZ,+BAAUA,IAAV;AACD;;AACD,gBAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,mCAAcA,IAAd;AACD;;AACD;AACD;;;sCAEW7G,K,EAAY;AACtB,iBAAK4F,YAAL,CAAkBS,eAAlB;;AACA,gBAAI,KAAKjB,aAAL,KAAuBpF,KAA3B,EAAkC;AAChC,mBAAKoF,aAAL,GAAqB,IAArB;AACD,aAFD,MAEO;AACL,mBAAKA,aAAL,GAAqBpF,KAArB;AACD;AACF;;;oCAESoD,e,EAAuB;AAC/B,mBACE,KAAKwC,YAAL,CAAkBrD,GAAlB,CAAsBa,eAAtB,EAAuCC,OAAvC,IACA,KAAKuC,YAAL,CAAkBrD,GAAlB,CAAsBa,eAAtB,EAAuCE,OAFzC;AAID;;;gDAEkB;AAAA;;AACjB,gBAAI,KAAKsC,YAAL,CAAkBvC,OAAtB,EAA+B;AAC7B,mBAAKuC,YAAL,CAAkBvD,gBAAlB;AACA;AACD;;AACD,gBAAM0E,WAAW,GAAG,IAAI,sEAAJ,EAApB;AACAA,uBAAW,CAAClI,IAAZ,GAAmB,KAAK+G,YAAL,CAAkBrD,GAAlB,CAAsB,MAAtB,EAA8BC,KAAjD;AACAuE,uBAAW,CAACzC,KAAZ,GAAoB,KAAKsB,YAAL,CAAkBrD,GAAlB,CAAsB,OAAtB,EAA+BC,KAAnD;AACAuE,uBAAW,CAACN,KAAZ,GAAoB,KAAKb,YAAL,CAAkBrD,GAAlB,CAAsB,OAAtB,EAA+BC,KAAnD;AACAuE,uBAAW,CAACL,MAAZ,GAAqB,KAAKd,YAAL,CAAkBrD,GAAlB,CAAsB,QAAtB,EAAgCC,KAArD;AACAuE,uBAAW,CAACJ,GAAZ,GAAkB,KAAKf,YAAL,CAAkBrD,GAAlB,CAAsB,KAAtB,EAA6BC,KAA/C;AACAuE,uBAAW,CAACH,IAAZ,GAAmB,KAAKhB,YAAL,CAAkBrD,GAAlB,CAAsB,MAAtB,EAA8BC,KAAjD;AACAuE,uBAAW,CAACC,OAAZ,GAAsB,KAAK5B,aAAL,CAAmB7I,EAAzC;AACA,iBAAK+C,YAAL,CAAkB2H,cAAlB,CAAiCF,WAAjC,EAA8CrI,SAA9C,CAAwD,YAAM;AAC5D,qBAAI,CAAC2G,sBAAL,GAA8B,IAA9B;;AACA,qBAAI,CAACO,YAAL,CAAkBjB,KAAlB;AACD,aAHD;AAID;;;;;;;yBA1KUO,e,EAAe,4I,EAAA,8I,EAAA,+H,EAAA,uH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,wuE;AAAA;AAAA;AClB5B;;AAAI;;AAAsB;;AAC1B;;AAaA;;AA4OA;;;;AAzPK;;AAAA;;AAcH;;AAAA;;AA2OG;;AAAA;;;;;;;;;wEDxOQA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTnG,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBU;;AACE;;AACF;;;;;;AANF;;AAIE;;AAGF;;;;;;AAHO;;AAAA;;;;;;AAmBL;;AACE;;AACF;;;;;;AANF;;AAIE;;AAGF;;;;;;AAHO;;AAAA;;;;;;AAMP;;;;;;AAUF;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;;;UDxCKiI,c;AAQX,gCACU3H,KADV,EAEUC,MAFV,EAGUnB,qBAHV,EAIUC,aAJV,EAIsC;AAAA;;AAH5B,eAAAiB,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAnB,qBAAA,GAAAA,qBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAVV,eAAA6I,OAAA,GAAU,KAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAA9G,KAAA,GAAQ,EAAR,CAOsC,CAEpC;;AACA,cAAI,KAAKjC,qBAAL,CAA2BO,SAA/B,EAA0C;AACxC,iBAAKY,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF;;;;qCAEU;AAAA;;AACT;AACA,iBAAKlC,aAAL,CACG4B,SADH,CACa,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UADxC,EAEG3B,SAFH,CAEa,IAFb,EAEmB,UAAA4B,KAAK,EAAI;AACxB,kBACEA,KAAK,KAAK,WAAV,IACCA,KAAK,YAAY,sEAAjB,IAAsCA,KAAK,CAACC,MAAN,KAAiB,GAF1D,EAGE;AACA,uBAAI,CAACf,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,QAAD,EAAW,mBAAX,CAArB;AACD;AACF,aATH;AAUA,iBAAKlC,aAAL,CAAmBG,aAAnB,CAAiCC,SAAjC,CAA2C,UAACH,MAAD,EAAoB;AAC7D,kBAAIA,MAAJ,EAAY;AACV,uBAAI,CAACA,MAAL,GAAcA,MAAd,CADU,CAEV;;AACA,uBAAI,CAAC8I,SAAL,GACE,OAAI,CAAC9H,KAAL,CAAWY,QAAX,CAAoBmH,WAApB,CAAgC,WAAhC,KACA,OAAI,CAAC/I,MAAL,CAAYf,IAAZ,GAAmB,YAFrB;AAGD;AACF,aARD;AASA,iBAAKc,aAAL,CAAmBoC,IAAnB,CAAwB,KAAKnB,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UAAnD;AACA,iBAAKkH,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7BC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWvF,QAA/B,CADmB;AAE7BwF,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWxF,QAA/B;AAFmB,aAAd,CAAjB;AAID;;;uCAES;AACR,mBAAO,KAAK1C,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UAAlC;AACD;;;qCAEU;AAAA;;AACT;AACA,gBAAI,KAAKkH,SAAL,CAAelE,OAAnB,EAA4B;AAC1B;AACD;;AACD,iBAAK8D,OAAL,GAAe,IAAf;AACA,iBAAK9I,qBAAL,CACGqJ,KADH,CAEI,KAAKnJ,MAAL,CAAYhC,EAFhB,EAGI,KAAKgL,SAAL,CAAehF,GAAf,CAAmB,UAAnB,EAA+BC,KAHnC,EAII,KAAK+E,SAAL,CAAehF,GAAf,CAAmB,UAAnB,EAA+BC,KAJnC,EAMG9D,SANH,CAOI,UAAAiJ,IAAI,EAAI;AACN,qBAAI,CAACnI,MAAL,CAAYgB,QAAZ,CAAqB,OAAI,CAAC6G,SAAL,CAAe1E,KAAf,CAAqB,GAArB,CAArB;AACD,aATL,EAUI,UAAArC,KAAK,EAAI;AACP,qBAAI,CAACA,KAAL,GAAaA,KAAb;AACA,qBAAI,CAAC6G,OAAL,GAAe,KAAf;AACD,aAbL;AAeD;;;;;;;yBAzEUD,c,EAAc,+H,EAAA,uH,EAAA,8J,EAAA,8I;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,gB;AAAA,0qB;AAAA;AAAA;ACd3B;;AACE;;AAAwB;;AAAoC;;AAC5D;;AACE;;AAA8B;AAAA,qBAAY,IAAAU,QAAA,EAAZ;AAAsB,aAAtB;;AAC5B;;AACE;;AAAsB;;AAAK;;AAC3B;;AAQA;;AAQF;;AACA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAQA;;AAQF;;AACA;;AACE;;AAIA;;AACF;;AACA;;AACG;;AACD;;AAAgD;;AAAiB;;AAAI;;AAEvE;;AAGF;;AACF;;AACF;;;;AAzD0B;;AAAA;;AAEhB;;AAAA;;AAOA;;AAAA;;AAKA;;AAAA;;AAcA;;AAAA;;AAKA;;AAAA;;AAQI;;AAAA;;AAEJ;;AAAA;;AAOC;;AAAA;;AAEA;;AAAA;;;;;;;;;wEDvCEV,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTnI,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaM;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;;;AAiBL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;;;AAiBL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;;;AAMP;;;;;;AAGF;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;;;;;;;AAzDJ;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AACE;;AAAmB;;AAAK;;AACxB;;AASA;;AAKF;;AACA;;AACE;;AAAkB;;AAAI;;AACtB;;AASA;;AAKF;;AACA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AASA;;AAKF;;AACA;;AACE;;AACA;;AACF;;AACA;;AAGF;;;;;;AA3DM;;AAQA;;AAAA;;AAIG;;AAAA;;AAaH;;AAAA;;AAIG;;AAAA;;AAaH;;AAAA;;AAIG;;AAAA;;AAMC;;AAAA;;AACA;;AAAA;;AAGH;;AAAA;;;;;;AAKP;;AACE;;AACF;;;;UDnDa4I,qB;AAMX,uCACUvJ,aADV,EAEUiB,KAFV,EAGUlB,qBAHV,EAIUmB,MAJV,EAIwB;AAAA;;AAHd,eAAAlB,aAAA,GAAAA,aAAA;AACA,eAAAiB,KAAA,GAAAA,KAAA;AACA,eAAAlB,qBAAA,GAAAA,qBAAA;AACA,eAAAmB,MAAA,GAAAA,MAAA;AARV,eAAAc,KAAA,GAAgB,IAAhB;AACA,eAAA6G,OAAA,GAAmB,KAAnB;AACA,eAAAW,OAAA,GAAmB,KAAnB;AAOI;;;;qCAEI;AACN,iBAAKxJ,aAAL,CAAmBoC,IAAnB,CAAwB,KAAKnB,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UAAnD;AACA,iBAAK0H,gBAAL,GAAwB,IAAI,wDAAJ,CAAc;AACpCzD,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWrC,QAAZ,EAAsB,0DAAWqC,KAAjC,CAApB,CAD6B;AAEpCzF,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWoD,QAA/B,CAF8B;AAGpCwF,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWxF,QAA/B;AAH0B,aAAd,CAAxB;AAKD;;;oCAESmB,e,EAAuB;AAC/B,mBACE,KAAK2E,gBAAL,CAAsBxF,GAAtB,CAA0Ba,eAA1B,EAA2CC,OAA3C,IACA,KAAK0E,gBAAL,CAAsBxF,GAAtB,CAA0Ba,eAA1B,EAA2CE,OAF7C;AAID;;;qCAEO;AAAA;;AACN,gBAAI,KAAKyE,gBAAL,CAAsB1E,OAA1B,EAAmC;AACjC,mBAAK0E,gBAAL,CAAsB1F,gBAAtB;AACA;AACD;;AACD,gBAAM2F,IAAI,GAAG,IAAI,wDAAJ,CAAS,KAAKD,gBAAL,CAAsBxF,GAAtB,CAA0B,OAA1B,EAAmCC,KAA5C,CAAb;AACAwF,gBAAI,CAACnJ,IAAL,GAAY,KAAKkJ,gBAAL,CAAsBxF,GAAtB,CAA0B,MAA1B,EAAkCC,KAA9C;AACAwF,gBAAI,CAACP,QAAL,GAAgB,KAAKM,gBAAL,CAAsBxF,GAAtB,CAA0B,UAA1B,EAAsCC,KAAtD;AACA,iBAAKlE,aAAL,CAAmB2J,OAAnB,CAA2BD,IAA3B,EAAiC,KAAK1J,aAAL,CAAmB6E,kBAAnB,CAAsC5G,EAAvE,EAA2EmC,SAA3E,CAAqF,UAACwJ,WAAD,EAAuB;AAC1G;AACA,kBAAIA,WAAW,CAACC,MAAhB,EAAwB;AACtB,uBAAI,CAAC9J,qBAAL,CACGqJ,KADH,CAEI,OAAI,CAACpJ,aAAL,CAAmB6E,kBAAnB,CAAsC5G,EAF1C,EAGIyL,IAAI,CAAC1D,KAHT,EAII0D,IAAI,CAACP,QAJT,EAMG/I,SANH,CAOI,UAACiJ,IAAD,EAAU;AACR,yBAAI,CAACnI,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,OAAI,CAACjB,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UAA5B,EAAwC,WAAxC,CAArB;AACD,iBATL;AAWD,eAZD,MAYO;AACL,uBAAI,CAACyH,OAAL,GAAe,IAAf;AACD;AACF,aAjBD;AAkBD;;;;;;;yBAvDUD,qB,EAAqB,8I,EAAA,+H,EAAA,8J,EAAA,uH;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,gB;AAAA,e;AAAA,43B;AAAA;AAAA;ACZlC;;AA6DA;;;;AA7D6D;;AA6DxD;;AAAA;;;;;;;;;wEDjDQA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT9I,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyBU;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;;;AA0BP;;AACE;;AACF;;;;;;AAKA;;AACE;;AACF;;;;;;AAwBJ;;;;;;AAGF;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;;;;;;;;;;UD5ESmJ,2B;AASX,6CAAoB9J,aAApB,EAA0DkB,MAA1D,EAA0E;AAAA;;AAAtD,eAAAlB,aAAA,GAAAA,aAAA;AAAsC,eAAAkB,MAAA,GAAAA,MAAA;AAP1D,eAAAc,KAAA,GAAgB,IAAhB;AACA,eAAA6G,OAAA,GAAmB,KAAnB;AACA,eAAAkB,mBAAA,GAAoC,IAApC;AACA,eAAAC,SAAA,GAAY;AACVC,qBAAS,EAAE;AADD,WAAZ;AAI4E;;;;qCAEpE;AACN,iBAAKR,gBAAL,GAAwB,IAAI,wDAAJ,CAAc;AACpClJ,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWoD,QAAZ,CAApB,CAD8B;AAEpCzE,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACxB,0DAAWyE,QADa,EAExB,0DAAWuG,SAAX,CAAqB,EAArB,CAFwB,EAGxB,0DAAWC,OAAX,CAAmB,cAAnB,CAHwB,CAApB,CAF8B;AAOpCjD,yBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAPuB,aAAd,CAAxB;AASD;;;sCAEQ;AACP,iBAAKlH,aAAL,CAAmBoK,SAAnB,CACE,KAAKX,gBAAL,CAAsBxF,GAAtB,CAA0B,MAA1B,EAAkCC,KADpC,EAEE,KAAK8F,SAFP;AAID;;;oCAESlF,e,EAAuB;AAC/B,mBACE,KAAK2E,gBAAL,CAAsBxF,GAAtB,CAA0Ba,eAA1B,EAA2CC,OAA3C,IACA,KAAK0E,gBAAL,CAAsBxF,GAAtB,CAA0Ba,eAA1B,EAA2CE,OAF7C;AAID;;;qCAEO;AAAA;;AACN,gBAAI,KAAKyE,gBAAL,CAAsB1E,OAA1B,EAAmC;AACjC,mBAAK0E,gBAAL,CAAsB1F,gBAAtB;AACA;AACD,aAJK,CAKN;;;AACA,gBAAMxD,IAAI,GAAG,KAAKkJ,gBAAL,CAAsBxF,GAAtB,CAA0B,MAA1B,EAAkCC,KAA/C;AACA,gBAAMhF,IAAI,GAAG,KAAKuK,gBAAL,CAAsBxF,GAAtB,CAA0B,MAA1B,EAAkCC,KAA/C;AACA,gBAAMmG,cAAc,GAAG,IAAI,4DAAJ,CAAW9J,IAAX,EAAiBrB,IAAjB,CAAvB;AACAmL,0BAAc,CAACnD,WAAf,GAA6B,KAAKuC,gBAAL,CAAsBxF,GAAtB,CAA0B,aAA1B,EAAyCC,KAAtE;AACA,iBAAKlE,aAAL,CAAmBsK,MAAnB,CAA0BD,cAA1B,EAA0CjK,SAA1C,CAAoD,UAACH,MAAD,EAAoB;AACtE,qBAAI,CAACiB,MAAL,CAAYgB,QAAZ,CAAqB,CAACjC,MAAM,CAACf,IAAR,EAAc,eAAd,CAArB;AACD,aAFD;AAGD;;;;;;;yBAlDU4K,2B,EAA2B,8I,EAAA,uH;AAAA,O;;;cAA3BA,2B;AAA2B,gD;AAAA,iB;AAAA,gB;AAAA,uyB;AAAA;AAAA;ACZxC;;AAAI;;AAAqB;;AACzB;;AACE;;AAEF;;AACA;;AACA;;AAAqC;AAAA,qBAAY,IAAAR,QAAA,EAAZ;AAAsB,aAAtB;;AACnC;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AAAkB;;AAAiB;;AACnC;;AASA;;AAKF;;AACF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AACE;;AAAkB;;AAAI;;AACtB;;AAKE;AAAA,qBAAS,IAAAc,SAAA,EAAT;AAAoB,aAApB;;AALF;;AAYA;;AAGA;;AACE;;AAA6B;;AAE/B;;AACA;;AAGF;;AACF;;AACA;;AACE;;AAAgB;;AAAG;;AAAQ;;AAAK;;AAGlC;;AACA;;AACE;;AACE;;AAAqB;;AAAsB;;AAC3C;;AAKF;;AACF;;AACF;;AACA;;AAKE;;AACA;;AACF;;AACA;;AAGF;;;;AApFM;;AAAA;;AAcI;;AAAA;;AAIG;;AAAA;;AAqBH;;AAAA;;AAMG;;AAAA;;AAOA;;AAAA;;AAsBT;;AAAA,8FAAoB,UAApB,EAAoB,4BAApB;;AAIM;;AAAA;;AAGH;;AAAA;;;;;;;;;wED3EMN,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACTrJ,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,sCAFJ;AAGTC,qBAAS,EAAE,CAAC,sCAAD;AAHF,W;AAK6B,U;;;;;;;;;;;;;;;;;;;;;;;;AEZxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiCM;;AACE;;AACF;;;;;;;;AAcE;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAHF;;AAKA;;AACA;;AACG;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AACnB;;AAAoB;;AACtB;;AAEL;;;;;;AATI;;AAAA;;;;;;AAsBJ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;AA2BN;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;;;AAdJ;;AACE;;AACE;;AAAe;;AACf;;AACG;;AAAkC;;AAAgB;;AAAI;;AAE3D;;AACA;;AACE;;AAOA;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACF;;;;;;AApBI;;AAAA;;AAEM;;AAAA;;AAA+B;;AAAA;;AAKnC;;AAAA;;;;;;;;;;;;;;;;UDtFO4J,e;AAUX,iCACUC,WADV,EAEUxK,aAFV,EAGUyK,WAHV,EAIUxJ,KAJV,EAKUC,MALV,EAKwB;AAAA;;AAJd,eAAAsJ,WAAA,GAAAA,WAAA;AACA,eAAAxK,aAAA,GAAAA,aAAA;AACA,eAAAyK,WAAA,GAAAA,WAAA;AACA,eAAAxJ,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAdV,eAAAjB,MAAA,GAAiB,IAAjB;AACA,eAAAyK,KAAA,GAAgB,IAAItJ,KAAJ,EAAhB;AAEA,eAAAuJ,mBAAA,GAA8B,IAA9B;AAEA,eAAAX,SAAA,GAAY;AACVC,qBAAS,EAAE;AADD,WAAZ;AAUI;;;;qCAEI;AAAA;;AACN;AACA,iBAAKjK,aAAL,CACG4B,SADH,CACa,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UADxC,EAEG3B,SAFH,CAEa,IAFb,EAEmB,UAAA4B,KAAK,EAAI;AACxB4I,qBAAO,CAACC,GAAR,CAAY7I,KAAZ;;AACA,kBACEA,KAAK,KAAK,WAAV,IACCA,KAAK,YAAY,sEAAjB,IAAsCA,KAAK,CAACC,MAAN,KAAiB,GAF1D,EAGE;AACA,uBAAI,CAACf,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,QAAD,EAAW,mBAAX,CAArB;AACD;AACF,aAVH;AAWA,iBAAK4I,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BvK,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWoD,QAA/B,CADwB;AAE9BzE,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWyE,QAA/B,CAFwB;AAG9BuD,yBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAHiB,aAAd,CAAlB;AAKA,iBAAK6D,kBAAL,GAA0B,KAAK/K,aAAL,CAAmBG,aAAnB,CAAiCC,SAAjC,CACxB,UAACH,MAAD,EAAoB;AAClB,kBAAIA,MAAJ,EAAY;AACV;AACA,uBAAI,CAACD,aAAL,CAAmBiE,GAAnB,CAAuBhE,MAAM,CAAChC,EAA9B,EAAkCmC,SAAlC,CAA4C,UAACH,MAAD,EAAoB;AAC9D,yBAAI,CAACA,MAAL,GAAcA,MAAd;;AACA,yBAAI,CAAC6K,UAAL,CAAgB7G,GAAhB,CAAoB,MAApB,EAA4B+G,QAA5B,CAAqC,OAAI,CAAC/K,MAAL,CAAYM,IAAjD;;AACA,yBAAI,CAACuK,UAAL,CAAgB7G,GAAhB,CAAoB,MAApB,EAA4B+G,QAA5B,CAAqC,OAAI,CAAC/K,MAAL,CAAYf,IAAjD;;AACA,yBAAI,CAAC4L,UAAL,CACG7G,GADH,CACO,aADP,EAEG+G,QAFH,CAEY,OAAI,CAAC/K,MAAL,CAAYiH,WAFxB;AAGD,iBAPD,EAFU,CAUV;;;AACA,uBAAI,CAAClH,aAAL,CAAmBiL,QAAnB,CAA4BhL,MAAM,CAAChC,EAAnC,EAAuCmC,SAAvC,CAAiD,UAACsK,KAAD,EAAmB;AAClE,yBAAI,CAACA,KAAL,GAAaA,KAAb;AACD,iBAFD;AAGD;AACF,aAjBuB,CAA1B;AAmBA,iBAAK1K,aAAL,CAAmBoC,IAAnB,CAAwB,KAAKnB,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,UAAnD;AACD;;;wCAEU;AACT,gBAAI,KAAKgJ,kBAAT,EAA6B;AAC3B,mBAAKA,kBAAL,CAAwBG,WAAxB;AACD;AACF;;;oCAESpG,e,EAAuB;AAC/B,mBACE,KAAKgG,UAAL,CAAgB7G,GAAhB,CAAoBa,eAApB,EAAqCC,OAArC,IACA,KAAK+F,UAAL,CAAgB7G,GAAhB,CAAoBa,eAApB,EAAqCE,OAFvC;AAID;;;mCAEQ0E,I,EAAU;AAAA;;AACjB,iBAAKe,WAAL,CAAiBU,QAAjB,CAA0BzB,IAAI,CAACzL,EAA/B,EAAmCmC,SAAnC,CAA6C,UAACgL,aAAD,EAAyB;AACpE,kBAAMC,KAAK,GAAG,yDAAU,OAAI,CAACX,KAAf,EAAsB;AAAEzM,kBAAE,EAAEyL,IAAI,CAACzL;AAAX,eAAtB,CAAd,CADoE,CAEpE;;AACA,qBAAI,CAACyM,KAAL,CAAWY,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB,EAA4BD,aAA5B;AACD,aAJD;AAKD;;;yCAEW;AAAA;;AACV,gBAAI,KAAKN,UAAL,CAAgB/F,OAAhB,IAA2B,KAAKiF,SAAL,CAAeC,SAA9C,EAAyD;AACvD,mBAAKa,UAAL,CAAgB/G,gBAAhB;AACA;AACD;;AACD,gBAAMwH,aAAa,GAAG,qDAAM,KAAKtL,MAAX,CAAtB;AACAsL,yBAAa,CAAChL,IAAd,GAAqB,KAAKuK,UAAL,CAAgB7G,GAAhB,CAAoB,MAApB,EAA4BC,KAAjD;AACAqH,yBAAa,CAACrM,IAAd,GAAqB,KAAK4L,UAAL,CAAgB7G,GAAhB,CAAoB,MAApB,EAA4BC,KAAjD;AACAqH,yBAAa,CAACrE,WAAd,GAA4B,KAAK4D,UAAL,CAAgB7G,GAAhB,CAAoB,aAApB,EAAmCC,KAA/D,CARU,CASV;;AACAqH,yBAAa,CAAClL,IAAd,GAAqB,KAAKJ,MAAL,CAAYI,IAAjC;AACA,gBAAMmL,WAAW,GAAGD,aAAa,CAACrM,IAAd,KAAuB,KAAKe,MAAL,CAAYf,IAAvD;AACA,iBAAKc,aAAL,CAAmByL,MAAnB,CAA0BF,aAA1B,EAAyCnL,SAAzC,CAAmD,UAACH,MAAD,EAAoB;AACrE,kBAAIuL,WAAJ,EAAiB;AACf;AACA,uBAAI,CAACtK,MAAL,CAAYgB,QAAZ,CAAqB,CAACjC,MAAM,CAACf,IAAR,EAAc,YAAd,CAArB;AACD,eAHD,MAGO;AACL,uBAAI,CAACe,MAAL,GAAcA,MAAd;AACD;AACF,aAPD;AAQD;;;kCAEMyJ,I,EAAU;AAAA;;AACf,gBAAItE,OAAO,CAAC,iCAAD,CAAX,EAAgD;AAC9C,mBAAKqF,WAAL,WAAwBf,IAAI,CAACzL,EAA7B,EAAiCmC,SAAjC,CAA2C,YAAM;AAC/C,uBAAI,CAACsK,KAAL,GAAa,sDAAO,OAAI,CAACA,KAAZ,EAAmBhB,IAAnB,CAAb,CAD+C,CAE/C;;AACA,oBAAIA,IAAI,CAACzL,EAAL,KAAY,OAAI,CAACuM,WAAL,CAAiBlK,SAAjB,CAA2BrC,EAA3C,EAA+C;AAC7C,yBAAI,CAACuM,WAAL,CAAiBhK,MAAjB;AACD;AACF,eAND;AAOD;AACF;;;yCAEW;AAAA;;AACV,gBAAI4E,OAAO,CAAC,wCAAD,CAAX,EAAuD;AACrD,mBAAKpF,aAAL,WAA0B,KAAKC,MAAL,CAAYhC,EAAtC,EAA0CmC,SAA1C,CAAoD,YAAM;AACxDsL,qBAAK,CAAC,mBAAD,CAAL;;AACA,uBAAI,CAAClB,WAAL,CAAiBhK,MAAjB;AACD,eAHD;AAID;AACF;;;sCAEQ;AACP;AACA,gBAAMmL,cAAc,GAAG,KAAKb,UAAL,CAAgB7G,GAAhB,CAAoB,MAApB,EAA4BC,KAAnD;;AACA,gBAAIyH,cAAc,KAAK,KAAK1L,MAAL,CAAYf,IAAnC,EAAyC;AACvC,mBAAKc,aAAL,CAAmBoK,SAAnB,CACE,KAAKU,UAAL,CAAgB7G,GAAhB,CAAoB,MAApB,EAA4BC,KAD9B,EAEE,KAAK8F,SAFP;AAID;AACF;;;qCAEU4B,O,EAAY;AAAA;;AACrB,iBAAKjB,mBAAL,GAA2B,IAA3B;AACA,gBAAMkB,WAAW,GAASD,OAAO,CAACE,MAAR,CAAeC,KAAf,CAAqB,CAArB,CAA1B,CAFqB,CAGrB;AACA;;AACA,gBAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAW,CAACM,IAAZ,GAAmB,IAA9B,CAAlB;;AACA,gBAAIH,SAAS,GAAG,GAAhB,EAAqB;AACnB;AACA,kBAAMI,QAAQ,GACZJ,SAAS,GAAG,IAAZ,IAAoB,CAApB,aACO,CAACA,SAAS,GAAG,IAAb,EAAmBK,OAAnB,CAA2B,CAA3B,CADP,qBAEOL,SAFP,QADF;AAIA,mBAAKrB,mBAAL,kDAA6DyB,QAA7D;AACA;AACD;;AACD,gBAAIE,QAAQ,GAAe,IAAIC,UAAJ,EAA3B;;AACAD,oBAAQ,CAACE,SAAT,GAAqB,UAAAnO,CAAC,EAAI;AACxB,qBAAI,CAAC4B,MAAL,CAAYI,IAAZ,GAA2BiM,QAAQ,CAACG,MAApC;AACD,aAFD;;AAGAH,oBAAQ,CAACI,aAAT,CAAuBb,WAAvB;AACD;AAED;;;;;;0CAGa;AACXc,oBAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA3C;AACD;;;;;;;yBAhKUtC,e,EAAe,8J,EAAA,uI,EAAA,0I,EAAA,+H,EAAA,uH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,g7C;AAAA;AAAA;ACjB5B;;AAAI;;AAAU;;AACd;;AACE;;AAEF;;AAEA;;AACA;;AAAI;;AAAY;;AAChB;;AACE;;AACE;;AACE;;AAAkB;;AAAI;;AACtB;;AACA;;AAMF;;AACA;;AACE;;AAAkB;;AAAI;;AACtB;;AACA;;AAKE;AAAA,qBAAS,IAAAH,SAAA,EAAT;AAAoB,aAApB;;AALF;;AAUA;;AAGF;;AACA;;AACE;;AAAqB;;AAAsB;;AAC3C;;AACA;;AAKF;;AACA;;AACE;;AAAO;AAAA,qBAAS,IAAA0C,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAoB;;AACrD;;AACE;;AAaA;;AAIE;;AAIE;AAAA,qBAAU,IAAAC,UAAA,QAAV;AAA4B,aAA5B;;AAJF;;AAMA;;AAA6B;;AAAc;;AAC7C;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AAEE;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAGA;;AACF;;AACF;;AACF;;AAEA;;AAEA;;AAAI;;AAAe;;AACnB;;AAwBA;;AAEA;;AAAI;;AAAQ;;AACZ;;AACE;;AACE;;AAEA;;AACE;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAW;;AACf;;AAAI;;AAAoB;;AAC1B;;AACA;;AAAqC;;AAAG;;AAAK;;AAAK;;AACpD;;AACA;;AACE;;AAEE;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAEA;;AACF;;AACF;;AACF;;;;AApIM;;AAAA;;AAE2B;;AAAA;;AAUA;;AAAA;;AASzB;;AAAA;;AAIG;;AAAA;;AAgBE;;AAAA;;AAeH;;AAAA;;AAUwB;;AAAA;;AAoB7B;;AAAA;;;;;;;;;wED7EQ1C,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT9J,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUauM,S;AACX,2BACUhM,MADV,EAEUnB,qBAFV,EAEsD;AAAA;;AAD5C,eAAAmB,MAAA,GAAAA,MAAA;AACA,eAAAnB,qBAAA,GAAAA,qBAAA;AACN;;;;sCAIQkB,K,EAA+BkM,K,EAA4B;AACrE,gBAAMzD,IAAI,GAAG,KAAK3J,qBAAL,CAA2BO,SAAxC;;AACA,gBAAIoJ,IAAJ,EAAU;AACR;AACA,qBAAO,IAAP;AACD,aALoE,CAMrE;;;AACA,iBAAKxI,MAAL,CAAYgB,QAAZ,CAAqB,CAACjB,KAAK,CAACa,MAAN,CAAaC,UAAd,EAA0B,OAA1B,CAArB,EAAyD;AACvDiH,yBAAW,EAAE;AAAED,yBAAS,EAAEoE,KAAK,CAACC;AAAnB;AAD0C,aAAzD;AAGA,mBAAO,KAAP;AACD;;;;;;;yBAnBUF,S,EAAS,8G,EAAA,8I;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBADI;;;;;wEACbA,S,EAAS;gBADrB,wDACqB;iBADV;AAAEG,sBAAU,EAAE;AAAd,W;AACU,U;;;;;;;;;;;;;;;;;;;;;;;;ACVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaC,oB;AACX,sCAAoBvN,qBAApB,EAAkE;AAAA;;AAA9C,eAAAA,qBAAA,GAAAA,qBAAA;AAAgD;;;;oCAGlEwN,O,EACAC,I,EAAiB;AAEjB;AACA,gBAAM9D,IAAI,GAAG,KAAK3J,qBAAL,CAA2BO,SAAxC;AACA,gBAAMmN,UAAU,GAAG/D,IAAI,IAAIA,IAAI,CAACgE,QAAhC;AACA,gBAAMC,QAAQ,GAAGJ,OAAO,CAACH,GAAR,CAAYQ,UAAZ,CAAuB,yEAAYC,MAAnC,CAAjB;;AACA,gBAAIJ,UAAU,IAAIE,QAAlB,EAA4B;AAC1BJ,qBAAO,GAAGA,OAAO,CAAC1K,KAAR,CAAc;AACtBiL,0BAAU,EAAE;AACVC,+BAAa,kBAAWrE,IAAI,CAACgE,QAAhB;AADH;AADU,eAAd,CAAV;AAKD;;AAED,mBAAOF,IAAI,CAACQ,MAAL,CAAYT,OAAZ,CAAP;AACD;;;;;;;yBApBUD,oB,EAAoB,8I;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB;;;;;wEAApBA,oB,EAAoB;gBADhC;AACgC,U;;;;;;;;;;;;;;;;;;;;;;ACZjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaW,gB;AACX,kCAAoBlO,qBAApB,EAAkE;AAAA;;AAA9C,eAAAA,qBAAA,GAAAA,qBAAA;AAAgD;;;;oCAGlEwN,O,EACAC,I,EAAiB;AAAA;;AAEjB,mBAAOA,IAAI,CAACQ,MAAL,CAAYT,OAAZ,EAAqBW,IAArB,CACL,kEAAW,UAACC,GAAD,EAAS;AAClB,kBAAIA,GAAG,CAAClM,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACA,uBAAI,CAAClC,qBAAL,CAA2BS,MAA3B;AACD;;AACD,kBAAMwB,KAAK,GAAGmM,GAAG,CAACnM,KAAJ,CAAUoM,OAAV,IAAqBD,GAAG,CAACE,UAAvC;AACA,qBAAO,wDAAWrM,KAAX,CAAP;AACD,aAPD,CADK,CAAP;AAUD;;;;;;;yBAjBUiM,gB,EAAgB,8I;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;;;;;ACX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAGaK,K,GAIX,eAAYlI,OAAZ,EAA6BnI,EAA7B,EAA0C;AAAA;;AACxC,aAAKmI,OAAL,GAAeA,OAAf;;AACA,YAAInI,EAAJ,EAAQ;AACN,eAAKA,EAAL,GAAUA,EAAV;AACD;AACF,O;;UAMUsQ,Y;;;;;;;gCACLC,I,EAAS;AACb,mBAAO,IAAIF,KAAJ,CAAUE,IAAI,CAACpI,OAAf,EAAwBoI,IAAI,CAACvQ,EAA7B,CAAP;AACD;;;;;;;yBAHUsQ,Y;AAAY,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVlB,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;AClBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaoB,K;;;;;;;yCAYC;AACV,6BAAU,yEAAYZ,MAAtB,4BAA8C,KAAK5P,EAAnD;AACD;;;wCAEU;AACT,gBAAI,KAAKyG,WAAT,EAAsB;AACpB,+BAAU,KAAKnE,IAAf,sBAA+B,KAAKmE,WAApC;AACD;;AACD,mBAAO,KAAKnE,IAAZ;AACD;;;wCAEU;AACT,gBAAMyD,CAAC,GAAG,mCAAM,CAAC,KAAKT,IAAN,CAAhB;AACA,mBAAOS,CAAC,CAAC0K,MAAF,CAAS,WAAT,CAAP;AACD;;;wCAEU;AACT,gBAAM1K,CAAC,GAAG,mCAAM,CAAC,KAAKT,IAAN,CAAhB;AACA,mBAAOS,CAAC,CAAC0K,MAAF,CAAS,OAAT,CAAP;AACD;;;qCAEO;AACN,gBAAMC,GAAG,GAAG,mCAAM,EAAlB;AACA,mBAAOA,GAAG,CAACC,OAAJ,CAAY,mCAAM,CAAC,KAAKrL,IAAN,CAAlB,CAAP;AACD;;;iCAEa/B,M,EAAe;AAC3B,gBAAMH,YAAY,GAAG,IAAID,KAAJ,EAArB;AACA,gEAAKI,MAAL,EAAa,UAACE,KAAD,EAAkB;AAC7B,kBAAMmN,cAAc,GAAG,oDAAKxN,YAAL,EAAmB,UAACyN,WAAD,EAAwB;AAChE,uBACEA,WAAW,CAACvO,IAAZ,KAAqBmB,KAAK,CAACnB,IAA3B,IACAuO,WAAW,CAACvJ,OAAZ,KAAwB7D,KAAK,CAAC6D,OAD9B,IAEAuJ,WAAW,CAACpK,WAAZ,KAA4BhD,KAAK,CAACgD,WAFlC,IAGAoK,WAAW,CAACvN,IAAZ,KAAqBG,KAAK,CAACH,IAJ7B;AAMD,eAPsB,CAAvB;;AAQA,kBAAIsN,cAAc,KAAKpL,SAAvB,EAAkC;AAChCpC,4BAAY,CAACqB,IAAb,CAAkBhB,KAAlB;AACD;AACF,aAZD;AAaA,mBAAOL,YAAP;AACD;;;;;;UAMU0N,Y;;;;;;;gCACLP,I,EAAS;AACb,gBAAM9M,KAAK,GAAG,IAAI+M,KAAJ,EAAd;AACA/M,iBAAK,CAACzD,EAAN,GAAWuQ,IAAI,CAACvQ,EAAhB;AACAyD,iBAAK,CAACnB,IAAN,GAAaiO,IAAI,CAACjO,IAAlB;AACAmB,iBAAK,CAACgD,WAAN,GAAoB8J,IAAI,CAAC9J,WAAzB;AACA,gBAAMV,CAAC,GAAG,mCAAM,CAACwK,IAAI,CAACjL,IAAN,CAAhB;AACA7B,iBAAK,CAAC6B,IAAN,GAAaS,CAAC,CAACW,MAAF,EAAb,CANa,CAOb;;AACAjD,iBAAK,CAAC6D,OAAN,GAAgBvB,CAAC,CAACgL,UAAF,EAAhB;AACAtN,iBAAK,CAACH,IAAN,GAAayC,CAAC,CAACG,KAAF,KAAY,EAAZ,GAAiBH,CAAC,CAACM,OAAF,EAA9B;AACA5C,iBAAK,CAACmC,QAAN,GAAiB2K,IAAI,CAAC3K,QAAtB;AACAnC,iBAAK,CAAC8G,UAAN,GAAmBgG,IAAI,CAAChG,UAAxB;AACA9G,iBAAK,CAACuD,QAAN,GAAiBuJ,IAAI,CAACvJ,QAAtB;AACA,mBAAOvD,KAAP;AACD;;;;;;;yBAfUqN,Y;AAAY,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACV1B,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;AClEzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAGa4B,W;;;;UAaAC,kB;;;;;;;gCACLV,I,EAAS;AACb,gBAAM/F,WAAW,GAAG,IAAIwG,WAAJ,EAApB;AACAxG,uBAAW,CAAClI,IAAZ,GAAmBiO,IAAI,CAACjO,IAAxB;AACAkI,uBAAW,CAACzC,KAAZ,GAAoBwI,IAAI,CAACxI,KAAzB;AACAyC,uBAAW,CAACN,KAAZ,GAAoBqG,IAAI,CAACrG,KAAzB;AACAM,uBAAW,CAACL,MAAZ,GAAqBoG,IAAI,CAACpG,MAA1B;AACAK,uBAAW,CAACJ,GAAZ,GAAkBmG,IAAI,CAACnG,GAAvB;AACAI,uBAAW,CAACH,IAAZ,GAAmBkG,IAAI,CAAClG,IAAxB;AACAG,uBAAW,CAACC,OAAZ,GAAsB8F,IAAI,CAAC9F,OAA3B;AACA,mBAAOD,WAAP;AACD;;;;;;;yBAXUyG,kB;AAAkB,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;wEAEDA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACV7B,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;AChB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIa8B,M,GAOX,gBAAY5O,IAAZ,EAA0BrB,IAA1B,EAAwC;AAAA;;AACtC,aAAKqB,IAAL,GAAYA,IAAZ;AACA,aAAKrB,IAAL,GAAYA,IAAZ;AACD,O;;UAMUkQ,a;AACX,+BAAoBC,SAApB,EAA6C;AAAA;;AAAzB,eAAAA,SAAA,GAAAA,SAAA;AAA2B;;;;gCACzCb,I,EAAS;AACb,gBAAMc,CAAC,GAAG,IAAIH,MAAJ,CAAWX,IAAI,CAACjO,IAAhB,EAAsBiO,IAAI,CAACtP,IAA3B,CAAV;AACAoQ,aAAC,CAACrR,EAAF,GAAOuQ,IAAI,CAACvQ,EAAZ;AACAqR,aAAC,CAACpI,WAAF,GAAgBsH,IAAI,CAACtH,WAArB;;AACA,gBAAIsH,IAAI,CAACnO,IAAL,IAAamO,IAAI,CAACnO,IAAL,CAAUgH,MAAV,GAAmB,CAApC,EAAuC;AACrCiI,eAAC,CAACjP,IAAF,GAAS,KAAKgP,SAAL,CAAeE,8BAAf,CACPf,IAAI,CAACnO,IADE,CAAT;AAGD,aAJD,MAIO;AACLiP,eAAC,CAACjP,IAAF,GAAS,IAAT;AACD;;AACD,mBAAOiP,CAAP;AACD;;;;;;;yBAdUF,a,EAAa,8H;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACV/B,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;ACpB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIamC,I,GASX,cAAYxJ,KAAZ,EAA2B;AAAA;;AACzB,aAAKA,KAAL,GAAaA,KAAb;AACD,O;;UAMUyJ,W;;;;;;;gCACLjB,I,EAAS;AACb,gBAAMkB,CAAC,GAAG,IAAIF,IAAJ,CAAShB,IAAI,CAACxI,KAAd,CAAV;AACA0J,aAAC,CAACzR,EAAF,GAAOuQ,IAAI,CAACvQ,EAAZ;AACAyR,aAAC,CAACnP,IAAF,GAASiO,IAAI,CAACjO,IAAd;AACAmP,aAAC,CAACC,QAAF,GAAanB,IAAI,CAACmB,QAAlB;AACAD,aAAC,CAAC7F,MAAF,GAAW2E,IAAI,CAAC3E,MAAhB;AACA,mBAAO6F,CAAP;AACD;;;;;;;yBARUD,W;AAAW,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVpC,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;ACpBxB;AAAA;;;AAAA;AAAA;AAAA;;UAAauC,I,GAIX,cAAYC,MAAZ,EAA4B;AAAA;;AAF5B,aAAArO,MAAA,GAAkB,IAAIJ,KAAJ,EAAlB;AAGE,aAAKyO,MAAL,GAAcA,MAAd;AACD,O;;;;;;;;;;;;;;;;;ACRH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaC,qB;AAIX,uCACU5O,MADV,EAEU6O,IAFV,EAGU/P,aAHV,EAGsC;AAAA;;AAF5B,eAAAkB,MAAA,GAAAA,MAAA;AACA,eAAA6O,IAAA,GAAAA,IAAA;AACA,eAAA/P,aAAA,GAAAA,aAAA;AAER,eAAKgQ,WAAL,GAAmB,IAAI,oDAAJ,CACjBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADiB,CAAnB;AAGA,eAAK1G,IAAL,GAAY,KAAKsG,WAAL,CAAiBK,YAAjB,EAAZ;AACD;;;;gCAMKV,Q,EAAkB3J,K,EAAemD,Q,EAAkB;AAAA;;AACvD,gBAAMO,IAAI,GAAG,IAAI,iDAAJ,CAAS1D,KAAT,CAAb;AACA0D,gBAAI,CAACP,QAAL,GAAgBA,QAAhB;AACAO,gBAAI,CAACiG,QAAL,GAAgBA,QAAhB;AACA,mBAAO,KAAKI,IAAL,CACJO,IADI,WACU,yEAAYzC,MADtB,oBAC6CnE,IAD7C,EAEJwE,IAFI,CAGH,2DAAI,UAACqC,YAAD,EAAwB;AAC1B;AACAA,0BAAY,CAAC7C,QAAb,GAAwB8C,MAAM,CAACC,IAAP,CAAYzK,KAAK,GAAG,GAAR,GAAcmD,QAA1B,CAAxB;AACAgH,0BAAY,CAACO,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeJ,YAAf,CAA7B;;AACA,qBAAI,CAACP,WAAL,CAAiBxC,IAAjB,CAAsB+C,YAAtB;;AACA,qBAAOA,YAAP;AACD,aAND,CAHG,CAAP;AAWD;;;mCAEQ;AACP;AACAJ,wBAAY,CAACS,UAAb,CAAwB,MAAxB;AACA,iBAAKZ,WAAL,CAAiBxC,IAAjB,CAAsB,IAAtB;AACA,iBAAKtM,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,KAAKlC,aAAL,CAAmB6E,kBAAnB,CAAsC3F,IAAvC,EAA6C,OAA7C,CAArB;AACD;;;8BA1BmB;AAClB,mBAAO,KAAK8Q,WAAL,CAAiB9L,KAAxB;AACD;;;;;;;yBAjBU4L,qB,EAAqB,8G,EAAA,uH,EAAA,qH;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBADR;;;;;wEACbA,qB,EAAqB;gBADjC,wDACiC;iBADtB;AAAEzC,sBAAU,EAAE;AAAd,W;AACsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACXlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOawD,Y;AACX,8BAAoBd,IAApB,EAA8Ce,OAA9C,EAAqE;AAAA;;AAAjD,eAAAf,IAAA,GAAAA,IAAA;AAA0B,eAAAe,OAAA,GAAAA,OAAA;AAAyB;;;;sCAE9D;AAAA;;AACP,mBAAO,KAAKf,IAAL,CAAU9L,GAAV,WAAiB,yEAAY4J,MAA7B,qBAAqDK,IAArD,EACL;AACA,uEAAI,UAAC7E,IAAD;AAAA,qBAAiBA,IAAI,CAACvL,GAAL,CAAS,UAAC0Q,IAAD;AAAA,uBAAU,OAAI,CAACsC,OAAL,CAAaC,KAAb,CAAmBvC,IAAnB,CAAV;AAAA,eAAT,CAAjB;AAAA,aAAJ,CAFK,CAAP;AAID;;;sCAEWvQ,E,EAAU;AACpB2M,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC5M,EAAjC;AACA,mBAAO,KAAK8R,IAAL,qBAAoB,yEAAYlC,MAAhC,4BAAwD5P,EAAxD,EAAP;AACD;;;sCAEWmI,O,EAAe;AAAA;;AACzB,mBAAO,KAAK2J,IAAL,CACJO,IADI,WACI,yEAAYzC,MADhB,qBACwC;AAAE3H,kBAAI,EAAEE;AAAR,aADxC,EAEJ8H,IAFI,EAGH;AACA,uEAAI,UAAC7E,IAAD;AAAA,qBAAU,OAAI,CAACyH,OAAL,CAAaC,KAAb,CAAmB1H,IAAnB,CAAV;AAAA,aAAJ,CAJG,CAAP;AAMD;;;;;;;yBAtBUwH,Y,EAAY,uH,EAAA,kH;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBADC;;;;;wEACbA,Y,EAAY;gBADxB,wDACwB;iBADb;AAAExD,sBAAU,EAAE;AAAd,W;AACa,U;;;;;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYa2D,Y;AACX,8BACUjB,IADV,EAEUe,OAFV,EAGUG,kBAHV,EAGgD;AAAA;;AAFtC,eAAAlB,IAAA,GAAAA,IAAA;AACA,eAAAe,OAAA,GAAAA,OAAA;AACA,eAAAG,kBAAA,GAAAA,kBAAA;AACN;AAEJ;;;;;;;;oCAIUtB,Q,EAAgB;AAAA;;AACxB,mBAAO,KAAKI,IAAL,CACJ9L,GADI,WACG,yEAAY4J,MADf,sBACiC8B,QADjC,cAEJzB,IAFI,EAGH;AACA,uEAAI,UAAC7E,IAAD;AAAA,qBAAiBA,IAAI,CAACvL,GAAL,CAAS,UAAA0Q,IAAI;AAAA,uBAAI,OAAI,CAACsC,OAAL,CAAaC,KAAb,CAAmBvC,IAAnB,CAAJ;AAAA,eAAb,CAAjB;AAAA,aAAJ,CAJG,CAAP;AAMD;;;sCAEW9M,K,EAAa;AAAA;;AACvB,mBAAO,KAAKqO,IAAL,CAAUO,IAAV,WAAkB,yEAAYzC,MAA9B,qBAAsDnM,KAAtD,EAA6DwM,IAA7D,EACL;AACA,uEAAI,UAAA7E,IAAI;AAAA,qBAAI,OAAI,CAACyH,OAAL,CAAaC,KAAb,CAAmB1H,IAAnB,CAAJ;AAAA,aAAR,CAFK,CAAP;AAID;;;sCAEWpL,E,EAAU;AACpB,mBAAO,KAAK8R,IAAL,qBAAoB,yEAAYlC,MAAhC,4BAAwD5P,EAAxD,EAAP;AACD;;;sCAEWA,E,EAAYgH,Q,EAAiB;AAAA;;AACvC,mBAAO,KAAK8K,IAAL,CACJmB,GADI,WAEA,yEAAYrD,MAFZ,4BAEoC5P,EAFpC,uBAEmDgH,QAFnD,GAGHvD,KAHG,EAKJwM,IALI,EAMH;AACA,uEAAI,UAAA7E,IAAI;AAAA,qBAAI,OAAI,CAACyH,OAAL,CAAaC,KAAb,CAAmB1H,IAAnB,CAAJ;AAAA,aAAR,CAPG,CAAP;AASD;;;yCAEcZ,W,EAAyB;AAAA;;AACtC,mBAAO,KAAKsH,IAAL,CACJO,IADI,WAEA,yEAAYzC,MAFZ,qBAE6BpF,WAAW,CAACC,OAFzC,mBAGHD,WAHG,EAKJyF,IALI,EAMH;AACA,uEAAI,UAAA7E,IAAI;AAAA,qBAAI,OAAI,CAAC4H,kBAAL,CAAwBF,KAAxB,CAA8B1H,IAA9B,CAAJ;AAAA,aAAR,CAPG,CAAP;AASD;;;sCAEW3H,K,EAAY;AACtB,gBAAMyP,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,iBAAtB;AACA,iBAAKrB,IAAL,CACG9L,GADH,CACOvC,KAAK,CAAC2P,YAAN,EADP,EAC6B;AACzBF,qBAAO,EAAEA,OADgB;AAEzBG,0BAAY,EAAE;AAFW,aAD7B,EAKGlR,SALH,CAKa,UAAAmR,OAAO,EAAI;AACpB,kBAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,OAAD,CAAT,EAAoB;AAAE/K,oBAAI,EAAE;AAAR,eAApB,CAAb;AACA,wEAAOgL,IAAP,EAAa,qBAAb;AACD,aARH;AASD;;;;;;;yBAnEUR,Y,EAAY,uH,EAAA,kH,EAAA,8H;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBADC;;;;;wEACbA,Y,EAAY;gBADxB,wDACwB;iBADb;AAAE3D,sBAAU,EAAE;AAAd,W;AACa,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaqE,a;AAKX,+BACU3B,IADV,EAEU4B,aAFV,EAGUC,WAHV,EAGkC;AAAA;;AAFxB,eAAA7B,IAAA,GAAAA,IAAA;AACA,eAAA4B,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AALF,eAAAC,qBAAA,GAAsC,IAAtC;AAON,eAAKC,oBAAL,GAA4B,IAAI,oDAAJ,CAA4B,IAA5B,CAA5B;AACA,eAAK3R,aAAL,GAAqB,KAAK2R,oBAAL,CAA0BzB,YAA1B,EAArB;AACD;;;;;AAMD;;;;;+BAKKtO,U,EAAoB;AAAA;;AACvB,gBACE,KAAK8C,kBAAL,IACA,KAAKA,kBAAL,CAAwB3F,IAAxB,KAAiC6C,UAFnC,EAGE;AACA,mBAAK+P,oBAAL,CAA0BtE,IAA1B,CAA+B,KAAK3I,kBAApC;AACD,aALD,MAKO;AACL;AACA,mBAAKjD,SAAL,CAAeG,UAAf,EAA2B3B,SAA3B,CAAqC,UAACH,MAAD,EAAoB;AACvD,uBAAI,CAAC6R,oBAAL,CAA0BtE,IAA1B,CAA+BvN,MAA/B;AACD,eAFD;AAGD;AACF;;;oCAES8B,U,EAAkB;AAAA;;AAC1B,mBAAO,KAAKgO,IAAL,CACJ9L,GADI,WACS,sEAAY4J,MADrB,sBACuC9L,UADvC,GAEJmM,IAFI,EAGH;AACA,uEAAI,UAAAM,IAAI;AAAA,qBAAI,OAAI,CAACmD,aAAL,CAAmBZ,KAAnB,CAAyBvC,IAAzB,CAAJ;AAAA,aAAR,CAJG,CAAP;AAMD;;;8BAEGmB,Q,EAAgB;AAAA;;AAClB,mBAAO,KAAKI,IAAL,CACJ9L,GADI,WACS,sEAAY4J,MADrB,6BAC8C8B,QAD9C,GAEJzB,IAFI,EAGH;AACA,uEAAI,UAAAM,IAAI;AAAA,qBAAI,OAAI,CAACmD,aAAL,CAAmBZ,KAAnB,CAAyBvC,IAAzB,CAAJ;AAAA,aAAR,CAJG,CAAP;AAMD;;;iCAEMvO,M,EAAc;AAAA;;AACnB,mBAAO,KAAK8P,IAAL,CACJmB,GADI,WACS,sEAAYrD,MADrB,6BAC8C5N,MAAM,CAAChC,EADrD,GAC2DgC,MAD3D,EAEJiO,IAFI,EAGH;AACA,uEAAI,UAAAM,IAAI;AAAA,qBAAI,OAAI,CAACmD,aAAL,CAAmBZ,KAAnB,CAAyBvC,IAAzB,CAAJ;AAAA,aAAR,CAJG,EAKH,2DAAI,UAACvO,MAAD,EAAoB;AACtB,kBAAIA,MAAM,CAAChC,EAAP,KAAc,OAAI,CAAC4G,kBAAL,CAAwB5G,EAA1C,EAA8C;AAC5C,uBAAI,CAAC6T,oBAAL,CAA0BtE,IAA1B,CAA+BvN,MAA/B;AACD;AACF,aAJD,CALG,CAAP;AAWD;;;iCAEMA,M,EAAc;AAAA;;AACnB,mBAAO,KAAK8P,IAAL,CAAUO,IAAV,WAAwB,sEAAYzC,MAApC,eAAsD5N,MAAtD,EAA8DiO,IAA9D,EACL;AACA,uEAAI,UAAAM,IAAI;AAAA,qBAAI,OAAI,CAACmD,aAAL,CAAmBZ,KAAnB,CAAyBvC,IAAzB,CAAJ;AAAA,aAAR,CAFK,CAAP;AAID;;;kCAEMmB,Q,EAAgB;AACrB,mBAAO,KAAKI,IAAL,qBAAoB,sEAAYlC,MAAhC,6BAAyD8B,QAAzD,EAAP;AACD;;;mCAEQA,Q,EAAgB;AAAA;;AACvB,mBAAO,KAAKI,IAAL,CACJ9L,GADI,WACW,sEAAY4J,MADvB,6BACgD8B,QADhD,aAEJzB,IAFI,EAGH;AACA,uEAAI,UAAC7E,IAAD;AAAA,qBAAiBA,IAAI,CAACvL,GAAL,CAAS,UAAA0Q,IAAI;AAAA,uBAAI,OAAI,CAACoD,WAAL,CAAiBb,KAAjB,CAAuBvC,IAAvB,CAAJ;AAAA,eAAb,CAAjB;AAAA,aAAJ,CAJG,CAAP;AAMD;;;kCAEO9E,I,EAAYiG,Q,EAAgB;AAAA;;AAClC,mBAAO,KAAKI,IAAL,CACJO,IADI,WACY,sEAAYzC,MADxB,sBAC0C8B,QAD1C,aAC4DjG,IAD5D,EAEJwE,IAFI,EAGH;AACA,uEAAI,UAAAM,IAAI;AAAA,qBAAI,OAAI,CAACoD,WAAL,CAAiBb,KAAjB,CAAuBvC,IAAvB,CAAJ;AAAA,aAAR,CAJG,CAAP;AAMD;AAED;;;;;;;oCAKEuD,W,EACAC,oB,EAA4C;AAAA;;AAE5C;AACA,gBAAI,KAAKH,qBAAT,EAAgC;AAC9B,mBAAKA,qBAAL,CAA2B3G,WAA3B;AACD;;AACD,iBAAK2G,qBAAL,GAA6B,KAAKjQ,SAAL,CAAemQ,WAAf,EAA4B3R,SAA5B,CAC3B,UAAA6R,yBAAyB,EAAI;AAC3B;AACA,kBACEA,yBAAyB,IACzBA,yBAAyB,CAAC/S,IAA1B,KAAmC6S,WAFrC,EAGE;AACAC,oCAAoB,CAAC/H,SAArB,GAAiC,IAAjC;;AACA,uBAAI,CAAC4H,qBAAL,CAA2B3G,WAA3B;;AACA,uBAAI,CAAC2G,qBAAL,GAA6B,IAA7B;AACD,eAPD,MAOO;AACLG,oCAAoB,CAAC/H,SAArB,GAAiC,KAAjC;;AACA,uBAAI,CAAC4H,qBAAL,CAA2B3G,WAA3B;;AACA,uBAAI,CAAC2G,qBAAL,GAA6B,IAA7B;AACD;AACF,aAf0B,EAgB3B,UAAA7P,KAAK,EAAI;AACPgQ,kCAAoB,CAAC/H,SAArB,GAAiC,KAAjC;;AACA,qBAAI,CAAC4H,qBAAL,CAA2B3G,WAA3B;;AACA,qBAAI,CAAC2G,qBAAL,GAA6B,IAA7B;AACD,aApB0B,CAA7B;AAsBD;;;8BAtH4B;AAC3B,mBAAO,KAAKC,oBAAL,CAA0B5N,KAAjC;AACD;;;;;;;yBAhBUwN,a,EAAa,uH,EAAA,oH,EAAA,gH;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBADA;;;;;wEACbA,a,EAAa;gBADzB,wDACyB;iBADd;AAAErE,sBAAU,EAAE;AAAd,W;AACc,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACT1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa6E,W;AACX,6BAAoBnC,IAApB,EAA8C6B,WAA9C,EAAwE;AAAA;;AAApD,eAAA7B,IAAA,GAAAA,IAAA;AAA0B,eAAA6B,WAAA,GAAAA,WAAA;AAA4B;;;;kCAEnEO,M,EAAc;AACnB,mBAAO,KAAKpC,IAAL,qBAAoB,sEAAYlC,MAAhC,2BAAuDsE,MAAvD,EAAP;AACD;;;mCAEQA,M,EAAc;AAAA;;AACrB,mBAAO,KAAKpC,IAAL,CACJmB,GADI,WACG,sEAAYrD,MADf,2BACsCsE,MADtC,mBAC4D,IAD5D,EAEJjE,IAFI,EAGH;AACA,uEAAI,UAAAM,IAAI;AAAA,qBAAI,OAAI,CAACoD,WAAL,CAAiBb,KAAjB,CAAuBvC,IAAvB,CAAJ;AAAA,aAAR,CAJG,CAAP;AAMD;;;qCAEU2D,M,EAAc;AAAA;;AACvB,mBAAO,KAAKpC,IAAL,CACJmB,GADI,WACG,sEAAYrD,MADf,2BACsCsE,MADtC,oBAC6D,IAD7D,EAEJjE,IAFI,EAGH;AACA,uEAAI,UAAAM,IAAI;AAAA,qBAAI,OAAI,CAACoD,WAAL,CAAiBb,KAAjB,CAAuBvC,IAAvB,CAAJ;AAAA,aAAR,CAJG,CAAP;AAMD;;;;;;;yBAvBU0D,W,EAAW,uH,EAAA,gH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBADE;;;;;wEACbA,W,EAAW;gBADvB,wDACuB;iBADZ;AAAE7E,sBAAU,EAAE;AAAd,W;AACY,U;;;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAM+E,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzBxE,cAAM,EAAE;AAFiB,OAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYwE,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAnE,GAAG;AAAA,eAAIvD,OAAO,CAAC5I,KAAR,CAAcmM,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { LoginComponent } from \"./components/login/login.component\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { BasicAuthInterceptor } from \"./helpers/basic-auth.interceptor\";\r\nimport { ErrorInterceptor } from \"./helpers/error.interceptor\";\r\nimport { AuthGuard } from \"./helpers/auth.guard\";\r\nimport { EventsComponent } from \"./components/events/events.component\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { TenantComponent } from \"./components/tenant/tenant.component\";\r\nimport { ErrorComponent } from \"./components/error/error.component\";\r\nimport { RegistrationComponent } from \"./components/registration/registration.component\";\r\nimport { TenantRegistrationComponent } from \"./components/tenant-registration/tenant-registration.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"registrierung\",\r\n    component: TenantRegistrationComponent,\r\n  },\r\n  {\r\n    path: \"fehler/:errortype\",\r\n    component: ErrorComponent,\r\n  },\r\n  {\r\n    path: \":tenantPath\",\r\n    children: [\r\n      {\r\n        path: \"login\",\r\n        component: LoginComponent,\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: \"verwaltung\",\r\n        component: TenantComponent,\r\n        canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: \"events\",\r\n        component: EventsComponent,\r\n      },\r\n      {\r\n        path: \"registrierung\",\r\n        component: RegistrationComponent,\r\n      },\r\n      {\r\n        path: \"**\",\r\n        redirectTo: \"events\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"**\",\r\n    redirectTo: \"registrierung\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport * as moment from 'moment';\r\nimport { TenantService } from './services/tenant.service';\r\nimport { Tenant } from './models/tenant';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  serverResult: '';\r\n  receivedEmail: '';\r\n  tenant: Tenant = null;\r\n  navbarLogo: string = 'assets/cvjm-triangles-flipped.png';\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private tenantService: TenantService\r\n  ) {\r\n    moment.locale('de');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tenantService.currentTenant.subscribe((tenant: Tenant) => {\r\n      if (tenant) {\r\n        this.tenant = tenant;\r\n        if (this.tenant.logo) {\r\n          this.navbarLogo = this.tenant.logo;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authenticationService.userValue !== null;\r\n  }\r\n\r\n  username(): string {\r\n    return this.authenticationService.userValue.name;\r\n  }\r\n\r\n  logout(): void {\r\n    this.authenticationService.logout();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a\r\n    class=\"nav-link nav-logo\"\r\n    *ngIf=\"tenant\"\r\n    [routerLink]=\"[tenant.path, 'events']\"\r\n  >\r\n    <img [src]=\"navbarLogo\" />\r\n  </a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n    *ngIf=\"isLoggedIn()\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn() && tenant\">\r\n    <li class=\"nav-item\">\r\n      <a\r\n        class=\"nav-link\"\r\n        [routerLink]=\"[tenant.path, 'login']\"\r\n        routerLinkActive=\"active\"\r\n        >Login</a\r\n      >\r\n    </li>\r\n  </ul>\r\n\r\n  <div\r\n    class=\"collapse navbar-collapse\"\r\n    id=\"navbarSupportedContent\"\r\n    *ngIf=\"isLoggedIn()\"\r\n  >\r\n    <ul class=\"navbar-nav mr-auto\" *ngIf=\"tenant\">\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[tenant.path, 'events']\"\r\n          routerLinkActive=\"active\"\r\n          >Events</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[tenant.path, 'dashboard']\"\r\n          routerLinkActive=\"active\"\r\n          >Dashboard</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          [routerLink]=\"[tenant.path, 'verwaltung']\"\r\n          routerLinkActive=\"active\"\r\n          >Verwaltung</a\r\n        >\r\n      </li>\r\n      <!--\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/emails\" routerLinkActive=\"active\"\r\n          >Mailverteiler</a\r\n        >\r\n      </li>-->\r\n    </ul>\r\n    <span class=\"mr-auto\">\r\n      angemeldet als:&nbsp;<u>{{ username() }}</u>\r\n    </span>\r\n    <button\r\n      class=\"btn btn-outline-danger my-2 my-sm-0 ml-3\"\r\n      *ngIf=\"tenant\"\r\n      (click)=\"logout()\"\r\n    >\r\n      Logout\r\n    </button>\r\n  </div>\r\n</nav>\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\" style=\"margin-top: 30px\">\r\n    <div class=\"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<footer>\r\n  <div class=\"logo-container\">\r\n    <img\r\n      src=\"assets/cvjm-triangles.png\"\r\n      style=\"height: 220px; background-color: white; float: right\"\r\n    />\r\n  </div>\r\n  <div class=\"credits\">\r\n    <small>zur Verfügung gestellt von</small>&nbsp;<br />\r\n    <a href=\"https://s4-consulting.de\"\r\n      >Stefan Strobel Software & Service Consulting</a\r\n    >\r\n  </div>\r\n</footer>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { EmailsComponent } from \"./components/emails/emails.component\";\r\nimport { EventsComponent } from \"./components/events/events.component\";\r\nimport { TenantComponent } from \"./components/tenant/tenant.component\";\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { TenantRegistrationComponent } from './components/tenant-registration/tenant-registration.component';\r\nimport { ErrorComponent } from './components/error/error.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    EmailsComponent,\r\n    EventsComponent,\r\n    TenantComponent,\r\n    RegistrationComponent,\r\n    TenantRegistrationComponent,\r\n    ErrorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Week } from 'src/app/models/week';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { Event } from '../../models/event';\r\nimport * as moment from 'moment';\r\nimport { filter, sortBy, each, find } from 'lodash';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { forkJoin } from 'rxjs';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  private allEvents: Event[];\r\n  weeks: Week[] = new Array<Week>();\r\n  uniqueEvents: Event[] = new Array<Event>();\r\n  timeColumns: string[] = new Array<string>();\r\n  newEventForm: FormGroup;\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private tenantService: TenantService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  eventAt(time: string, events: Event[]): Event {\r\n    const match = find(events, (event: Event) => {\r\n      return event.displayTime() === time;\r\n    });\r\n    return match;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // load the tenant information and redirect in case tenant path does not exist:\r\n    this.tenantService\r\n      .getByPath(this.route.snapshot.params.tenantPath)\r\n      .subscribe(null, error => {\r\n        if (\r\n          error === 'Not Found' ||\r\n          (error instanceof HttpErrorResponse && error.status === 404)\r\n        ) {\r\n          this.router.navigate(['fehler', 'account-not-found']);\r\n        }\r\n      });\r\n    this.tenantService.currentTenant.subscribe((tenant: Tenant) => {\r\n      if (tenant) {\r\n        this.loadAllEvents(tenant);\r\n      }\r\n    });\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n    this.createNewEventForm();\r\n  }\r\n\r\n  currentCW(): number {\r\n    return moment().isoWeek();\r\n  }\r\n\r\n  loadAllEvents(tenant: Tenant): void {\r\n    this.weeks = new Array<Week>();\r\n    this.uniqueEvents = new Array<Event>();\r\n    this.timeColumns = new Array<string>();\r\n    this.eventService.getEvents(tenant.id).subscribe((events: Event[]) => {\r\n      this.allEvents = events;\r\n      this.uniqueEvents = Event.unique(this.allEvents);\r\n      this.uniqueEvents = sortBy(this.uniqueEvents, ['weekDay', 'time']);\r\n      each(this.uniqueEvents, (event: Event) => {\r\n        this.timeColumns.push(event.displayTime());\r\n      });\r\n      // prepare the weeks, calculate the past 3 weeks until the end of the year:\r\n      const today = moment();\r\n      const startOfCurrentWeek = today.clone().startOf('week');\r\n      const endOfCurrentWeek = today.clone().endOf('week');\r\n      for (let kw = today.week() - 3; kw <= 52; kw++) {\r\n        const week = new Week(kw);\r\n        let weekStart: any, weekEnd: any;\r\n        if (kw < today.week()) {\r\n          weekStart = startOfCurrentWeek\r\n            .clone()\r\n            .subtract(today.week() - kw, 'weeks');\r\n          weekEnd = endOfCurrentWeek\r\n            .clone()\r\n            .subtract(today.week() - kw, 'weeks');\r\n        } else {\r\n          weekStart = startOfCurrentWeek\r\n            .clone()\r\n            .add(kw - today.week(), 'weeks');\r\n          weekEnd = endOfCurrentWeek.clone().add(kw - today.week(), 'weeks');\r\n        }\r\n        // add all events for this week\r\n        week.events = filter(events, (event: Event) => {\r\n          return moment(event.date).isBetween(\r\n            weekStart,\r\n            weekEnd,\r\n            undefined,\r\n            '[]'\r\n          );\r\n        });\r\n        this.weeks.push(week);\r\n      }\r\n    });\r\n  }\r\n\r\n  createNewEventForm(): void {\r\n    this.newEventForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      class: new FormControl(''),\r\n      fromDate: new FormControl('', Validators.required),\r\n      time: new FormControl('', Validators.required),\r\n      maxSeats: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  addNewEvent(): void {\r\n    if (!this.newEventForm.valid) {\r\n      this.newEventForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const m = moment(this.newEventForm.get('fromDate').value);\r\n    const time = <string>this.newEventForm.get('time').value;\r\n    m.hours(parseInt(time.split(':')[0]));\r\n    m.minutes(parseInt(time.split(':')[1]));\r\n    const currentWeek = m.week();\r\n    // add the event for all following calendar weeks until the end of the year:\r\n    const observables = [];\r\n    for (let cw = currentWeek; cw <= 52; cw++) {\r\n      const event = new Event();\r\n      event.name = this.newEventForm.get('name').value;\r\n      event.targetClass = this.newEventForm.get('class').value;\r\n      event.maxSeats = this.newEventForm.get('maxSeats').value;\r\n      event.date = m.toDate();\r\n      observables.push(this.eventService.createEvent(event));\r\n      // add 1 week each\r\n      m.add(1, 'weeks');\r\n    }\r\n    forkJoin(observables).subscribe(() => {\r\n      this.loadAllEvents(this.tenantService.currentTenantValue);\r\n    });\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.newEventForm.get(formControlName).invalid &&\r\n      this.newEventForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  toggleDisabled(event: Event): void {\r\n    event.disabled = !event.disabled;\r\n    // update it on server side, too\r\n    this.eventService.setDisabled(event.id, event.disabled).subscribe();\r\n  }\r\n\r\n  deleteEventSeries(uniqueEventSeriesIndex: number): void {\r\n    if (\r\n      confirm(\r\n        'Wollen Sie dieses Serienevent wirklich löschen? Alle Daten aller einzelnen Events gehen unwiderbringlich verloren!'\r\n      )\r\n    ) {\r\n      const eventToDelete = this.uniqueEvents[uniqueEventSeriesIndex];\r\n      // delete all event instances\r\n      const eventsToDelete = filter(this.allEvents, (event: Event) => {\r\n        return (\r\n          event.name === eventToDelete.name &&\r\n          event.weekDay === eventToDelete.weekDay &&\r\n          event.time === eventToDelete.time\r\n        );\r\n      });\r\n      const observables = [];\r\n      each(eventsToDelete, (event: Event) => {\r\n        observables.push(this.eventService.deleteEvent(event.id));\r\n      });\r\n      forkJoin(observables).subscribe(() => {\r\n        this.loadAllEvents(this.tenantService.currentTenantValue);\r\n      });\r\n    }\r\n  }\r\n\r\n  downloadPdf(event: Event): void {\r\n    this.eventService.downloadPdf(event);\r\n  }\r\n}\r\n","<h2>Übersicht über alle anstehenden Events</h2>\r\n\r\n<div style=\"margin-top: 40px\">\r\n  <h5>Hier können Sie ein neues Reihenevent anlegen:</h5>\r\n  <form [formGroup]=\"newEventForm\" (ngSubmit)=\"addNewEvent()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6 col-md-4\" [ngClass]=\"{ invalid: isInvalid('name') }\">\r\n        <label for=\"name\">Event-Name</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          formControlName=\"name\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid('fromDate') }\"\r\n      >\r\n        <label for=\"fromDate\">frühester Termin</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"fromDate\"\r\n          type=\"date\"\r\n          formControlName=\"fromDate\"\r\n        />\r\n      </div>\r\n      <div class=\"col-12 col-md-4\" [ngClass]=\"{ invalid: isInvalid('class') }\">\r\n        <label for=\"targetClass\">für Klasse</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"targetClass\"\r\n          type=\"text\"\r\n          formControlName=\"class\"\r\n        />\r\n      </div>\r\n      <div class=\"col-6 col-md-4\" [ngClass]=\"{ invalid: isInvalid('time') }\">\r\n        <label for=\"name\">Startzeit</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"time\"\r\n          type=\"time\"\r\n          formControlName=\"time\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-6 col-md-4\"\r\n        [ngClass]=\"{ invalid: isInvalid('maxSeats') }\"\r\n      >\r\n        <label for=\"maxSeats\">max. Teilnehmer</label>\r\n        <br />\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"maxSeats\"\r\n          type=\"number\"\r\n          formControlName=\"maxSeats\"\r\n        />\r\n      </div>\r\n      <div class=\"col-12 col-md-4\">\r\n        <button\r\n          class=\"btn btn-block btn-outline-success\"\r\n          type=\"submit\"\r\n          style=\"margin-top: 32px\"\r\n        >\r\n          Event erstellen\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th style=\"width: 100px\">KW</th>\r\n      <th\r\n        style=\"width: 300px; text-align: center\"\r\n        *ngFor=\"let uniqueEvent of uniqueEvents\"\r\n      >\r\n        {{ uniqueEvent.displayName() }}\r\n        <br />\r\n        {{ uniqueEvent.displayTime() }}\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let week of weeks\">\r\n      <td [ngClass]=\"{ currentCW: week.number === currentCW() }\">\r\n        {{ week.number }}\r\n        <small *ngIf=\"week.number === currentCW()\"><br />aktuelle Woche</small>\r\n      </td>\r\n      <td\r\n        class=\"greyedOut\"\r\n        style=\"\r\n          border: 1px solid white;\r\n          height: 25px;\r\n          line-height: 25px;\r\n          text-align: center;\r\n        \"\r\n        [ngClass]=\"{\r\n          happening: eventAt(time, week.events) !== undefined,\r\n          unavailable:\r\n            eventAt(time, week.events) !== undefined &&\r\n            eventAt(time, week.events).takenSeats >=\r\n              eventAt(time, week.events).maxSeats\r\n        }\"\r\n        *ngFor=\"let time of timeColumns\"\r\n      >\r\n        <div\r\n          *ngIf=\"eventAt(time, week.events) !== undefined\"\r\n          [ngClass]=\"{ disabled: eventAt(time, week.events).disabled }\"\r\n          style=\"position: relative\"\r\n        >\r\n          {{ eventAt(time, week.events).displayDate() }}<br />\r\n          <small\r\n            >{{ eventAt(time, week.events).takenSeats }} /\r\n            {{ eventAt(time, week.events).maxSeats }} </small\r\n          ><i\r\n            class=\"fas fa-2x fa-file-pdf downloadIcon\"\r\n            (click)=\"downloadPdf(eventAt(time, week.events))\"\r\n            title=\"Download Teilnehmerliste\"\r\n          ></i>\r\n          <small\r\n            class=\"stateToggler\"\r\n            (click)=\"toggleDisabled(eventAt(time, week.events))\"\r\n          >\r\n            <i *ngIf=\"!eventAt(time, week.events).disabled\">aktiv</i>\r\n            <i *ngIf=\"eventAt(time, week.events).disabled\">inaktiv</i>\r\n          </small>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td></td>\r\n      <td *ngFor=\"let uniqueEvent of uniqueEvents; let i = index\">\r\n        <button\r\n          class=\"btn btn-sm btn-block btn-outline-danger my-2 my-sm-0\"\r\n          (click)=\"deleteEventSeries(i)\"\r\n        >\r\n          Löschen\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { EmailService } from \"src/app/services/email.service\";\nimport { Email } from \"src/app/models/email\";\nimport { reject, find } from \"lodash\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-emails\",\n  templateUrl: \"./emails.component.html\",\n  styleUrls: [\"./emails.component.scss\"],\n})\nexport class EmailsComponent implements OnInit {\n  emails: Email[] = new Array<Email>();\n  newEmailForm: FormGroup;\n\n  constructor(private emailService: EmailService) {}\n\n  ngOnInit() {\n    this.emailService.getEmails().subscribe((emails) => {\n      this.emails = emails;\n    });\n    this.newEmailForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n    });\n  }\n\n  delete(id: number): void {\n    this.emailService.deleteEmail(id).subscribe(() => {\n      this.emails = reject(this.emails, { id: id });\n    });\n  }\n\n  addEmail(): void {\n    if (this.newEmailForm.valid) {\n      const mail = this.newEmailForm.get(\"email\").value;\n      this.emailService.createEmail(mail).subscribe((email: Email) => {\n        // check that we don't have that email in the list already:\n        if (find(this.emails, { address: mail }) === undefined) {\n          this.emails.push(email);\n        }\n        this.newEmailForm.reset();\n      });\n    }\n  }\n}\n","<h2>Mailverteiler Liste</h2>\n<p>\n  Verwalten Sie hier die Email-Adressen, an die die Erinnerungen geschickt\n  werden.\n</p>\n\n<div *ngFor=\"let email of emails\" class=\"row emailEntry\">\n  <div class=\"col-8\">\n    {{ email.address }}\n  </div>\n  <div class=\"col-4\">\n    <button\n      class=\"float-right btn btn-sm btn-outline-danger\"\n      (click)=\"delete(email.id)\"\n    >\n      Email löschen\n    </button>\n  </div>\n</div>\n<hr />\n<form class=\"row\" [formGroup]=\"newEmailForm\" (ngSubmit)=\"addEmail()\">\n  <div class=\"col-8\">\n    <input type=\"text\" class=\"form-control\" formControlName=\"email\" />\n  </div>\n  <div class=\"col-4\">\n    <button class=\"btn btn-block btn-outline-success\" type=\"submit\">\n      Hinzufügen\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss'],\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n  errorTitle: string;\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    // extract the error type parameter and display it accordingly\r\n    const type = this.route.snapshot.params.errortype;\r\n    if (type === 'account-not-found') {\r\n      this.errorTitle = 'Pfad ungültig';\r\n      this.errorMessage = 'Die aufgerufene URL existiert nicht';\r\n    } else {\r\n      this.errorTitle = 'Fehler';\r\n      this.errorMessage = 'Es ist ein Fehler aufgetreten';\r\n    }\r\n  }\r\n}\r\n","<h2>{{errorTitle}}</h2>\r\n<div class=\"alert alert-danger mt-3 mb-3\">\r\n  {{ errorMessage }}\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { Week } from 'src/app/models/week';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { sortBy, each, filter, find, uniq, map } from 'lodash';\r\nimport * as moment from 'moment';\r\nimport { Event } from 'src/app/models/event';\r\nimport { Participant } from 'src/app/models/participant';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.scss'],\r\n})\r\nexport class EventsComponent implements OnInit {\r\n  week: Week = null;\r\n  eventsInTimeframe: Event[] = new Array<Event>();\r\n  timeColumns: string[] = new Array<string>();\r\n  registerForm: FormGroup;\r\n  selectedEvent: Event = null;\r\n  successfullyRegistered = false;\r\n  classOptions: string[] = null;\r\n  selectedClass: string = null;\r\n  consentText: string = null;\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private tenantService: TenantService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // load the tenant information and redirect in case tenant path does not exist:\r\n    this.tenantService\r\n      .getByPath(this.route.snapshot.params.tenantPath)\r\n      .subscribe(null, error => {\r\n        if (\r\n          error === 'Not Found' ||\r\n          (error instanceof HttpErrorResponse && error.status === 404)\r\n        ) {\r\n          this.router.navigate(['fehler', 'account-not-found']);\r\n        }\r\n      });\r\n    this.createRegisterForm();\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n    this.tenantService.currentTenant.subscribe((tenant: Tenant) => {\r\n      if (tenant) {\r\n        this.loadEvents();\r\n        this.consentText = tenant.consentText;\r\n        if (this.consentText && this.consentText.length > 0) {\r\n          // only add the form control if it is not existing yet\r\n          if (!this.registerForm.contains('consent')) {\r\n            this.registerForm.addControl(\r\n              'consent',\r\n              new FormControl(false, Validators.required)\r\n            );\r\n          }\r\n        } else {\r\n          this.registerForm.removeControl('consent');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  eventAt(time: string, events: Event[]): Event {\r\n    const match = find(events, (event: Event) => {\r\n      return event.displayTime() === time;\r\n    });\r\n    return match;\r\n  }\r\n\r\n  loadEvents(): void {\r\n    this.timeColumns = new Array<string>();\r\n    this.eventService\r\n      .getEvents(this.tenantService.currentTenantValue.id)\r\n      .subscribe((events: Event[]) => {\r\n        // filter out all events that are disabled\r\n        events = filter(events, { disabled: false });\r\n        this.eventsInTimeframe = this.eventsInNextWeek(events);\r\n        // first, check for what classes we have events:\r\n        this.classOptions = new Array<string>();\r\n        this.classOptions.push(\r\n          ...filter(\r\n            uniq(\r\n              map(this.eventsInTimeframe, 'targetClass').join(',').split(',')\r\n            ) as string[],\r\n            (targetClass: string) =>\r\n              targetClass !== null &&\r\n              targetClass.length > 0 &&\r\n              targetClass !== 'alle'\r\n          )\r\n        );\r\n        // sort the values\r\n        this.classOptions = this.classOptions.sort();\r\n        // add 'alle' at the top\r\n        this.classOptions.unshift('alle');\r\n        this.week = new Week(moment().isoWeek());\r\n      });\r\n  }\r\n\r\n  selectClass(className: string): void {\r\n    this.selectedClass = className;\r\n    this.selectedEvent = null;\r\n    this.registerForm.markAsUntouched();\r\n    this.week.events = <Event[]>(\r\n      filter(this.eventsInTimeframe, (event: Event) => {\r\n        if (className === 'alle') {\r\n          return true;\r\n        }\r\n        return event.targetClass.split(',').indexOf(className) >= 0;\r\n      })\r\n    );\r\n    this.week.events = sortBy(this.week.events, ['weekDay', 'time']);\r\n    this.timeColumns = [];\r\n    each(this.week.events, (event: Event) => {\r\n      this.timeColumns.push(event.displayTime());\r\n    });\r\n  }\r\n\r\n  eventsInNextWeek(events: Event[]): Event[] {\r\n    const today = moment();\r\n    const start = today.clone().startOf('week').add(1, 'week');\r\n    const end = today.clone().endOf('week').add(1, 'week');\r\n    return filter(events, (event: Event) => {\r\n      return moment(event.date).isBetween(start, end, undefined, '[]');\r\n    });\r\n  }\r\n\r\n  createRegisterForm(): void {\r\n    this.registerForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      phone: new FormControl('', Validators.required),\r\n      street: new FormControl('', Validators.required),\r\n      zip: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  availableSeatsText(event: Event): string {\r\n    const free = event.maxSeats - event.takenSeats;\r\n    if (free > 3) {\r\n      return `${free} freie Plätze`;\r\n    }\r\n    if (free > 1) {\r\n      return `nur ${free} freie Plätze`;\r\n    }\r\n    return `noch 1 freier Platz`;\r\n  }\r\n\r\n  selectEvent(event: Event): void {\r\n    this.registerForm.markAsUntouched();\r\n    if (this.selectedEvent === event) {\r\n      this.selectedEvent = null;\r\n    } else {\r\n      this.selectedEvent = event;\r\n    }\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.registerForm.get(formControlName).invalid &&\r\n      this.registerForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  registerParticipant(): void {\r\n    if (this.registerForm.invalid) {\r\n      this.registerForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const participant = new Participant();\r\n    participant.name = this.registerForm.get('name').value;\r\n    participant.email = this.registerForm.get('email').value;\r\n    participant.phone = this.registerForm.get('phone').value;\r\n    participant.street = this.registerForm.get('street').value;\r\n    participant.zip = this.registerForm.get('zip').value;\r\n    participant.city = this.registerForm.get('city').value;\r\n    participant.eventId = this.selectedEvent.id;\r\n    this.eventService.addParticipant(participant).subscribe(() => {\r\n      this.successfullyRegistered = true;\r\n      this.registerForm.reset();\r\n    });\r\n  }\r\n}\r\n","<h2>Anmeldung zu Aktivität</h2>\r\n<div *ngIf=\"!successfullyRegistered && classOptions != null\">\r\n  <form (change)=\"selectClass($event.target.value)\">\r\n    <div class=\"form-group\">\r\n      <label for=\"classSelect\">In welcher Klasse bist du?</label>\r\n      <select class=\"form-control\" id=\"classSelect\">\r\n        <option>--- bitte auswählen ---</option>\r\n        <option *ngFor=\"let classOption of classOptions\">\r\n          {{ classOption }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div\r\n  *ngIf=\"\r\n    !successfullyRegistered &&\r\n    selectedClass != null &&\r\n    selectedClass != '--- bitte auswählen ---'\r\n  \"\r\n>\r\n  <p>\r\n    Registriere dich bitte für <b>maximal eine</b> der folgenden Aktivitäten:\r\n  </p>\r\n  <table style=\"width: 100%\">\r\n    <thead>\r\n      <tr>\r\n        <th\r\n          [ngStyle]=\"{ width: 100 / (week.events.length + 1) + '%' }\"\r\n          style=\"padding-left: 100px\"\r\n        >\r\n          KW\r\n        </th>\r\n        <th\r\n          [ngStyle]=\"{ width: 100 / (week.events.length + 1) + '%' }\"\r\n          style=\"text-align: center\"\r\n          *ngFor=\"let uniqueEvent of week.events\"\r\n        >\r\n          {{ uniqueEvent.displayName() }}\r\n          <br />\r\n          {{ uniqueEvent.displayTime() }}\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"week != null\">\r\n        <td style=\"padding-left: 100px\">{{ week.number }} (nächste Woche)</td>\r\n        <td *ngFor=\"let time of timeColumns\">\r\n          <div\r\n            *ngIf=\"eventAt(time, week.events) !== undefined\"\r\n            class=\"happening\"\r\n            [ngClass]=\"{\r\n              greyedOut: eventAt(time, week.events).isInPast(),\r\n              full:\r\n                eventAt(time, week.events).takenSeats >=\r\n                eventAt(time, week.events).maxSeats,\r\n              selected: eventAt(time, week.events) === selectedEvent\r\n            }\"\r\n            (click)=\"selectEvent(eventAt(time, week.events))\"\r\n          >\r\n            {{ eventAt(time, week.events).displayDate() }}<br />\r\n            <small\r\n              >{{ eventAt(time, week.events).takenSeats }} /\r\n              {{ eventAt(time, week.events).maxSeats }} Teilnehmer\r\n            </small>\r\n            <br />\r\n            <br />\r\n            <span *ngIf=\"!eventAt(time, week.events).isInPast()\">\r\n              <span\r\n                *ngIf=\"\r\n                  eventAt(time, week.events).maxSeats -\r\n                    eventAt(time, week.events).takenSeats >\r\n                  3\r\n                \"\r\n                class=\"badge badge-success top-right\"\r\n                >{{ availableSeatsText(eventAt(time, week.events)) }}</span\r\n              >\r\n              <span\r\n                *ngIf=\"\r\n                  eventAt(time, week.events).maxSeats -\r\n                    eventAt(time, week.events).takenSeats <=\r\n                    3 &&\r\n                  eventAt(time, week.events).maxSeats -\r\n                    eventAt(time, week.events).takenSeats >\r\n                    0\r\n                \"\r\n                class=\"badge badge-warning top-right\"\r\n                >{{ availableSeatsText(eventAt(time, week.events)) }}</span\r\n              >\r\n              <span\r\n                *ngIf=\"\r\n                  eventAt(time, week.events).maxSeats -\r\n                    eventAt(time, week.events).takenSeats <=\r\n                  0\r\n                \"\r\n                class=\"badge badge-danger top-right\"\r\n                >ausgebucht</span\r\n              >\r\n            </span>\r\n            <span *ngIf=\"eventAt(time, week.events).isInPast()\">\r\n              <span class=\"badge badge-secondary top-right\"\r\n                >bereits vergangen</span\r\n              >\r\n            </span>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <div style=\"margin-top: 40px\" [hidden]=\"selectedEvent === null\">\r\n    <div\r\n      [hidden]=\"selectedEvent && !selectedEvent.isInPast()\"\r\n      class=\"alert alert-secondary\"\r\n    >\r\n      Dieses Event liegt in der Vergangenheit. Keine Aktion möglich.\r\n    </div>\r\n\r\n    <div\r\n      [hidden]=\"\r\n        (selectedEvent && selectedEvent.isInPast()) ||\r\n        (selectedEvent && selectedEvent.takenSeats < selectedEvent.maxSeats)\r\n      \"\r\n      class=\"alert alert-danger\"\r\n    >\r\n      Dieses Event ist bereits leider ausgebucht!\r\n    </div>\r\n    <div\r\n      [hidden]=\"\r\n        (selectedEvent && selectedEvent.isInPast()) ||\r\n        (selectedEvent && selectedEvent.takenSeats >= selectedEvent.maxSeats)\r\n      \"\r\n    >\r\n      <h5>Angaben zu Teilnehmer:</h5>\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerParticipant()\">\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('name') }\"\r\n          >\r\n            <label for=\"name\">Name des Teilnehmers</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('email') }\"\r\n          >\r\n            <label for=\"email\">Email</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('phone') }\"\r\n          >\r\n            <label for=\"phone\">Telefonnummer</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"phone\"\r\n              type=\"phone\"\r\n              formControlName=\"phone\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('street') }\"\r\n          >\r\n            <label for=\"street\">Straße & Hausnummer</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"street\"\r\n              type=\"text\"\r\n              formControlName=\"street\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6 col-md-4\" [ngClass]=\"{ invalid: isInvalid('zip') }\">\r\n            <label for=\"zip\">PLZ</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"zip\"\r\n              type=\"text\"\r\n              formControlName=\"zip\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-6 col-md-4\"\r\n            [ngClass]=\"{ invalid: isInvalid('city') }\"\r\n          >\r\n            <label for=\"city\">Ort</label>\r\n            <br />\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"city\"\r\n              type=\"text\"\r\n              formControlName=\"city\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-12 col-md-8 form-check\"\r\n            *ngIf=\"consentText && consentText.length > 0\"\r\n            [ngClass]=\"{\r\n              invalid:\r\n                registerForm.touched &&\r\n                registerForm.get('consent').value === false\r\n            }\"\r\n            style=\"padding-top: 26px; padding-left: 1.25rem\"\r\n          >\r\n            <input\r\n              class=\"form-check-input\"\r\n              id=\"consent\"\r\n              type=\"checkbox\"\r\n              formControlName=\"consent\"\r\n              style=\"margin-left: 0px\"\r\n            />\r\n            <label\r\n              class=\"form-check-label\"\r\n              for=\"consent\"\r\n              style=\"margin-bottom: 0; margin-left: 1.25rem; cursor: pointer\"\r\n              >{{ consentText }}</label\r\n            >\r\n          </div>\r\n          <div class=\"col-12 col-md-4\">\r\n            <button\r\n              class=\"btn btn-block btn-success\"\r\n              type=\"submit\"\r\n              style=\"margin-top: 32px\"\r\n            >\r\n              Zum Event anmelden\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"successfullyRegistered\" class=\"alert alert-success successBox\">\r\n  Du hast dich erfolgreich zu <b>{{ selectedEvent.name }}</b> angemeldet!\r\n  <br />\r\n  <br />\r\n  Bitte beachte, dass du dich nicht für weitere Events in dieser Woche anmelden\r\n  kannst.\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  tenant: Tenant;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private tenantService: TenantService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.authenticationService.userValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // load the tenant information and redirect in case tenant path does not exist:\r\n    this.tenantService\r\n      .getByPath(this.route.snapshot.params.tenantPath)\r\n      .subscribe(null, error => {\r\n        if (\r\n          error === 'Not Found' ||\r\n          (error instanceof HttpErrorResponse && error.status === 404)\r\n        ) {\r\n          this.router.navigate(['fehler', 'account-not-found']);\r\n        }\r\n      });\r\n    this.tenantService.currentTenant.subscribe((tenant: Tenant) => {\r\n      if (tenant) {\r\n        this.tenant = tenant;\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl =\r\n          this.route.snapshot.queryParams['returnUrl'] ||\r\n          this.tenant.path + '/dashboard';\r\n      }\r\n    });\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  tenantPath(): string {\r\n    return this.route.snapshot.params.tenantPath;\r\n  }\r\n\r\n  onSubmit() {\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(\r\n        this.tenant.id,\r\n        this.loginForm.get('username').value,\r\n        this.loginForm.get('password').value\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(this.returnUrl.split('/'));\r\n        },\r\n        error => {\r\n          this.error = error;\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <h4 class=\"card-header\">{{ tenant.name }} - Interner Bereich</h4>\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Email</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"username\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{\r\n            'is-invalid': submitted && loginForm.get('username').errors\r\n          }\"\r\n        />\r\n        <div\r\n          *ngIf=\"submitted && loginForm.get('username').errors\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          <div *ngIf=\"loginForm.get('username').errors.required\">\r\n            Bitte Nutzername angeben\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Passwort</label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{\r\n            'is-invalid': submitted && loginForm.get('password').errors\r\n          }\"\r\n        />\r\n        <div\r\n          *ngIf=\"submitted && loginForm.get('password').errors\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          <div *ngIf=\"loginForm.get('password').errors.required\">\r\n            Bitte Passwort angeben\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n        <span\r\n          *ngIf=\"loading\"\r\n          class=\"spinner-border spinner-border-sm mr-1\"\r\n        ></span>\r\n        Login\r\n      </button>\r\n      <span\r\n        >noch kein Account?\r\n        <a routerLink=\"/{{tenantPath()}}/registrierung\">Hier registrieren</a></span\r\n      >\r\n      <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n        {{ error }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { User } from \"src/app/models/user\";\r\nimport { TenantService } from \"src/app/services/tenant.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: \"app-registration\",\r\n  templateUrl: \"./registration.component.html\",\r\n  styleUrls: [\"./registration.component.scss\"],\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  registrationForm: FormGroup;\r\n  error: string = null;\r\n  loading: boolean = false;\r\n  success: boolean = false;\r\n\r\n  constructor(\r\n    private tenantService: TenantService,\r\n    private route: ActivatedRoute,\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n    this.registrationForm = new FormGroup({\r\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n      name: new FormControl(\"\", Validators.required),\r\n      password: new FormControl(\"\", Validators.required),\r\n    });\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.registrationForm.get(formControlName).invalid &&\r\n      this.registrationForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.registrationForm.invalid) {\r\n      this.registrationForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const user = new User(this.registrationForm.get(\"email\").value);\r\n    user.name = this.registrationForm.get(\"name\").value;\r\n    user.password = this.registrationForm.get(\"password\").value;\r\n    this.tenantService.addUser(user, this.tenantService.currentTenantValue.id).subscribe((createdUser: User) => {\r\n      // if the user is active immediatly, log him in. else, show a notification\r\n      if (createdUser.active) {\r\n        this.authenticationService\r\n          .login(\r\n            this.tenantService.currentTenantValue.id,\r\n            user.email,\r\n            user.password\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              this.router.navigate([this.route.snapshot.params.tenantPath, 'dashboard']);\r\n            }\r\n          );\r\n      } else {\r\n        this.success = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!success\">\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email</label>\r\n    <input\r\n      id=\"email\"\r\n      type=\"email\"\r\n      formControlName=\"email\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{\r\n        'is-invalid': isInvalid('email')\r\n      }\"\r\n    />\r\n    <div *ngIf=\"isInvalid('email')\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"isInvalid('email')\">\r\n        Bitte Email angeben\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name</label>\r\n    <input\r\n      id=\"name\"\r\n      type=\"text\"\r\n      formControlName=\"name\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{\r\n        'is-invalid': isInvalid('name')\r\n      }\"\r\n    />\r\n    <div *ngIf=\"isInvalid('name')\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"isInvalid('name')\">\r\n        Bitte Name angeben\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Passwort</label>\r\n    <input\r\n      id=\"password\"\r\n      type=\"password\"\r\n      formControlName=\"password\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{\r\n        'is-invalid': isInvalid('password')\r\n      }\"\r\n    />\r\n    <div *ngIf=\"isInvalid('password')\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"isInvalid('password')\">\r\n        Bitte Passwort angeben\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n    Registrieren\r\n  </button>\r\n  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n    {{ error }}\r\n  </div>\r\n</form>\r\n\r\n<div *ngIf=\"success\" class=\"alert alert-success mt-3 mb-0\">\r\n  Deine Registrierung war erfolgreich, du wirst in Kürze von einem Admin freigeschaltet. Bis dahin kannst du dich noch nicht anmelden.\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { TenantService } from 'src/app/services/tenant.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Tenant } from 'src/app/models/tenant';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tenant-registration',\r\n  templateUrl: './tenant-registration.component.html',\r\n  styleUrls: ['./tenant-registration.component.scss'],\r\n})\r\nexport class TenantRegistrationComponent implements OnInit {\r\n  registrationForm: FormGroup;\r\n  error: string = null;\r\n  loading: boolean = false;\r\n  currentSubscription: Subscription = null;\r\n  pathCheck = {\r\n    pathTaken: false,\r\n  };\r\n\r\n  constructor(private tenantService: TenantService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrationForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required]),\r\n      path: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(40),\r\n        Validators.pattern('[a-z-]{0,40}'),\r\n      ]),\r\n      consentText: new FormControl(''),\r\n    });\r\n  }\r\n\r\n  checkPath(): void {\r\n    this.tenantService.checkPath(\r\n      this.registrationForm.get('path').value,\r\n      this.pathCheck\r\n    );\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.registrationForm.get(formControlName).invalid &&\r\n      this.registrationForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.registrationForm.invalid) {\r\n      this.registrationForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    // create the tenant. aftewards, forward the user to the registration for the personal login\r\n    const name = this.registrationForm.get('name').value;\r\n    const path = this.registrationForm.get('path').value;\r\n    const tenantToCreate = new Tenant(name, path);\r\n    tenantToCreate.consentText = this.registrationForm.get('consentText').value;\r\n    this.tenantService.create(tenantToCreate).subscribe((tenant: Tenant) => {\r\n      this.router.navigate([tenant.path, 'registrierung']);\r\n    });\r\n  }\r\n}\r\n","<h1>Jetzt Account anlegen</h1>\r\n<p>\r\n  Legen Sie sich in wenigen Minuten Ihre eigene kostenlose Terminbuchungs-Seite\r\n  an, mit DSGVO-konformer Datensparsamkeit und automatischer -löschung.\r\n</p>\r\n<hr />\r\n<form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-md-6\">\r\n      Der Name Ihres Accounts wird auf der Website angezeigt und beschreibt Ihre\r\n      Organisation. Bspw.: \"CVJM Gärtringen\"\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name des Accounts</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          formControlName=\"name\"\r\n          class=\"form-control\"\r\n          [ngClass]=\"{\r\n            'is-invalid': isInvalid('name')\r\n          }\"\r\n        />\r\n        <div *ngIf=\"isInvalid('name')\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"isInvalid('name')\">\r\n            Bitte einen kurzen beschreibenden Namen angeben\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      Bitte einen Pfad angeben, der dann in der URL zu sehen sein wird. Die\r\n      maximale Länge beträgt 40 Zeichen. Nur Kleinbuchstaben und Trennstriche\r\n      (-) sind erlaubt.\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"path\">Pfad</label>\r\n        <input\r\n          id=\"path\"\r\n          type=\"text\"\r\n          formControlName=\"path\"\r\n          class=\"form-control\"\r\n          (keyup)=\"checkPath()\"\r\n          [ngClass]=\"{\r\n            'is-invalid': pathCheck.pathTaken || isInvalid('path'),\r\n            'is-valid':\r\n              !pathCheck.pathTaken && registrationForm.get('path').valid\r\n          }\"\r\n        />\r\n        <div *ngIf=\"pathCheck.pathTaken\" class=\"invalid-feedback\">\r\n          Dieser Pfad ist bereits leider vergeben\r\n        </div>\r\n        <div class=\"valid-feedback\">\r\n          <i class=\"fas fa-check\"></i> Pfad ist noch frei und kann benutzt\r\n          werden!\r\n        </div>\r\n        <div *ngIf=\"isInvalid('path')\" class=\"invalid-feedback\">\r\n          Bitte einen gültigen Pfad angeben\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      Sie können hier <b>optional</b> eine Einwilligungserklärung setzen, die\r\n      die Teilnehmer bei Anmeldung zu einem Event akzeptieren müssen. Diesen\r\n      Text können Sie später noch ändern.\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"consent\">Einwilligungserklärung</label>\r\n        <textarea\r\n          id=\"consent\"\r\n          formControlName=\"consentText\"\r\n          class=\"form-control\"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button\r\n    [disabled]=\"loading\"\r\n    class=\"btn btn-primary\"\r\n    [disabled]=\"registrationForm.invalid\"\r\n  >\r\n    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n    Account erstellen\r\n  </button>\r\n  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">\r\n    {{ error }}\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Tenant } from '../../models/tenant';\r\nimport { User } from 'src/app/models/user';\r\nimport { TenantService } from '../../services/tenant.service';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { clone, reject, findIndex } from 'lodash';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-tenant',\r\n  templateUrl: './tenant.component.html',\r\n  styleUrls: ['./tenant.component.scss'],\r\n})\r\nexport class TenantComponent implements OnInit, OnDestroy {\r\n  tenant: Tenant = null;\r\n  users: User[] = new Array<User>();\r\n  tenantForm: FormGroup;\r\n  logoValidationError: string = null;\r\n  private tenantSubscription: Subscription;\r\n  pathCheck = {\r\n    pathTaken: false,\r\n  };\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private tenantService: TenantService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // load the tenant information and redirect in case tenant path does not exist:\r\n    this.tenantService\r\n      .getByPath(this.route.snapshot.params.tenantPath)\r\n      .subscribe(null, error => {\r\n        console.log(error);\r\n        if (\r\n          error === 'Not Found' ||\r\n          (error instanceof HttpErrorResponse && error.status === 404)\r\n        ) {\r\n          this.router.navigate(['fehler', 'account-not-found']);\r\n        }\r\n      });\r\n    this.tenantForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      path: new FormControl('', Validators.required),\r\n      consentText: new FormControl(''),\r\n    });\r\n    this.tenantSubscription = this.tenantService.currentTenant.subscribe(\r\n      (tenant: Tenant) => {\r\n        if (tenant) {\r\n          // load tenant details\r\n          this.tenantService.get(tenant.id).subscribe((tenant: Tenant) => {\r\n            this.tenant = tenant;\r\n            this.tenantForm.get('name').setValue(this.tenant.name);\r\n            this.tenantForm.get('path').setValue(this.tenant.path);\r\n            this.tenantForm\r\n              .get('consentText')\r\n              .setValue(this.tenant.consentText);\r\n          });\r\n          // load users for this tenant\r\n          this.tenantService.getUsers(tenant.id).subscribe((users: User[]) => {\r\n            this.users = users;\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.tenantService.load(this.route.snapshot.params.tenantPath);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.tenantSubscription) {\r\n      this.tenantSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  isInvalid(formControlName: string): boolean {\r\n    return (\r\n      this.tenantForm.get(formControlName).invalid &&\r\n      this.tenantForm.get(formControlName).touched\r\n    );\r\n  }\r\n\r\n  activate(user: User): void {\r\n    this.userService.activate(user.id).subscribe((activatedUser: User) => {\r\n      const index = findIndex(this.users, { id: user.id });\r\n      // Replace item at index using native splice\r\n      this.users.splice(index, 1, activatedUser);\r\n    });\r\n  }\r\n\r\n  updateTenant(): void {\r\n    if (this.tenantForm.invalid || this.pathCheck.pathTaken) {\r\n      this.tenantForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const updatedTenant = clone(this.tenant);\r\n    updatedTenant.name = this.tenantForm.get('name').value;\r\n    updatedTenant.path = this.tenantForm.get('path').value;\r\n    updatedTenant.consentText = this.tenantForm.get('consentText').value;\r\n    // update the logo from the current tenant object\r\n    updatedTenant.logo = this.tenant.logo;\r\n    const pathChanged = updatedTenant.path !== this.tenant.path;\r\n    this.tenantService.update(updatedTenant).subscribe((tenant: Tenant) => {\r\n      if (pathChanged) {\r\n        // the path was changed, reload the page\r\n        this.router.navigate([tenant.path, 'verwaltung']);\r\n      } else {\r\n        this.tenant = tenant;\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(user: User): void {\r\n    if (confirm('Wirklich diesen Nutzer löschen?')) {\r\n      this.userService.delete(user.id).subscribe(() => {\r\n        this.users = reject(this.users, user);\r\n        // if the user deleted himself, log out explicitly:\r\n        if (user.id === this.authService.userValue.id) {\r\n          this.authService.logout();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteTenant(): void {\r\n    if (confirm('Wirklich den gesamten Account löschen?')) {\r\n      this.tenantService.delete(this.tenant.id).subscribe(() => {\r\n        alert('Account gelöscht!');\r\n        this.authService.logout();\r\n      });\r\n    }\r\n  }\r\n\r\n  checkPath(): void {\r\n    // only check the path if it is different than the already-existing one\r\n    const desiredNewPath = this.tenantForm.get('path').value;\r\n    if (desiredNewPath !== this.tenant.path) {\r\n      this.tenantService.checkPath(\r\n        this.tenantForm.get('path').value,\r\n        this.pathCheck\r\n      );\r\n    }\r\n  }\r\n\r\n  setNewLogo(newLogo: any): void {\r\n    this.logoValidationError = null;\r\n    const newLogoFile = <File>newLogo.target.files[0];\r\n    // check that image does not exceed maximum size\r\n    // 1024 bytes = 1 kB\r\n    const kiloBytes = Math.round(newLogoFile.size / 1024);\r\n    if (kiloBytes > 500) {\r\n      // 1024 kiloBytes = 1 MB\r\n      const fileSize =\r\n        kiloBytes / 1024 >= 1\r\n          ? `${(kiloBytes / 1024).toFixed(2)} MB`\r\n          : `${kiloBytes} kB`;\r\n      this.logoValidationError = `Das gewählte Bild ist zu groß (${fileSize}). Die maximale Größe eines Logos ist 500 kB`;\r\n      return;\r\n    }\r\n    var myReader: FileReader = new FileReader();\r\n    myReader.onloadend = e => {\r\n      this.tenant.logo = <string>myReader.result;\r\n    };\r\n    myReader.readAsDataURL(newLogoFile);\r\n  }\r\n\r\n  /**\r\n   * simply trigger the browser to open the file select modal\r\n   */\r\n  selectNewLogo(): void {\r\n    document.getElementById('logo_file_input').click();\r\n  }\r\n}\r\n","<h2>Verwaltung</h2>\r\n<p>\r\n  Verwalten Sie hier den Namen und den Pfad Ihrer Organisation. Zudem können Sie\r\n  ein Logo hinterlegen und Administratoren verwalten.\r\n</p>\r\n\r\n<hr />\r\n<h4>Organisation</h4>\r\n<form [formGroup]=\"tenantForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-md-6\" [ngClass]=\"{ invalid: isInvalid('name') }\">\r\n      <label for=\"name\">Name</label>\r\n      <br />\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n      />\r\n    </div>\r\n    <div class=\"col-12 col-md-6\" [ngClass]=\"{ invalid: isInvalid('path') }\">\r\n      <label for=\"name\">Pfad</label>\r\n      <br />\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"path\"\r\n        type=\"text\"\r\n        formControlName=\"path\"\r\n        (keyup)=\"checkPath()\"\r\n        [ngClass]=\"{\r\n          'is-invalid': pathCheck.pathTaken\r\n        }\"\r\n      />\r\n      <div *ngIf=\"pathCheck.pathTaken\" class=\"invalid-feedback\">\r\n        Dieser Pfad ist bereits leider vergeben\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <label for=\"consent\">Einwilligungserklärung</label>\r\n      <br />\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"consent\"\r\n        formControlName=\"consentText\"\r\n      ></textarea>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n      <label (click)=\"selectNewLogo()\">Logo für den Account</label>\r\n      <div class=\"form-group\">\r\n        <div *ngIf=\"tenant !== null && tenant.logo !== null\">\r\n          <img\r\n            class=\"plevents-tenant-logo plevents-tenant-logo-hover\"\r\n            [src]=\"tenant.logo\"\r\n            (click)=\"selectNewLogo()\"\r\n          />\r\n          <br />\r\n          <small\r\n            ><i class=\"clickable\" (click)=\"selectNewLogo()\"\r\n              >neues Logo auswählen</i\r\n            ></small\r\n          >\r\n        </div>\r\n        <div\r\n          class=\"plevents-tenant-logo plevents-tenant-logo-hover\"\r\n          [hidden]=\"tenant !== null && tenant.logo !== null\"\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            id=\"logo_file_input\"\r\n            accept=\".jpg,.jpeg,.png\"\r\n            (change)=\"setNewLogo($event)\"\r\n          />\r\n          <label for=\"logo_file_input\">Logo auswählen</label>\r\n        </div>\r\n        <div class=\"invalid-logo\" *ngIf=\"logoValidationError !== null\">\r\n          {{ logoValidationError }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 col-md-3 offset-md-9\">\r\n    <button\r\n      class=\"btn btn-block btn-outline-success\"\r\n      (click)=\"updateTenant()\"\r\n      style=\"margin-top: 32px\"\r\n    >\r\n      Speichern\r\n    </button>\r\n  </div>\r\n</form>\r\n\r\n<hr />\r\n\r\n<h4>Administratoren</h4>\r\n<div *ngFor=\"let user of users\" class=\"row emailEntry\">\r\n  <div class=\"col-8\">\r\n    {{ user.name }}<br />\r\n    <small\r\n      ><a href=\"mailto:{{ user.email }}\">{{ user.email }}</a></small\r\n    >\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <button\r\n      *ngIf=\"!user.active\"\r\n      class=\"float-right btn btn-sm btn-success ml-2\"\r\n      (click)=\"activate(user)\"\r\n    >\r\n      Zulassen\r\n    </button>\r\n    <button\r\n      class=\"float-right btn btn-sm btn-outline-danger\"\r\n      (click)=\"delete(user)\"\r\n    >\r\n      Admin löschen\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<hr />\r\n\r\n<h4>Löschung</h4>\r\n<div class=\"row\">\r\n  <div class=\"col-12 col-md-8\">\r\n    Falls Sie Ihren Account und Ihre Organisation nicht mehr benötigen, können\r\n    Sie hier jegliche Daten löschen. Hierzu gehören:\r\n    <ul>\r\n      <li>alle Admin Accounts</li>\r\n      <li>alle Events</li>\r\n      <li>alle Teilnehmerdaten</li>\r\n    </ul>\r\n    Die Löschung erfolgt sofort und kann <b>nicht</b> rückgängig gemacht werden!\r\n  </div>\r\n  <div class=\"col-12 col-md-4\">\r\n    <button\r\n      class=\"btn btn-block btn-sm btn-outline-danger\"\r\n      (click)=\"deleteTenant()\"\r\n    >\r\n      Organisation löschen\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  CanActivate,\r\n} from \"@angular/router\";\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const user = this.authenticationService.userValue;\r\n    if (user) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate([route.params.tenantPath, \"login\"], {\r\n      queryParams: { returnUrl: state.url },\r\n    });\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add header with basic auth credentials if user is logged in and request is to the api url\r\n    const user = this.authenticationService.userValue;\r\n    const isLoggedIn = user && user.authdata;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Basic ${user.authdata}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((err) => {\r\n        if (err.status === 401) {\r\n          // auto logout if 401 response returned from api\r\n          this.authenticationService.logout();\r\n        }\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { EmailI } from \"../../../../common/email\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Adapter } from \"../helpers/adapter\";\r\n\r\nexport class Email implements EmailI {\r\n  id: number;\r\n  address: string;\r\n\r\n  constructor(address: string, id?: number) {\r\n    this.address = address;\r\n    if (id) {\r\n      this.id = id;\r\n    }\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmailAdapter implements Adapter<Email> {\r\n  adapt(item: any): Email {\r\n    return new Email(item.address, item.id);\r\n  }\r\n}\r\n","import { EventI } from '../../../../common/event';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport * as moment from 'moment';\r\nimport { each, find } from 'lodash';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport class Event implements EventI {\r\n  id?: string;\r\n  date: Date;\r\n  maxSeats: number;\r\n  takenSeats: number;\r\n  name: string;\r\n  targetClass: string;\r\n  weekDay: number;\r\n  // time in seconds on that day\r\n  time: number;\r\n  disabled: boolean;\r\n\r\n  downloadLink(): string {\r\n    return `${environment.apiUrl}/secure/events/${this.id}/pdf`;\r\n  }\r\n\r\n  displayName(): string {\r\n    if (this.targetClass) {\r\n      return `${this.name} (Klasse ${this.targetClass})`;\r\n    }\r\n    return this.name;\r\n  }\r\n\r\n  displayTime(): string {\r\n    const m = moment(this.date);\r\n    return m.format('ddd HH:mm');\r\n  }\r\n\r\n  displayDate(): string {\r\n    const m = moment(this.date);\r\n    return m.format('DD.MM');\r\n  }\r\n\r\n  isInPast(): boolean {\r\n    const now = moment();\r\n    return now.isAfter(moment(this.date));\r\n  }\r\n\r\n  static unique(events: Event[]): Event[] {\r\n    const uniqueEvents = new Array<Event>();\r\n    each(events, (event: Event) => {\r\n      const identicalEvent = find(uniqueEvents, (uniqueEvent: Event) => {\r\n        return (\r\n          uniqueEvent.name === event.name &&\r\n          uniqueEvent.weekDay === event.weekDay &&\r\n          uniqueEvent.targetClass === event.targetClass &&\r\n          uniqueEvent.time === event.time\r\n        );\r\n      });\r\n      if (identicalEvent === undefined) {\r\n        uniqueEvents.push(event);\r\n      }\r\n    });\r\n    return uniqueEvents;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventAdapter implements Adapter<Event> {\r\n  adapt(item: any): Event {\r\n    const event = new Event();\r\n    event.id = item.id;\r\n    event.name = item.name;\r\n    event.targetClass = item.targetClass;\r\n    const m = moment(item.date);\r\n    event.date = m.toDate();\r\n    // compute the week day and the time in seconds on that day:\r\n    event.weekDay = m.isoWeekday();\r\n    event.time = m.hours() / 60 + m.minutes();\r\n    event.maxSeats = item.maxSeats;\r\n    event.takenSeats = item.takenSeats;\r\n    event.disabled = item.disabled;\r\n    return event;\r\n  }\r\n}\r\n","import { ParticipantI } from '../../../../common/participant';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\n\r\nexport class Participant implements ParticipantI {\r\n  email: string;\r\n  phone: string;\r\n  name: string;\r\n  street: string;\r\n  zip: string;\r\n  city: string;\r\n  eventId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ParticipantAdapter implements Adapter<Participant> {\r\n  adapt(item: any): Participant {\r\n    const participant = new Participant();\r\n    participant.name = item.name;\r\n    participant.email = item.email;\r\n    participant.phone = item.phone;\r\n    participant.street = item.street;\r\n    participant.zip = item.zip;\r\n    participant.city = item.city;\r\n    participant.eventId = item.eventId;\r\n    return participant;\r\n  }\r\n}\r\n","import { TenantI } from '../../../../common/tenant';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport class Tenant implements TenantI {\r\n  id?: string;\r\n  name: string;\r\n  logo: string;\r\n  path: string;\r\n  consentText: string;\r\n\r\n  constructor(name: string, path: string) {\r\n    this.name = name;\r\n    this.path = path;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantAdapter implements Adapter<Tenant> {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  adapt(item: any): Tenant {\r\n    const t = new Tenant(item.name, item.path);\r\n    t.id = item.id;\r\n    t.consentText = item.consentText;\r\n    if (item.logo && item.logo.length > 0) {\r\n      t.logo = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n        item.logo\r\n      ) as string;\r\n    } else {\r\n      t.logo = null;\r\n    }\r\n    return t;\r\n  }\r\n}\r\n","import { UserI } from '../../../../common/user';\r\nimport { Injectable } from '@angular/core';\r\nimport { Adapter } from '../helpers/adapter';\r\nimport { Tenant } from './tenant';\r\n\r\nexport class User implements UserI {\r\n  id: string;\r\n  tenantId: string;\r\n  email: string;\r\n  name: string;\r\n  password: string;\r\n  authdata?: string;\r\n  active: boolean;\r\n\r\n  constructor(email: string) {\r\n    this.email = email;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAdapter implements Adapter<User> {\r\n  adapt(item: any): User {\r\n    const u = new User(item.email);\r\n    u.id = item.id;\r\n    u.name = item.name;\r\n    u.tenantId = item.tenantId;\r\n    u.active = item.active;\r\n    return u;\r\n  }\r\n}\r\n","import { Event } from \"./event\";\r\n\r\nexport class Week {\r\n  number: number;\r\n  events: Event[] = new Array<Event>();\r\n\r\n  constructor(number: number) {\r\n    this.number = number;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserI } from '../../../../common/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\nimport { TenantService } from './tenant.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  private userSubject: BehaviorSubject<UserI>;\r\n  public user: Observable<UserI>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private tenantService: TenantService\r\n  ) {\r\n    this.userSubject = new BehaviorSubject<UserI>(\r\n      JSON.parse(localStorage.getItem('user'))\r\n    );\r\n    this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): UserI {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  login(tenantId: string, email: string, password: string) {\r\n    const user = new User(email);\r\n    user.password = password;\r\n    user.tenantId = tenantId;\r\n    return this.http\r\n      .post<User>(`${environment.apiUrl}/authenticate`, user)\r\n      .pipe(\r\n        map((loggedInUser: User) => {\r\n          // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n          loggedInUser.authdata = window.btoa(email + ':' + password);\r\n          localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n          this.userSubject.next(loggedInUser);\r\n          return loggedInUser;\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n    this.userSubject.next(null);\r\n    this.router.navigate([this.tenantService.currentTenantValue.path, 'login']);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { EmailAdapter, Email } from \"../models/email\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n@Injectable({ providedIn: \"root\" })\r\nexport class EmailService {\r\n  constructor(private http: HttpClient, private adapter: EmailAdapter) {}\r\n\r\n  getEmails(): Observable<Email[]> {\r\n    return this.http.get(`${environment.apiUrl}/secure/emails`).pipe(\r\n      // Adapt the raw items\r\n      map((data: any[]) => data.map((item) => this.adapter.adapt(item)))\r\n    );\r\n  }\r\n\r\n  deleteEmail(id: number): Observable<any> {\r\n    console.log(\"About to delete: \", id);\r\n    return this.http.delete(`${environment.apiUrl}/secure/emails/${id}`);\r\n  }\r\n\r\n  createEmail(address: string): Observable<Email> {\r\n    return this.http\r\n      .post(`${environment.apiUrl}/secure/emails`, { mail: address })\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data) => this.adapter.adapt(data))\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Event, EventAdapter } from '../models/event';\r\nimport { EventI } from '../../../../common/event';\r\nimport { ParticipantI } from '../../../../common/participant';\r\nimport { Participant, ParticipantAdapter } from '../models/participant';\r\nimport { saveAs } from 'file-saver';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private adapter: EventAdapter,\r\n    private participantAdapter: ParticipantAdapter\r\n  ) {}\r\n\r\n  /**\r\n   * get all events for a specific tenant\r\n   * @param tenantId\r\n   */\r\n  getEvents(tenantId: string): Observable<Event[]> {\r\n    return this.http\r\n      .get(`${environment.apiUrl}/tenants/${tenantId}/events`)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) => data.map(item => this.adapter.adapt(item)))\r\n      );\r\n  }\r\n\r\n  createEvent(event: EventI): Observable<Event> {\r\n    return this.http.post(`${environment.apiUrl}/secure/events`, event).pipe(\r\n      // Adapt the raw items\r\n      map(data => this.adapter.adapt(data))\r\n    );\r\n  }\r\n\r\n  deleteEvent(id: string): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}/secure/events/${id}`);\r\n  }\r\n\r\n  setDisabled(id: string, disabled: boolean): Observable<Event> {\r\n    return this.http\r\n      .put(\r\n        `${environment.apiUrl}/secure/events/${id}/disabled/${disabled}`,\r\n        event\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(data => this.adapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  addParticipant(participant: ParticipantI): Observable<Participant> {\r\n    return this.http\r\n      .post(\r\n        `${environment.apiUrl}/events/${participant.eventId}/participant`,\r\n        participant\r\n      )\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(data => this.participantAdapter.adapt(data))\r\n      );\r\n  }\r\n\r\n  downloadPdf(event: Event): void {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Accept', 'application/pdf');\r\n    this.http\r\n      .get(event.downloadLink(), {\r\n        headers: headers,\r\n        responseType: 'blob',\r\n      })\r\n      .subscribe(pdfBlob => {\r\n        const blob = new Blob([pdfBlob], { type: 'application/pdf' });\r\n        saveAs(blob, 'Teilnehmerliste.pdf');\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { TenantAdapter, Tenant } from '../models/tenant';\r\nimport { UserAdapter, User } from '../models/user';\r\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TenantService {\r\n  private currentTenantSubject: BehaviorSubject<Tenant>;\r\n  public currentTenant: Observable<Tenant>;\r\n  private checkPathSubscription: Subscription = null;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tenantAdapter: TenantAdapter,\r\n    private userAdapter: UserAdapter\r\n  ) {\r\n    this.currentTenantSubject = new BehaviorSubject<Tenant>(null);\r\n    this.currentTenant = this.currentTenantSubject.asObservable();\r\n  }\r\n\r\n  public get currentTenantValue(): Tenant {\r\n    return this.currentTenantSubject.value;\r\n  }\r\n\r\n  /**\r\n   * loads the tenant for the given path.\r\n   * if the tenant is already loaded, it is not requested at the backend again.\r\n   * @param tenantPath\r\n   */\r\n  load(tenantPath: string) {\r\n    if (\r\n      this.currentTenantValue &&\r\n      this.currentTenantValue.path === tenantPath\r\n    ) {\r\n      this.currentTenantSubject.next(this.currentTenantValue);\r\n    } else {\r\n      // we must load the tenant from server-side\r\n      this.getByPath(tenantPath).subscribe((tenant: Tenant) => {\r\n        this.currentTenantSubject.next(tenant);\r\n      });\r\n    }\r\n  }\r\n\r\n  getByPath(tenantPath: string): Observable<Tenant> {\r\n    return this.http\r\n      .get<User>(`${environment.apiUrl}/tenants/${tenantPath}`)\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.tenantAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  get(tenantId: string): Observable<Tenant> {\r\n    return this.http\r\n      .get<User>(`${environment.apiUrl}/secure/tenants/${tenantId}`)\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.tenantAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  update(tenant: Tenant): Observable<Tenant> {\r\n    return this.http\r\n      .put<User>(`${environment.apiUrl}/secure/tenants/${tenant.id}`, tenant)\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.tenantAdapter.adapt(item)),\r\n        tap((tenant: Tenant) => {\r\n          if (tenant.id === this.currentTenantValue.id) {\r\n            this.currentTenantSubject.next(tenant);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  create(tenant: Tenant): Observable<Tenant> {\r\n    return this.http.post<User>(`${environment.apiUrl}/tenants`, tenant).pipe(\r\n      // Adapt the raw item\r\n      map(item => this.tenantAdapter.adapt(item))\r\n    );\r\n  }\r\n\r\n  delete(tenantId: string): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}/secure/tenants/${tenantId}`);\r\n  }\r\n\r\n  getUsers(tenantId: string): Observable<User[]> {\r\n    return this.http\r\n      .get<User[]>(`${environment.apiUrl}/secure/tenants/${tenantId}/users`)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map((data: any[]) => data.map(item => this.userAdapter.adapt(item)))\r\n      );\r\n  }\r\n\r\n  addUser(user: User, tenantId: string): Observable<User> {\r\n    return this.http\r\n      .post<User[]>(`${environment.apiUrl}/tenants/${tenantId}/users`, user)\r\n      .pipe(\r\n        // Adapt the raw items\r\n        map(item => this.userAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * will check if a given path is already taken by someone. the result (true|false) will be set on the parameter variable \"checkResultReference\"\r\n   * @param pathToCheck\r\n   */\r\n  checkPath(\r\n    pathToCheck: string,\r\n    checkResultReference: { pathTaken: boolean }\r\n  ): void {\r\n    // unsubscribe from any potential previous request:\r\n    if (this.checkPathSubscription) {\r\n      this.checkPathSubscription.unsubscribe();\r\n    }\r\n    this.checkPathSubscription = this.getByPath(pathToCheck).subscribe(\r\n      potentiallyExistingTenant => {\r\n        // now check if a tenant exists:\r\n        if (\r\n          potentiallyExistingTenant &&\r\n          potentiallyExistingTenant.path === pathToCheck\r\n        ) {\r\n          checkResultReference.pathTaken = true;\r\n          this.checkPathSubscription.unsubscribe();\r\n          this.checkPathSubscription = null;\r\n        } else {\r\n          checkResultReference.pathTaken = false;\r\n          this.checkPathSubscription.unsubscribe();\r\n          this.checkPathSubscription = null;\r\n        }\r\n      },\r\n      error => {\r\n        checkResultReference.pathTaken = false;\r\n        this.checkPathSubscription.unsubscribe();\r\n        this.checkPathSubscription = null;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserAdapter, User } from '../models/user';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  constructor(private http: HttpClient, private userAdapter: UserAdapter) {}\r\n\r\n  delete(userId: string): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}/secure/users/${userId}`);\r\n  }\r\n\r\n  activate(userId: string): Observable<User> {\r\n    return this.http\r\n      .put(`${environment.apiUrl}/secure/users/${userId}/active/true`, null)\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.userAdapter.adapt(item))\r\n      );\r\n  }\r\n\r\n  deactivate(userId: string): Observable<User> {\r\n    return this.http\r\n      .put(`${environment.apiUrl}/secure/users/${userId}/active/false`, null)\r\n      .pipe(\r\n        // Adapt the raw item\r\n        map(item => this.userAdapter.adapt(item))\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:4201\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}